function o4(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();var Do=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function lC(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function i4(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var qE={exports:{}},L0={},KE={exports:{}},ft={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var mf=Symbol.for("react.element"),a4=Symbol.for("react.portal"),l4=Symbol.for("react.fragment"),u4=Symbol.for("react.strict_mode"),c4=Symbol.for("react.profiler"),h4=Symbol.for("react.provider"),d4=Symbol.for("react.context"),p4=Symbol.for("react.forward_ref"),f4=Symbol.for("react.suspense"),m4=Symbol.for("react.memo"),g4=Symbol.for("react.lazy"),AN=Symbol.iterator;function y4(n){return n===null||typeof n!="object"?null:(n=AN&&n[AN]||n["@@iterator"],typeof n=="function"?n:null)}var XE={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},YE=Object.assign,QE={};function hh(n,e,t){this.props=n,this.context=e,this.refs=QE,this.updater=t||XE}hh.prototype.isReactComponent={};hh.prototype.setState=function(n,e){if(typeof n!="object"&&typeof n!="function"&&n!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")};hh.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")};function ZE(){}ZE.prototype=hh.prototype;function uC(n,e,t){this.props=n,this.context=e,this.refs=QE,this.updater=t||XE}var cC=uC.prototype=new ZE;cC.constructor=uC;YE(cC,hh.prototype);cC.isPureReactComponent=!0;var DN=Array.isArray,JE=Object.prototype.hasOwnProperty,hC={current:null},eR={key:!0,ref:!0,__self:!0,__source:!0};function tR(n,e,t){var s,r={},o=null,i=null;if(e!=null)for(s in e.ref!==void 0&&(i=e.ref),e.key!==void 0&&(o=""+e.key),e)JE.call(e,s)&&!eR.hasOwnProperty(s)&&(r[s]=e[s]);var a=arguments.length-2;if(a===1)r.children=t;else if(1<a){for(var l=Array(a),u=0;u<a;u++)l[u]=arguments[u+2];r.children=l}if(n&&n.defaultProps)for(s in a=n.defaultProps,a)r[s]===void 0&&(r[s]=a[s]);return{$$typeof:mf,type:n,key:o,ref:i,props:r,_owner:hC.current}}function x4(n,e){return{$$typeof:mf,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}function dC(n){return typeof n=="object"&&n!==null&&n.$$typeof===mf}function w4(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(t){return e[t]})}var ON=/\/+/g;function Qw(n,e){return typeof n=="object"&&n!==null&&n.key!=null?w4(""+n.key):e.toString(36)}function Zg(n,e,t,s,r){var o=typeof n;(o==="undefined"||o==="boolean")&&(n=null);var i=!1;if(n===null)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(n.$$typeof){case mf:case a4:i=!0}}if(i)return i=n,r=r(i),n=s===""?"."+Qw(i,0):s,DN(r)?(t="",n!=null&&(t=n.replace(ON,"$&/")+"/"),Zg(r,e,t,"",function(u){return u})):r!=null&&(dC(r)&&(r=x4(r,t+(!r.key||i&&i.key===r.key?"":(""+r.key).replace(ON,"$&/")+"/")+n)),e.push(r)),1;if(i=0,s=s===""?".":s+":",DN(n))for(var a=0;a<n.length;a++){o=n[a];var l=s+Qw(o,a);i+=Zg(o,e,t,l,r)}else if(l=y4(n),typeof l=="function")for(n=l.call(n),a=0;!(o=n.next()).done;)o=o.value,l=s+Qw(o,a++),i+=Zg(o,e,t,l,r);else if(o==="object")throw e=String(n),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return i}function gg(n,e,t){if(n==null)return n;var s=[],r=0;return Zg(n,s,"","",function(o){return e.call(t,o,r++)}),s}function v4(n){if(n._status===-1){var e=n._result;e=e(),e.then(function(t){(n._status===0||n._status===-1)&&(n._status=1,n._result=t)},function(t){(n._status===0||n._status===-1)&&(n._status=2,n._result=t)}),n._status===-1&&(n._status=0,n._result=e)}if(n._status===1)return n._result.default;throw n._result}var Xs={current:null},Jg={transition:null},b4={ReactCurrentDispatcher:Xs,ReactCurrentBatchConfig:Jg,ReactCurrentOwner:hC};function nR(){throw Error("act(...) is not supported in production builds of React.")}ft.Children={map:gg,forEach:function(n,e,t){gg(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return gg(n,function(){e++}),e},toArray:function(n){return gg(n,function(e){return e})||[]},only:function(n){if(!dC(n))throw Error("React.Children.only expected to receive a single React element child.");return n}};ft.Component=hh;ft.Fragment=l4;ft.Profiler=c4;ft.PureComponent=uC;ft.StrictMode=u4;ft.Suspense=f4;ft.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=b4;ft.act=nR;ft.cloneElement=function(n,e,t){if(n==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var s=YE({},n.props),r=n.key,o=n.ref,i=n._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,i=hC.current),e.key!==void 0&&(r=""+e.key),n.type&&n.type.defaultProps)var a=n.type.defaultProps;for(l in e)JE.call(e,l)&&!eR.hasOwnProperty(l)&&(s[l]=e[l]===void 0&&a!==void 0?a[l]:e[l])}var l=arguments.length-2;if(l===1)s.children=t;else if(1<l){a=Array(l);for(var u=0;u<l;u++)a[u]=arguments[u+2];s.children=a}return{$$typeof:mf,type:n.type,key:r,ref:o,props:s,_owner:i}};ft.createContext=function(n){return n={$$typeof:d4,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},n.Provider={$$typeof:h4,_context:n},n.Consumer=n};ft.createElement=tR;ft.createFactory=function(n){var e=tR.bind(null,n);return e.type=n,e};ft.createRef=function(){return{current:null}};ft.forwardRef=function(n){return{$$typeof:p4,render:n}};ft.isValidElement=dC;ft.lazy=function(n){return{$$typeof:g4,_payload:{_status:-1,_result:n},_init:v4}};ft.memo=function(n,e){return{$$typeof:m4,type:n,compare:e===void 0?null:e}};ft.startTransition=function(n){var e=Jg.transition;Jg.transition={};try{n()}finally{Jg.transition=e}};ft.unstable_act=nR;ft.useCallback=function(n,e){return Xs.current.useCallback(n,e)};ft.useContext=function(n){return Xs.current.useContext(n)};ft.useDebugValue=function(){};ft.useDeferredValue=function(n){return Xs.current.useDeferredValue(n)};ft.useEffect=function(n,e){return Xs.current.useEffect(n,e)};ft.useId=function(){return Xs.current.useId()};ft.useImperativeHandle=function(n,e,t){return Xs.current.useImperativeHandle(n,e,t)};ft.useInsertionEffect=function(n,e){return Xs.current.useInsertionEffect(n,e)};ft.useLayoutEffect=function(n,e){return Xs.current.useLayoutEffect(n,e)};ft.useMemo=function(n,e){return Xs.current.useMemo(n,e)};ft.useReducer=function(n,e,t){return Xs.current.useReducer(n,e,t)};ft.useRef=function(n){return Xs.current.useRef(n)};ft.useState=function(n){return Xs.current.useState(n)};ft.useSyncExternalStore=function(n,e,t){return Xs.current.useSyncExternalStore(n,e,t)};ft.useTransition=function(){return Xs.current.useTransition()};ft.version="18.3.1";KE.exports=ft;var He=KE.exports;const S4=lC(He);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var C4=He,k4=Symbol.for("react.element"),I4=Symbol.for("react.fragment"),N4=Object.prototype.hasOwnProperty,T4=C4.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,$4={key:!0,ref:!0,__self:!0,__source:!0};function sR(n,e,t){var s,r={},o=null,i=null;t!==void 0&&(o=""+t),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(i=e.ref);for(s in e)N4.call(e,s)&&!$4.hasOwnProperty(s)&&(r[s]=e[s]);if(n&&n.defaultProps)for(s in e=n.defaultProps,e)r[s]===void 0&&(r[s]=e[s]);return{$$typeof:k4,type:n,key:o,ref:i,props:r,_owner:T4.current}}L0.Fragment=I4;L0.jsx=sR;L0.jsxs=sR;qE.exports=L0;var ue=qE.exports,tb={},rR={exports:{}},Lr={},oR={exports:{}},iR={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(n){function e(z,H){var Z=z.length;z.push(H);e:for(;0<Z;){var te=Z-1>>>1,re=z[te];if(0<r(re,H))z[te]=H,z[Z]=re,Z=te;else break e}}function t(z){return z.length===0?null:z[0]}function s(z){if(z.length===0)return null;var H=z[0],Z=z.pop();if(Z!==H){z[0]=Z;e:for(var te=0,re=z.length,le=re>>>1;te<le;){var he=2*(te+1)-1,ie=z[he],de=he+1,be=z[de];if(0>r(ie,Z))de<re&&0>r(be,ie)?(z[te]=be,z[de]=Z,te=de):(z[te]=ie,z[he]=Z,te=he);else if(de<re&&0>r(be,Z))z[te]=be,z[de]=Z,te=de;else break e}}return H}function r(z,H){var Z=z.sortIndex-H.sortIndex;return Z!==0?Z:z.id-H.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;n.unstable_now=function(){return o.now()}}else{var i=Date,a=i.now();n.unstable_now=function(){return i.now()-a}}var l=[],u=[],c=1,h=null,d=3,p=!1,f=!1,m=!1,g=typeof setTimeout=="function"?setTimeout:null,y=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(z){for(var H=t(u);H!==null;){if(H.callback===null)s(u);else if(H.startTime<=z)s(u),H.sortIndex=H.expirationTime,e(l,H);else break;H=t(u)}}function b(z){if(m=!1,w(z),!f)if(t(l)!==null)f=!0,W(S);else{var H=t(u);H!==null&&Y(b,H.startTime-z)}}function S(z,H){f=!1,m&&(m=!1,y(N),N=-1),p=!0;var Z=d;try{for(w(H),h=t(l);h!==null&&(!(h.expirationTime>H)||z&&!D());){var te=h.callback;if(typeof te=="function"){h.callback=null,d=h.priorityLevel;var re=te(h.expirationTime<=H);H=n.unstable_now(),typeof re=="function"?h.callback=re:h===t(l)&&s(l),w(H)}else s(l);h=t(l)}if(h!==null)var le=!0;else{var he=t(u);he!==null&&Y(b,he.startTime-H),le=!1}return le}finally{h=null,d=Z,p=!1}}var C=!1,k=null,N=-1,_=5,E=-1;function D(){return!(n.unstable_now()-E<_)}function P(){if(k!==null){var z=n.unstable_now();E=z;var H=!0;try{H=k(!0,z)}finally{H?F():(C=!1,k=null)}}else C=!1}var F;if(typeof x=="function")F=function(){x(P)};else if(typeof MessageChannel<"u"){var L=new MessageChannel,B=L.port2;L.port1.onmessage=P,F=function(){B.postMessage(null)}}else F=function(){g(P,0)};function W(z){k=z,C||(C=!0,F())}function Y(z,H){N=g(function(){z(n.unstable_now())},H)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(z){z.callback=null},n.unstable_continueExecution=function(){f||p||(f=!0,W(S))},n.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<z?Math.floor(1e3/z):5},n.unstable_getCurrentPriorityLevel=function(){return d},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(z){switch(d){case 1:case 2:case 3:var H=3;break;default:H=d}var Z=d;d=H;try{return z()}finally{d=Z}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(z,H){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var Z=d;d=z;try{return H()}finally{d=Z}},n.unstable_scheduleCallback=function(z,H,Z){var te=n.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?te+Z:te):Z=te,z){case 1:var re=-1;break;case 2:re=250;break;case 5:re=1073741823;break;case 4:re=1e4;break;default:re=5e3}return re=Z+re,z={id:c++,callback:H,priorityLevel:z,startTime:Z,expirationTime:re,sortIndex:-1},Z>te?(z.sortIndex=Z,e(u,z),t(l)===null&&z===t(u)&&(m?(y(N),N=-1):m=!0,Y(b,Z-te))):(z.sortIndex=re,e(l,z),f||p||(f=!0,W(S))),z},n.unstable_shouldYield=D,n.unstable_wrapCallback=function(z){var H=d;return function(){var Z=d;d=H;try{return z.apply(this,arguments)}finally{d=Z}}}})(iR);oR.exports=iR;var _4=oR.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var E4=He,Dr=_4;function ge(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var aR=new Set,Tp={};function Cu(n,e){Mc(n,e),Mc(n+"Capture",e)}function Mc(n,e){for(Tp[n]=e,n=0;n<e.length;n++)aR.add(e[n])}var Yi=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),nb=Object.prototype.hasOwnProperty,R4=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,PN={},FN={};function A4(n){return nb.call(FN,n)?!0:nb.call(PN,n)?!1:R4.test(n)?FN[n]=!0:(PN[n]=!0,!1)}function D4(n,e,t,s){if(t!==null&&t.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return s?!1:t!==null?!t.acceptsBooleans:(n=n.toLowerCase().slice(0,5),n!=="data-"&&n!=="aria-");default:return!1}}function O4(n,e,t,s){if(e===null||typeof e>"u"||D4(n,e,t,s))return!0;if(s)return!1;if(t!==null)switch(t.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Ys(n,e,t,s,r,o,i){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=s,this.attributeNamespace=r,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=o,this.removeEmptyString=i}var ms={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(n){ms[n]=new Ys(n,0,!1,n,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(n){var e=n[0];ms[e]=new Ys(e,1,!1,n[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(n){ms[n]=new Ys(n,2,!1,n.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(n){ms[n]=new Ys(n,2,!1,n,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(n){ms[n]=new Ys(n,3,!1,n.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(n){ms[n]=new Ys(n,3,!0,n,null,!1,!1)});["capture","download"].forEach(function(n){ms[n]=new Ys(n,4,!1,n,null,!1,!1)});["cols","rows","size","span"].forEach(function(n){ms[n]=new Ys(n,6,!1,n,null,!1,!1)});["rowSpan","start"].forEach(function(n){ms[n]=new Ys(n,5,!1,n.toLowerCase(),null,!1,!1)});var pC=/[\-:]([a-z])/g;function fC(n){return n[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(n){var e=n.replace(pC,fC);ms[e]=new Ys(e,1,!1,n,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(n){var e=n.replace(pC,fC);ms[e]=new Ys(e,1,!1,n,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(n){var e=n.replace(pC,fC);ms[e]=new Ys(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(n){ms[n]=new Ys(n,1,!1,n.toLowerCase(),null,!1,!1)});ms.xlinkHref=new Ys("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(n){ms[n]=new Ys(n,1,!1,n.toLowerCase(),null,!0,!0)});function mC(n,e,t,s){var r=ms.hasOwnProperty(e)?ms[e]:null;(r!==null?r.type!==0:s||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(O4(e,t,r,s)&&(t=null),s||r===null?A4(e)&&(t===null?n.removeAttribute(e):n.setAttribute(e,""+t)):r.mustUseProperty?n[r.propertyName]=t===null?r.type===3?!1:"":t:(e=r.attributeName,s=r.attributeNamespace,t===null?n.removeAttribute(e):(r=r.type,t=r===3||r===4&&t===!0?"":""+t,s?n.setAttributeNS(s,e,t):n.setAttribute(e,t))))}var ra=E4.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,yg=Symbol.for("react.element"),uc=Symbol.for("react.portal"),cc=Symbol.for("react.fragment"),gC=Symbol.for("react.strict_mode"),sb=Symbol.for("react.profiler"),lR=Symbol.for("react.provider"),uR=Symbol.for("react.context"),yC=Symbol.for("react.forward_ref"),rb=Symbol.for("react.suspense"),ob=Symbol.for("react.suspense_list"),xC=Symbol.for("react.memo"),ga=Symbol.for("react.lazy"),cR=Symbol.for("react.offscreen"),LN=Symbol.iterator;function Hd(n){return n===null||typeof n!="object"?null:(n=LN&&n[LN]||n["@@iterator"],typeof n=="function"?n:null)}var fn=Object.assign,Zw;function rp(n){if(Zw===void 0)try{throw Error()}catch(t){var e=t.stack.trim().match(/\n( *(at )?)/);Zw=e&&e[1]||""}return`
`+Zw+n}var Jw=!1;function ev(n,e){if(!n||Jw)return"";Jw=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var s=u}Reflect.construct(n,[],e)}else{try{e.call()}catch(u){s=u}n.call(e.prototype)}else{try{throw Error()}catch(u){s=u}n()}}catch(u){if(u&&s&&typeof u.stack=="string"){for(var r=u.stack.split(`
`),o=s.stack.split(`
`),i=r.length-1,a=o.length-1;1<=i&&0<=a&&r[i]!==o[a];)a--;for(;1<=i&&0<=a;i--,a--)if(r[i]!==o[a]){if(i!==1||a!==1)do if(i--,a--,0>a||r[i]!==o[a]){var l=`
`+r[i].replace(" at new "," at ");return n.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",n.displayName)),l}while(1<=i&&0<=a);break}}}finally{Jw=!1,Error.prepareStackTrace=t}return(n=n?n.displayName||n.name:"")?rp(n):""}function P4(n){switch(n.tag){case 5:return rp(n.type);case 16:return rp("Lazy");case 13:return rp("Suspense");case 19:return rp("SuspenseList");case 0:case 2:case 15:return n=ev(n.type,!1),n;case 11:return n=ev(n.type.render,!1),n;case 1:return n=ev(n.type,!0),n;default:return""}}function ib(n){if(n==null)return null;if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n;switch(n){case cc:return"Fragment";case uc:return"Portal";case sb:return"Profiler";case gC:return"StrictMode";case rb:return"Suspense";case ob:return"SuspenseList"}if(typeof n=="object")switch(n.$$typeof){case uR:return(n.displayName||"Context")+".Consumer";case lR:return(n._context.displayName||"Context")+".Provider";case yC:var e=n.render;return n=n.displayName,n||(n=e.displayName||e.name||"",n=n!==""?"ForwardRef("+n+")":"ForwardRef"),n;case xC:return e=n.displayName||null,e!==null?e:ib(n.type)||"Memo";case ga:e=n._payload,n=n._init;try{return ib(n(e))}catch{}}return null}function F4(n){var e=n.type;switch(n.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return n=e.render,n=n.displayName||n.name||"",e.displayName||(n!==""?"ForwardRef("+n+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return ib(e);case 8:return e===gC?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Ba(n){switch(typeof n){case"boolean":case"number":case"string":case"undefined":return n;case"object":return n;default:return""}}function hR(n){var e=n.type;return(n=n.nodeName)&&n.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function L4(n){var e=hR(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),s=""+n[e];if(!n.hasOwnProperty(e)&&typeof t<"u"&&typeof t.get=="function"&&typeof t.set=="function"){var r=t.get,o=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return r.call(this)},set:function(i){s=""+i,o.call(this,i)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return s},setValue:function(i){s=""+i},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}function xg(n){n._valueTracker||(n._valueTracker=L4(n))}function dR(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),s="";return n&&(s=hR(n)?n.checked?"true":"false":n.value),n=s,n!==t?(e.setValue(n),!0):!1}function xy(n){if(n=n||(typeof document<"u"?document:void 0),typeof n>"u")return null;try{return n.activeElement||n.body}catch{return n.body}}function ab(n,e){var t=e.checked;return fn({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:t??n._wrapperState.initialChecked})}function MN(n,e){var t=e.defaultValue==null?"":e.defaultValue,s=e.checked!=null?e.checked:e.defaultChecked;t=Ba(e.value!=null?e.value:t),n._wrapperState={initialChecked:s,initialValue:t,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function pR(n,e){e=e.checked,e!=null&&mC(n,"checked",e,!1)}function lb(n,e){pR(n,e);var t=Ba(e.value),s=e.type;if(t!=null)s==="number"?(t===0&&n.value===""||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if(s==="submit"||s==="reset"){n.removeAttribute("value");return}e.hasOwnProperty("value")?ub(n,e.type,t):e.hasOwnProperty("defaultValue")&&ub(n,e.type,Ba(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(n.defaultChecked=!!e.defaultChecked)}function zN(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var s=e.type;if(!(s!=="submit"&&s!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}t=n.name,t!==""&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,t!==""&&(n.name=t)}function ub(n,e,t){(e!=="number"||xy(n.ownerDocument)!==n)&&(t==null?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}var op=Array.isArray;function Ic(n,e,t,s){if(n=n.options,e){e={};for(var r=0;r<t.length;r++)e["$"+t[r]]=!0;for(t=0;t<n.length;t++)r=e.hasOwnProperty("$"+n[t].value),n[t].selected!==r&&(n[t].selected=r),r&&s&&(n[t].defaultSelected=!0)}else{for(t=""+Ba(t),e=null,r=0;r<n.length;r++){if(n[r].value===t){n[r].selected=!0,s&&(n[r].defaultSelected=!0);return}e!==null||n[r].disabled||(e=n[r])}e!==null&&(e.selected=!0)}}function cb(n,e){if(e.dangerouslySetInnerHTML!=null)throw Error(ge(91));return fn({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function VN(n,e){var t=e.value;if(t==null){if(t=e.children,e=e.defaultValue,t!=null){if(e!=null)throw Error(ge(92));if(op(t)){if(1<t.length)throw Error(ge(93));t=t[0]}e=t}e==null&&(e=""),t=e}n._wrapperState={initialValue:Ba(t)}}function fR(n,e){var t=Ba(e.value),s=Ba(e.defaultValue);t!=null&&(t=""+t,t!==n.value&&(n.value=t),e.defaultValue==null&&n.defaultValue!==t&&(n.defaultValue=t)),s!=null&&(n.defaultValue=""+s)}function BN(n){var e=n.textContent;e===n._wrapperState.initialValue&&e!==""&&e!==null&&(n.value=e)}function mR(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function hb(n,e){return n==null||n==="http://www.w3.org/1999/xhtml"?mR(e):n==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":n}var wg,gR=function(n){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,t,s,r){MSApp.execUnsafeLocalFunction(function(){return n(e,t,s,r)})}:n}(function(n,e){if(n.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in n)n.innerHTML=e;else{for(wg=wg||document.createElement("div"),wg.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=wg.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}});function $p(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&t.nodeType===3){t.nodeValue=e;return}}n.textContent=e}var mp={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},M4=["Webkit","ms","Moz","O"];Object.keys(mp).forEach(function(n){M4.forEach(function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),mp[e]=mp[n]})});function yR(n,e,t){return e==null||typeof e=="boolean"||e===""?"":t||typeof e!="number"||e===0||mp.hasOwnProperty(n)&&mp[n]?(""+e).trim():e+"px"}function xR(n,e){n=n.style;for(var t in e)if(e.hasOwnProperty(t)){var s=t.indexOf("--")===0,r=yR(t,e[t],s);t==="float"&&(t="cssFloat"),s?n.setProperty(t,r):n[t]=r}}var z4=fn({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function db(n,e){if(e){if(z4[n]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(ge(137,n));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(ge(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(ge(61))}if(e.style!=null&&typeof e.style!="object")throw Error(ge(62))}}function pb(n,e){if(n.indexOf("-")===-1)return typeof e.is=="string";switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var fb=null;function wC(n){return n=n.target||n.srcElement||window,n.correspondingUseElement&&(n=n.correspondingUseElement),n.nodeType===3?n.parentNode:n}var mb=null,Nc=null,Tc=null;function WN(n){if(n=xf(n)){if(typeof mb!="function")throw Error(ge(280));var e=n.stateNode;e&&(e=W0(e),mb(n.stateNode,n.type,e))}}function wR(n){Nc?Tc?Tc.push(n):Tc=[n]:Nc=n}function vR(){if(Nc){var n=Nc,e=Tc;if(Tc=Nc=null,WN(n),e)for(n=0;n<e.length;n++)WN(e[n])}}function bR(n,e){return n(e)}function SR(){}var tv=!1;function CR(n,e,t){if(tv)return n(e,t);tv=!0;try{return bR(n,e,t)}finally{tv=!1,(Nc!==null||Tc!==null)&&(SR(),vR())}}function _p(n,e){var t=n.stateNode;if(t===null)return null;var s=W0(t);if(s===null)return null;t=s[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(s=!s.disabled)||(n=n.type,s=!(n==="button"||n==="input"||n==="select"||n==="textarea")),n=!s;break e;default:n=!1}if(n)return null;if(t&&typeof t!="function")throw Error(ge(231,e,typeof t));return t}var gb=!1;if(Yi)try{var jd={};Object.defineProperty(jd,"passive",{get:function(){gb=!0}}),window.addEventListener("test",jd,jd),window.removeEventListener("test",jd,jd)}catch{gb=!1}function V4(n,e,t,s,r,o,i,a,l){var u=Array.prototype.slice.call(arguments,3);try{e.apply(t,u)}catch(c){this.onError(c)}}var gp=!1,wy=null,vy=!1,yb=null,B4={onError:function(n){gp=!0,wy=n}};function W4(n,e,t,s,r,o,i,a,l){gp=!1,wy=null,V4.apply(B4,arguments)}function U4(n,e,t,s,r,o,i,a,l){if(W4.apply(this,arguments),gp){if(gp){var u=wy;gp=!1,wy=null}else throw Error(ge(198));vy||(vy=!0,yb=u)}}function ku(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do e=n,e.flags&4098&&(t=e.return),n=e.return;while(n)}return e.tag===3?t:null}function kR(n){if(n.tag===13){var e=n.memoizedState;if(e===null&&(n=n.alternate,n!==null&&(e=n.memoizedState)),e!==null)return e.dehydrated}return null}function UN(n){if(ku(n)!==n)throw Error(ge(188))}function G4(n){var e=n.alternate;if(!e){if(e=ku(n),e===null)throw Error(ge(188));return e!==n?null:n}for(var t=n,s=e;;){var r=t.return;if(r===null)break;var o=r.alternate;if(o===null){if(s=r.return,s!==null){t=s;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===t)return UN(r),n;if(o===s)return UN(r),e;o=o.sibling}throw Error(ge(188))}if(t.return!==s.return)t=r,s=o;else{for(var i=!1,a=r.child;a;){if(a===t){i=!0,t=r,s=o;break}if(a===s){i=!0,s=r,t=o;break}a=a.sibling}if(!i){for(a=o.child;a;){if(a===t){i=!0,t=o,s=r;break}if(a===s){i=!0,s=o,t=r;break}a=a.sibling}if(!i)throw Error(ge(189))}}if(t.alternate!==s)throw Error(ge(190))}if(t.tag!==3)throw Error(ge(188));return t.stateNode.current===t?n:e}function IR(n){return n=G4(n),n!==null?NR(n):null}function NR(n){if(n.tag===5||n.tag===6)return n;for(n=n.child;n!==null;){var e=NR(n);if(e!==null)return e;n=n.sibling}return null}var TR=Dr.unstable_scheduleCallback,GN=Dr.unstable_cancelCallback,H4=Dr.unstable_shouldYield,j4=Dr.unstable_requestPaint,Nn=Dr.unstable_now,q4=Dr.unstable_getCurrentPriorityLevel,vC=Dr.unstable_ImmediatePriority,$R=Dr.unstable_UserBlockingPriority,by=Dr.unstable_NormalPriority,K4=Dr.unstable_LowPriority,_R=Dr.unstable_IdlePriority,M0=null,mi=null;function X4(n){if(mi&&typeof mi.onCommitFiberRoot=="function")try{mi.onCommitFiberRoot(M0,n,void 0,(n.current.flags&128)===128)}catch{}}var Oo=Math.clz32?Math.clz32:Z4,Y4=Math.log,Q4=Math.LN2;function Z4(n){return n>>>=0,n===0?32:31-(Y4(n)/Q4|0)|0}var vg=64,bg=4194304;function ip(n){switch(n&-n){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return n&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return n}}function Sy(n,e){var t=n.pendingLanes;if(t===0)return 0;var s=0,r=n.suspendedLanes,o=n.pingedLanes,i=t&268435455;if(i!==0){var a=i&~r;a!==0?s=ip(a):(o&=i,o!==0&&(s=ip(o)))}else i=t&~r,i!==0?s=ip(i):o!==0&&(s=ip(o));if(s===0)return 0;if(e!==0&&e!==s&&!(e&r)&&(r=s&-s,o=e&-e,r>=o||r===16&&(o&4194240)!==0))return e;if(s&4&&(s|=t&16),e=n.entangledLanes,e!==0)for(n=n.entanglements,e&=s;0<e;)t=31-Oo(e),r=1<<t,s|=n[t],e&=~r;return s}function J4(n,e){switch(n){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function eW(n,e){for(var t=n.suspendedLanes,s=n.pingedLanes,r=n.expirationTimes,o=n.pendingLanes;0<o;){var i=31-Oo(o),a=1<<i,l=r[i];l===-1?(!(a&t)||a&s)&&(r[i]=J4(a,e)):l<=e&&(n.expiredLanes|=a),o&=~a}}function xb(n){return n=n.pendingLanes&-1073741825,n!==0?n:n&1073741824?1073741824:0}function ER(){var n=vg;return vg<<=1,!(vg&4194240)&&(vg=64),n}function nv(n){for(var e=[],t=0;31>t;t++)e.push(n);return e}function gf(n,e,t){n.pendingLanes|=e,e!==536870912&&(n.suspendedLanes=0,n.pingedLanes=0),n=n.eventTimes,e=31-Oo(e),n[e]=t}function tW(n,e){var t=n.pendingLanes&~e;n.pendingLanes=e,n.suspendedLanes=0,n.pingedLanes=0,n.expiredLanes&=e,n.mutableReadLanes&=e,n.entangledLanes&=e,e=n.entanglements;var s=n.eventTimes;for(n=n.expirationTimes;0<t;){var r=31-Oo(t),o=1<<r;e[r]=0,s[r]=-1,n[r]=-1,t&=~o}}function bC(n,e){var t=n.entangledLanes|=e;for(n=n.entanglements;t;){var s=31-Oo(t),r=1<<s;r&e|n[s]&e&&(n[s]|=e),t&=~r}}var Et=0;function RR(n){return n&=-n,1<n?4<n?n&268435455?16:536870912:4:1}var AR,SC,DR,OR,PR,wb=!1,Sg=[],$a=null,_a=null,Ea=null,Ep=new Map,Rp=new Map,va=[],nW="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function HN(n,e){switch(n){case"focusin":case"focusout":$a=null;break;case"dragenter":case"dragleave":_a=null;break;case"mouseover":case"mouseout":Ea=null;break;case"pointerover":case"pointerout":Ep.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rp.delete(e.pointerId)}}function qd(n,e,t,s,r,o){return n===null||n.nativeEvent!==o?(n={blockedOn:e,domEventName:t,eventSystemFlags:s,nativeEvent:o,targetContainers:[r]},e!==null&&(e=xf(e),e!==null&&SC(e)),n):(n.eventSystemFlags|=s,e=n.targetContainers,r!==null&&e.indexOf(r)===-1&&e.push(r),n)}function sW(n,e,t,s,r){switch(e){case"focusin":return $a=qd($a,n,e,t,s,r),!0;case"dragenter":return _a=qd(_a,n,e,t,s,r),!0;case"mouseover":return Ea=qd(Ea,n,e,t,s,r),!0;case"pointerover":var o=r.pointerId;return Ep.set(o,qd(Ep.get(o)||null,n,e,t,s,r)),!0;case"gotpointercapture":return o=r.pointerId,Rp.set(o,qd(Rp.get(o)||null,n,e,t,s,r)),!0}return!1}function FR(n){var e=Fl(n.target);if(e!==null){var t=ku(e);if(t!==null){if(e=t.tag,e===13){if(e=kR(t),e!==null){n.blockedOn=e,PR(n.priority,function(){DR(t)});return}}else if(e===3&&t.stateNode.current.memoizedState.isDehydrated){n.blockedOn=t.tag===3?t.stateNode.containerInfo:null;return}}}n.blockedOn=null}function ey(n){if(n.blockedOn!==null)return!1;for(var e=n.targetContainers;0<e.length;){var t=vb(n.domEventName,n.eventSystemFlags,e[0],n.nativeEvent);if(t===null){t=n.nativeEvent;var s=new t.constructor(t.type,t);fb=s,t.target.dispatchEvent(s),fb=null}else return e=xf(t),e!==null&&SC(e),n.blockedOn=t,!1;e.shift()}return!0}function jN(n,e,t){ey(n)&&t.delete(e)}function rW(){wb=!1,$a!==null&&ey($a)&&($a=null),_a!==null&&ey(_a)&&(_a=null),Ea!==null&&ey(Ea)&&(Ea=null),Ep.forEach(jN),Rp.forEach(jN)}function Kd(n,e){n.blockedOn===e&&(n.blockedOn=null,wb||(wb=!0,Dr.unstable_scheduleCallback(Dr.unstable_NormalPriority,rW)))}function Ap(n){function e(r){return Kd(r,n)}if(0<Sg.length){Kd(Sg[0],n);for(var t=1;t<Sg.length;t++){var s=Sg[t];s.blockedOn===n&&(s.blockedOn=null)}}for($a!==null&&Kd($a,n),_a!==null&&Kd(_a,n),Ea!==null&&Kd(Ea,n),Ep.forEach(e),Rp.forEach(e),t=0;t<va.length;t++)s=va[t],s.blockedOn===n&&(s.blockedOn=null);for(;0<va.length&&(t=va[0],t.blockedOn===null);)FR(t),t.blockedOn===null&&va.shift()}var $c=ra.ReactCurrentBatchConfig,Cy=!0;function oW(n,e,t,s){var r=Et,o=$c.transition;$c.transition=null;try{Et=1,CC(n,e,t,s)}finally{Et=r,$c.transition=o}}function iW(n,e,t,s){var r=Et,o=$c.transition;$c.transition=null;try{Et=4,CC(n,e,t,s)}finally{Et=r,$c.transition=o}}function CC(n,e,t,s){if(Cy){var r=vb(n,e,t,s);if(r===null)dv(n,e,s,ky,t),HN(n,s);else if(sW(r,n,e,t,s))s.stopPropagation();else if(HN(n,s),e&4&&-1<nW.indexOf(n)){for(;r!==null;){var o=xf(r);if(o!==null&&AR(o),o=vb(n,e,t,s),o===null&&dv(n,e,s,ky,t),o===r)break;r=o}r!==null&&s.stopPropagation()}else dv(n,e,s,null,t)}}var ky=null;function vb(n,e,t,s){if(ky=null,n=wC(s),n=Fl(n),n!==null)if(e=ku(n),e===null)n=null;else if(t=e.tag,t===13){if(n=kR(e),n!==null)return n;n=null}else if(t===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;n=null}else e!==n&&(n=null);return ky=n,null}function LR(n){switch(n){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(q4()){case vC:return 1;case $R:return 4;case by:case K4:return 16;case _R:return 536870912;default:return 16}default:return 16}}var Sa=null,kC=null,ty=null;function MR(){if(ty)return ty;var n,e=kC,t=e.length,s,r="value"in Sa?Sa.value:Sa.textContent,o=r.length;for(n=0;n<t&&e[n]===r[n];n++);var i=t-n;for(s=1;s<=i&&e[t-s]===r[o-s];s++);return ty=r.slice(n,1<s?1-s:void 0)}function ny(n){var e=n.keyCode;return"charCode"in n?(n=n.charCode,n===0&&e===13&&(n=13)):n=e,n===10&&(n=13),32<=n||n===13?n:0}function Cg(){return!0}function qN(){return!1}function Mr(n){function e(t,s,r,o,i){this._reactName=t,this._targetInst=r,this.type=s,this.nativeEvent=o,this.target=i,this.currentTarget=null;for(var a in n)n.hasOwnProperty(a)&&(t=n[a],this[a]=t?t(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Cg:qN,this.isPropagationStopped=qN,this}return fn(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():typeof t.returnValue!="unknown"&&(t.returnValue=!1),this.isDefaultPrevented=Cg)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():typeof t.cancelBubble!="unknown"&&(t.cancelBubble=!0),this.isPropagationStopped=Cg)},persist:function(){},isPersistent:Cg}),e}var dh={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},IC=Mr(dh),yf=fn({},dh,{view:0,detail:0}),aW=Mr(yf),sv,rv,Xd,z0=fn({},yf,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:NC,button:0,buttons:0,relatedTarget:function(n){return n.relatedTarget===void 0?n.fromElement===n.srcElement?n.toElement:n.fromElement:n.relatedTarget},movementX:function(n){return"movementX"in n?n.movementX:(n!==Xd&&(Xd&&n.type==="mousemove"?(sv=n.screenX-Xd.screenX,rv=n.screenY-Xd.screenY):rv=sv=0,Xd=n),sv)},movementY:function(n){return"movementY"in n?n.movementY:rv}}),KN=Mr(z0),lW=fn({},z0,{dataTransfer:0}),uW=Mr(lW),cW=fn({},yf,{relatedTarget:0}),ov=Mr(cW),hW=fn({},dh,{animationName:0,elapsedTime:0,pseudoElement:0}),dW=Mr(hW),pW=fn({},dh,{clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),fW=Mr(pW),mW=fn({},dh,{data:0}),XN=Mr(mW),gW={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},yW={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xW={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wW(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):(n=xW[n])?!!e[n]:!1}function NC(){return wW}var vW=fn({},yf,{key:function(n){if(n.key){var e=gW[n.key]||n.key;if(e!=="Unidentified")return e}return n.type==="keypress"?(n=ny(n),n===13?"Enter":String.fromCharCode(n)):n.type==="keydown"||n.type==="keyup"?yW[n.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:NC,charCode:function(n){return n.type==="keypress"?ny(n):0},keyCode:function(n){return n.type==="keydown"||n.type==="keyup"?n.keyCode:0},which:function(n){return n.type==="keypress"?ny(n):n.type==="keydown"||n.type==="keyup"?n.keyCode:0}}),bW=Mr(vW),SW=fn({},z0,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),YN=Mr(SW),CW=fn({},yf,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:NC}),kW=Mr(CW),IW=fn({},dh,{propertyName:0,elapsedTime:0,pseudoElement:0}),NW=Mr(IW),TW=fn({},z0,{deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:0,deltaMode:0}),$W=Mr(TW),_W=[9,13,27,32],TC=Yi&&"CompositionEvent"in window,yp=null;Yi&&"documentMode"in document&&(yp=document.documentMode);var EW=Yi&&"TextEvent"in window&&!yp,zR=Yi&&(!TC||yp&&8<yp&&11>=yp),QN=String.fromCharCode(32),ZN=!1;function VR(n,e){switch(n){case"keyup":return _W.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function BR(n){return n=n.detail,typeof n=="object"&&"data"in n?n.data:null}var hc=!1;function RW(n,e){switch(n){case"compositionend":return BR(e);case"keypress":return e.which!==32?null:(ZN=!0,QN);case"textInput":return n=e.data,n===QN&&ZN?null:n;default:return null}}function AW(n,e){if(hc)return n==="compositionend"||!TC&&VR(n,e)?(n=MR(),ty=kC=Sa=null,hc=!1,n):null;switch(n){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return zR&&e.locale!=="ko"?null:e.data;default:return null}}var DW={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function JN(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e==="input"?!!DW[n.type]:e==="textarea"}function WR(n,e,t,s){wR(s),e=Iy(e,"onChange"),0<e.length&&(t=new IC("onChange","change",null,t,s),n.push({event:t,listeners:e}))}var xp=null,Dp=null;function OW(n){JR(n,0)}function V0(n){var e=fc(n);if(dR(e))return n}function PW(n,e){if(n==="change")return e}var UR=!1;if(Yi){var iv;if(Yi){var av="oninput"in document;if(!av){var eT=document.createElement("div");eT.setAttribute("oninput","return;"),av=typeof eT.oninput=="function"}iv=av}else iv=!1;UR=iv&&(!document.documentMode||9<document.documentMode)}function tT(){xp&&(xp.detachEvent("onpropertychange",GR),Dp=xp=null)}function GR(n){if(n.propertyName==="value"&&V0(Dp)){var e=[];WR(e,Dp,n,wC(n)),CR(OW,e)}}function FW(n,e,t){n==="focusin"?(tT(),xp=e,Dp=t,xp.attachEvent("onpropertychange",GR)):n==="focusout"&&tT()}function LW(n){if(n==="selectionchange"||n==="keyup"||n==="keydown")return V0(Dp)}function MW(n,e){if(n==="click")return V0(e)}function zW(n,e){if(n==="input"||n==="change")return V0(e)}function VW(n,e){return n===e&&(n!==0||1/n===1/e)||n!==n&&e!==e}var Mo=typeof Object.is=="function"?Object.is:VW;function Op(n,e){if(Mo(n,e))return!0;if(typeof n!="object"||n===null||typeof e!="object"||e===null)return!1;var t=Object.keys(n),s=Object.keys(e);if(t.length!==s.length)return!1;for(s=0;s<t.length;s++){var r=t[s];if(!nb.call(e,r)||!Mo(n[r],e[r]))return!1}return!0}function nT(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function sT(n,e){var t=nT(n);n=0;for(var s;t;){if(t.nodeType===3){if(s=n+t.textContent.length,n<=e&&s>=e)return{node:t,offset:e-n};n=s}e:{for(;t;){if(t.nextSibling){t=t.nextSibling;break e}t=t.parentNode}t=void 0}t=nT(t)}}function HR(n,e){return n&&e?n===e?!0:n&&n.nodeType===3?!1:e&&e.nodeType===3?HR(n,e.parentNode):"contains"in n?n.contains(e):n.compareDocumentPosition?!!(n.compareDocumentPosition(e)&16):!1:!1}function jR(){for(var n=window,e=xy();e instanceof n.HTMLIFrameElement;){try{var t=typeof e.contentWindow.location.href=="string"}catch{t=!1}if(t)n=e.contentWindow;else break;e=xy(n.document)}return e}function $C(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&(e==="input"&&(n.type==="text"||n.type==="search"||n.type==="tel"||n.type==="url"||n.type==="password")||e==="textarea"||n.contentEditable==="true")}function BW(n){var e=jR(),t=n.focusedElem,s=n.selectionRange;if(e!==t&&t&&t.ownerDocument&&HR(t.ownerDocument.documentElement,t)){if(s!==null&&$C(t)){if(e=s.start,n=s.end,n===void 0&&(n=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(n,t.value.length);else if(n=(e=t.ownerDocument||document)&&e.defaultView||window,n.getSelection){n=n.getSelection();var r=t.textContent.length,o=Math.min(s.start,r);s=s.end===void 0?o:Math.min(s.end,r),!n.extend&&o>s&&(r=s,s=o,o=r),r=sT(t,o);var i=sT(t,s);r&&i&&(n.rangeCount!==1||n.anchorNode!==r.node||n.anchorOffset!==r.offset||n.focusNode!==i.node||n.focusOffset!==i.offset)&&(e=e.createRange(),e.setStart(r.node,r.offset),n.removeAllRanges(),o>s?(n.addRange(e),n.extend(i.node,i.offset)):(e.setEnd(i.node,i.offset),n.addRange(e)))}}for(e=[],n=t;n=n.parentNode;)n.nodeType===1&&e.push({element:n,left:n.scrollLeft,top:n.scrollTop});for(typeof t.focus=="function"&&t.focus(),t=0;t<e.length;t++)n=e[t],n.element.scrollLeft=n.left,n.element.scrollTop=n.top}}var WW=Yi&&"documentMode"in document&&11>=document.documentMode,dc=null,bb=null,wp=null,Sb=!1;function rT(n,e,t){var s=t.window===t?t.document:t.nodeType===9?t:t.ownerDocument;Sb||dc==null||dc!==xy(s)||(s=dc,"selectionStart"in s&&$C(s)?s={start:s.selectionStart,end:s.selectionEnd}:(s=(s.ownerDocument&&s.ownerDocument.defaultView||window).getSelection(),s={anchorNode:s.anchorNode,anchorOffset:s.anchorOffset,focusNode:s.focusNode,focusOffset:s.focusOffset}),wp&&Op(wp,s)||(wp=s,s=Iy(bb,"onSelect"),0<s.length&&(e=new IC("onSelect","select",null,e,t),n.push({event:e,listeners:s}),e.target=dc)))}function kg(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var pc={animationend:kg("Animation","AnimationEnd"),animationiteration:kg("Animation","AnimationIteration"),animationstart:kg("Animation","AnimationStart"),transitionend:kg("Transition","TransitionEnd")},lv={},qR={};Yi&&(qR=document.createElement("div").style,"AnimationEvent"in window||(delete pc.animationend.animation,delete pc.animationiteration.animation,delete pc.animationstart.animation),"TransitionEvent"in window||delete pc.transitionend.transition);function B0(n){if(lv[n])return lv[n];if(!pc[n])return n;var e=pc[n],t;for(t in e)if(e.hasOwnProperty(t)&&t in qR)return lv[n]=e[t];return n}var KR=B0("animationend"),XR=B0("animationiteration"),YR=B0("animationstart"),QR=B0("transitionend"),ZR=new Map,oT="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function rl(n,e){ZR.set(n,e),Cu(e,[n])}for(var uv=0;uv<oT.length;uv++){var cv=oT[uv],UW=cv.toLowerCase(),GW=cv[0].toUpperCase()+cv.slice(1);rl(UW,"on"+GW)}rl(KR,"onAnimationEnd");rl(XR,"onAnimationIteration");rl(YR,"onAnimationStart");rl("dblclick","onDoubleClick");rl("focusin","onFocus");rl("focusout","onBlur");rl(QR,"onTransitionEnd");Mc("onMouseEnter",["mouseout","mouseover"]);Mc("onMouseLeave",["mouseout","mouseover"]);Mc("onPointerEnter",["pointerout","pointerover"]);Mc("onPointerLeave",["pointerout","pointerover"]);Cu("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Cu("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Cu("onBeforeInput",["compositionend","keypress","textInput","paste"]);Cu("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Cu("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Cu("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var ap="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),HW=new Set("cancel close invalid load scroll toggle".split(" ").concat(ap));function iT(n,e,t){var s=n.type||"unknown-event";n.currentTarget=t,U4(s,e,void 0,n),n.currentTarget=null}function JR(n,e){e=(e&4)!==0;for(var t=0;t<n.length;t++){var s=n[t],r=s.event;s=s.listeners;e:{var o=void 0;if(e)for(var i=s.length-1;0<=i;i--){var a=s[i],l=a.instance,u=a.currentTarget;if(a=a.listener,l!==o&&r.isPropagationStopped())break e;iT(r,a,u),o=l}else for(i=0;i<s.length;i++){if(a=s[i],l=a.instance,u=a.currentTarget,a=a.listener,l!==o&&r.isPropagationStopped())break e;iT(r,a,u),o=l}}}if(vy)throw n=yb,vy=!1,yb=null,n}function Xt(n,e){var t=e[Tb];t===void 0&&(t=e[Tb]=new Set);var s=n+"__bubble";t.has(s)||(eA(e,n,2,!1),t.add(s))}function hv(n,e,t){var s=0;e&&(s|=4),eA(t,n,s,e)}var Ig="_reactListening"+Math.random().toString(36).slice(2);function Pp(n){if(!n[Ig]){n[Ig]=!0,aR.forEach(function(t){t!=="selectionchange"&&(HW.has(t)||hv(t,!1,n),hv(t,!0,n))});var e=n.nodeType===9?n:n.ownerDocument;e===null||e[Ig]||(e[Ig]=!0,hv("selectionchange",!1,e))}}function eA(n,e,t,s){switch(LR(e)){case 1:var r=oW;break;case 4:r=iW;break;default:r=CC}t=r.bind(null,e,t,n),r=void 0,!gb||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(r=!0),s?r!==void 0?n.addEventListener(e,t,{capture:!0,passive:r}):n.addEventListener(e,t,!0):r!==void 0?n.addEventListener(e,t,{passive:r}):n.addEventListener(e,t,!1)}function dv(n,e,t,s,r){var o=s;if(!(e&1)&&!(e&2)&&s!==null)e:for(;;){if(s===null)return;var i=s.tag;if(i===3||i===4){var a=s.stateNode.containerInfo;if(a===r||a.nodeType===8&&a.parentNode===r)break;if(i===4)for(i=s.return;i!==null;){var l=i.tag;if((l===3||l===4)&&(l=i.stateNode.containerInfo,l===r||l.nodeType===8&&l.parentNode===r))return;i=i.return}for(;a!==null;){if(i=Fl(a),i===null)return;if(l=i.tag,l===5||l===6){s=o=i;continue e}a=a.parentNode}}s=s.return}CR(function(){var u=o,c=wC(t),h=[];e:{var d=ZR.get(n);if(d!==void 0){var p=IC,f=n;switch(n){case"keypress":if(ny(t)===0)break e;case"keydown":case"keyup":p=bW;break;case"focusin":f="focus",p=ov;break;case"focusout":f="blur",p=ov;break;case"beforeblur":case"afterblur":p=ov;break;case"click":if(t.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=KN;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=uW;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=kW;break;case KR:case XR:case YR:p=dW;break;case QR:p=NW;break;case"scroll":p=aW;break;case"wheel":p=$W;break;case"copy":case"cut":case"paste":p=fW;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=YN}var m=(e&4)!==0,g=!m&&n==="scroll",y=m?d!==null?d+"Capture":null:d;m=[];for(var x=u,w;x!==null;){w=x;var b=w.stateNode;if(w.tag===5&&b!==null&&(w=b,y!==null&&(b=_p(x,y),b!=null&&m.push(Fp(x,b,w)))),g)break;x=x.return}0<m.length&&(d=new p(d,f,null,t,c),h.push({event:d,listeners:m}))}}if(!(e&7)){e:{if(d=n==="mouseover"||n==="pointerover",p=n==="mouseout"||n==="pointerout",d&&t!==fb&&(f=t.relatedTarget||t.fromElement)&&(Fl(f)||f[Qi]))break e;if((p||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,p?(f=t.relatedTarget||t.toElement,p=u,f=f?Fl(f):null,f!==null&&(g=ku(f),f!==g||f.tag!==5&&f.tag!==6)&&(f=null)):(p=null,f=u),p!==f)){if(m=KN,b="onMouseLeave",y="onMouseEnter",x="mouse",(n==="pointerout"||n==="pointerover")&&(m=YN,b="onPointerLeave",y="onPointerEnter",x="pointer"),g=p==null?d:fc(p),w=f==null?d:fc(f),d=new m(b,x+"leave",p,t,c),d.target=g,d.relatedTarget=w,b=null,Fl(c)===u&&(m=new m(y,x+"enter",f,t,c),m.target=w,m.relatedTarget=g,b=m),g=b,p&&f)t:{for(m=p,y=f,x=0,w=m;w;w=Qu(w))x++;for(w=0,b=y;b;b=Qu(b))w++;for(;0<x-w;)m=Qu(m),x--;for(;0<w-x;)y=Qu(y),w--;for(;x--;){if(m===y||y!==null&&m===y.alternate)break t;m=Qu(m),y=Qu(y)}m=null}else m=null;p!==null&&aT(h,d,p,m,!1),f!==null&&g!==null&&aT(h,g,f,m,!0)}}e:{if(d=u?fc(u):window,p=d.nodeName&&d.nodeName.toLowerCase(),p==="select"||p==="input"&&d.type==="file")var S=PW;else if(JN(d))if(UR)S=zW;else{S=LW;var C=FW}else(p=d.nodeName)&&p.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(S=MW);if(S&&(S=S(n,u))){WR(h,S,t,c);break e}C&&C(n,d,u),n==="focusout"&&(C=d._wrapperState)&&C.controlled&&d.type==="number"&&ub(d,"number",d.value)}switch(C=u?fc(u):window,n){case"focusin":(JN(C)||C.contentEditable==="true")&&(dc=C,bb=u,wp=null);break;case"focusout":wp=bb=dc=null;break;case"mousedown":Sb=!0;break;case"contextmenu":case"mouseup":case"dragend":Sb=!1,rT(h,t,c);break;case"selectionchange":if(WW)break;case"keydown":case"keyup":rT(h,t,c)}var k;if(TC)e:{switch(n){case"compositionstart":var N="onCompositionStart";break e;case"compositionend":N="onCompositionEnd";break e;case"compositionupdate":N="onCompositionUpdate";break e}N=void 0}else hc?VR(n,t)&&(N="onCompositionEnd"):n==="keydown"&&t.keyCode===229&&(N="onCompositionStart");N&&(zR&&t.locale!=="ko"&&(hc||N!=="onCompositionStart"?N==="onCompositionEnd"&&hc&&(k=MR()):(Sa=c,kC="value"in Sa?Sa.value:Sa.textContent,hc=!0)),C=Iy(u,N),0<C.length&&(N=new XN(N,n,null,t,c),h.push({event:N,listeners:C}),k?N.data=k:(k=BR(t),k!==null&&(N.data=k)))),(k=EW?RW(n,t):AW(n,t))&&(u=Iy(u,"onBeforeInput"),0<u.length&&(c=new XN("onBeforeInput","beforeinput",null,t,c),h.push({event:c,listeners:u}),c.data=k))}JR(h,e)})}function Fp(n,e,t){return{instance:n,listener:e,currentTarget:t}}function Iy(n,e){for(var t=e+"Capture",s=[];n!==null;){var r=n,o=r.stateNode;r.tag===5&&o!==null&&(r=o,o=_p(n,t),o!=null&&s.unshift(Fp(n,o,r)),o=_p(n,e),o!=null&&s.push(Fp(n,o,r))),n=n.return}return s}function Qu(n){if(n===null)return null;do n=n.return;while(n&&n.tag!==5);return n||null}function aT(n,e,t,s,r){for(var o=e._reactName,i=[];t!==null&&t!==s;){var a=t,l=a.alternate,u=a.stateNode;if(l!==null&&l===s)break;a.tag===5&&u!==null&&(a=u,r?(l=_p(t,o),l!=null&&i.unshift(Fp(t,l,a))):r||(l=_p(t,o),l!=null&&i.push(Fp(t,l,a)))),t=t.return}i.length!==0&&n.push({event:e,listeners:i})}var jW=/\r\n?/g,qW=/\u0000|\uFFFD/g;function lT(n){return(typeof n=="string"?n:""+n).replace(jW,`
`).replace(qW,"")}function Ng(n,e,t){if(e=lT(e),lT(n)!==e&&t)throw Error(ge(425))}function Ny(){}var Cb=null,kb=null;function Ib(n,e){return n==="textarea"||n==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Nb=typeof setTimeout=="function"?setTimeout:void 0,KW=typeof clearTimeout=="function"?clearTimeout:void 0,uT=typeof Promise=="function"?Promise:void 0,XW=typeof queueMicrotask=="function"?queueMicrotask:typeof uT<"u"?function(n){return uT.resolve(null).then(n).catch(YW)}:Nb;function YW(n){setTimeout(function(){throw n})}function pv(n,e){var t=e,s=0;do{var r=t.nextSibling;if(n.removeChild(t),r&&r.nodeType===8)if(t=r.data,t==="/$"){if(s===0){n.removeChild(r),Ap(e);return}s--}else t!=="$"&&t!=="$?"&&t!=="$!"||s++;t=r}while(t);Ap(e)}function Ra(n){for(;n!=null;n=n.nextSibling){var e=n.nodeType;if(e===1||e===3)break;if(e===8){if(e=n.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return n}function cT(n){n=n.previousSibling;for(var e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="$"||t==="$!"||t==="$?"){if(e===0)return n;e--}else t==="/$"&&e++}n=n.previousSibling}return null}var ph=Math.random().toString(36).slice(2),pi="__reactFiber$"+ph,Lp="__reactProps$"+ph,Qi="__reactContainer$"+ph,Tb="__reactEvents$"+ph,QW="__reactListeners$"+ph,ZW="__reactHandles$"+ph;function Fl(n){var e=n[pi];if(e)return e;for(var t=n.parentNode;t;){if(e=t[Qi]||t[pi]){if(t=e.alternate,e.child!==null||t!==null&&t.child!==null)for(n=cT(n);n!==null;){if(t=n[pi])return t;n=cT(n)}return e}n=t,t=n.parentNode}return null}function xf(n){return n=n[pi]||n[Qi],!n||n.tag!==5&&n.tag!==6&&n.tag!==13&&n.tag!==3?null:n}function fc(n){if(n.tag===5||n.tag===6)return n.stateNode;throw Error(ge(33))}function W0(n){return n[Lp]||null}var $b=[],mc=-1;function ol(n){return{current:n}}function Yt(n){0>mc||(n.current=$b[mc],$b[mc]=null,mc--)}function Ut(n,e){mc++,$b[mc]=n.current,n.current=e}var Wa={},Es=ol(Wa),hr=ol(!1),eu=Wa;function zc(n,e){var t=n.type.contextTypes;if(!t)return Wa;var s=n.stateNode;if(s&&s.__reactInternalMemoizedUnmaskedChildContext===e)return s.__reactInternalMemoizedMaskedChildContext;var r={},o;for(o in t)r[o]=e[o];return s&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=r),r}function dr(n){return n=n.childContextTypes,n!=null}function Ty(){Yt(hr),Yt(Es)}function hT(n,e,t){if(Es.current!==Wa)throw Error(ge(168));Ut(Es,e),Ut(hr,t)}function tA(n,e,t){var s=n.stateNode;if(e=e.childContextTypes,typeof s.getChildContext!="function")return t;s=s.getChildContext();for(var r in s)if(!(r in e))throw Error(ge(108,F4(n)||"Unknown",r));return fn({},t,s)}function $y(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||Wa,eu=Es.current,Ut(Es,n),Ut(hr,hr.current),!0}function dT(n,e,t){var s=n.stateNode;if(!s)throw Error(ge(169));t?(n=tA(n,e,eu),s.__reactInternalMemoizedMergedChildContext=n,Yt(hr),Yt(Es),Ut(Es,n)):Yt(hr),Ut(hr,t)}var Li=null,U0=!1,fv=!1;function nA(n){Li===null?Li=[n]:Li.push(n)}function JW(n){U0=!0,nA(n)}function il(){if(!fv&&Li!==null){fv=!0;var n=0,e=Et;try{var t=Li;for(Et=1;n<t.length;n++){var s=t[n];do s=s(!0);while(s!==null)}Li=null,U0=!1}catch(r){throw Li!==null&&(Li=Li.slice(n+1)),TR(vC,il),r}finally{Et=e,fv=!1}}return null}var gc=[],yc=0,_y=null,Ey=0,Xr=[],Yr=0,tu=null,Wi=1,Ui="";function Tl(n,e){gc[yc++]=Ey,gc[yc++]=_y,_y=n,Ey=e}function sA(n,e,t){Xr[Yr++]=Wi,Xr[Yr++]=Ui,Xr[Yr++]=tu,tu=n;var s=Wi;n=Ui;var r=32-Oo(s)-1;s&=~(1<<r),t+=1;var o=32-Oo(e)+r;if(30<o){var i=r-r%5;o=(s&(1<<i)-1).toString(32),s>>=i,r-=i,Wi=1<<32-Oo(e)+r|t<<r|s,Ui=o+n}else Wi=1<<o|t<<r|s,Ui=n}function _C(n){n.return!==null&&(Tl(n,1),sA(n,1,0))}function EC(n){for(;n===_y;)_y=gc[--yc],gc[yc]=null,Ey=gc[--yc],gc[yc]=null;for(;n===tu;)tu=Xr[--Yr],Xr[Yr]=null,Ui=Xr[--Yr],Xr[Yr]=null,Wi=Xr[--Yr],Xr[Yr]=null}var Er=null,Tr=null,rn=!1,To=null;function rA(n,e){var t=Zr(5,null,null,0);t.elementType="DELETED",t.stateNode=e,t.return=n,e=n.deletions,e===null?(n.deletions=[t],n.flags|=16):e.push(t)}function pT(n,e){switch(n.tag){case 5:var t=n.type;return e=e.nodeType!==1||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(n.stateNode=e,Er=n,Tr=Ra(e.firstChild),!0):!1;case 6:return e=n.pendingProps===""||e.nodeType!==3?null:e,e!==null?(n.stateNode=e,Er=n,Tr=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(t=tu!==null?{id:Wi,overflow:Ui}:null,n.memoizedState={dehydrated:e,treeContext:t,retryLane:1073741824},t=Zr(18,null,null,0),t.stateNode=e,t.return=n,n.child=t,Er=n,Tr=null,!0):!1;default:return!1}}function _b(n){return(n.mode&1)!==0&&(n.flags&128)===0}function Eb(n){if(rn){var e=Tr;if(e){var t=e;if(!pT(n,e)){if(_b(n))throw Error(ge(418));e=Ra(t.nextSibling);var s=Er;e&&pT(n,e)?rA(s,t):(n.flags=n.flags&-4097|2,rn=!1,Er=n)}}else{if(_b(n))throw Error(ge(418));n.flags=n.flags&-4097|2,rn=!1,Er=n}}}function fT(n){for(n=n.return;n!==null&&n.tag!==5&&n.tag!==3&&n.tag!==13;)n=n.return;Er=n}function Tg(n){if(n!==Er)return!1;if(!rn)return fT(n),rn=!0,!1;var e;if((e=n.tag!==3)&&!(e=n.tag!==5)&&(e=n.type,e=e!=="head"&&e!=="body"&&!Ib(n.type,n.memoizedProps)),e&&(e=Tr)){if(_b(n))throw oA(),Error(ge(418));for(;e;)rA(n,e),e=Ra(e.nextSibling)}if(fT(n),n.tag===13){if(n=n.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(ge(317));e:{for(n=n.nextSibling,e=0;n;){if(n.nodeType===8){var t=n.data;if(t==="/$"){if(e===0){Tr=Ra(n.nextSibling);break e}e--}else t!=="$"&&t!=="$!"&&t!=="$?"||e++}n=n.nextSibling}Tr=null}}else Tr=Er?Ra(n.stateNode.nextSibling):null;return!0}function oA(){for(var n=Tr;n;)n=Ra(n.nextSibling)}function Vc(){Tr=Er=null,rn=!1}function RC(n){To===null?To=[n]:To.push(n)}var eU=ra.ReactCurrentBatchConfig;function Yd(n,e,t){if(n=t.ref,n!==null&&typeof n!="function"&&typeof n!="object"){if(t._owner){if(t=t._owner,t){if(t.tag!==1)throw Error(ge(309));var s=t.stateNode}if(!s)throw Error(ge(147,n));var r=s,o=""+n;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(i){var a=r.refs;i===null?delete a[o]:a[o]=i},e._stringRef=o,e)}if(typeof n!="string")throw Error(ge(284));if(!t._owner)throw Error(ge(290,n))}return n}function $g(n,e){throw n=Object.prototype.toString.call(e),Error(ge(31,n==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":n))}function mT(n){var e=n._init;return e(n._payload)}function iA(n){function e(y,x){if(n){var w=y.deletions;w===null?(y.deletions=[x],y.flags|=16):w.push(x)}}function t(y,x){if(!n)return null;for(;x!==null;)e(y,x),x=x.sibling;return null}function s(y,x){for(y=new Map;x!==null;)x.key!==null?y.set(x.key,x):y.set(x.index,x),x=x.sibling;return y}function r(y,x){return y=Pa(y,x),y.index=0,y.sibling=null,y}function o(y,x,w){return y.index=w,n?(w=y.alternate,w!==null?(w=w.index,w<x?(y.flags|=2,x):w):(y.flags|=2,x)):(y.flags|=1048576,x)}function i(y){return n&&y.alternate===null&&(y.flags|=2),y}function a(y,x,w,b){return x===null||x.tag!==6?(x=bv(w,y.mode,b),x.return=y,x):(x=r(x,w),x.return=y,x)}function l(y,x,w,b){var S=w.type;return S===cc?c(y,x,w.props.children,b,w.key):x!==null&&(x.elementType===S||typeof S=="object"&&S!==null&&S.$$typeof===ga&&mT(S)===x.type)?(b=r(x,w.props),b.ref=Yd(y,x,w),b.return=y,b):(b=uy(w.type,w.key,w.props,null,y.mode,b),b.ref=Yd(y,x,w),b.return=y,b)}function u(y,x,w,b){return x===null||x.tag!==4||x.stateNode.containerInfo!==w.containerInfo||x.stateNode.implementation!==w.implementation?(x=Sv(w,y.mode,b),x.return=y,x):(x=r(x,w.children||[]),x.return=y,x)}function c(y,x,w,b,S){return x===null||x.tag!==7?(x=jl(w,y.mode,b,S),x.return=y,x):(x=r(x,w),x.return=y,x)}function h(y,x,w){if(typeof x=="string"&&x!==""||typeof x=="number")return x=bv(""+x,y.mode,w),x.return=y,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case yg:return w=uy(x.type,x.key,x.props,null,y.mode,w),w.ref=Yd(y,null,x),w.return=y,w;case uc:return x=Sv(x,y.mode,w),x.return=y,x;case ga:var b=x._init;return h(y,b(x._payload),w)}if(op(x)||Hd(x))return x=jl(x,y.mode,w,null),x.return=y,x;$g(y,x)}return null}function d(y,x,w,b){var S=x!==null?x.key:null;if(typeof w=="string"&&w!==""||typeof w=="number")return S!==null?null:a(y,x,""+w,b);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case yg:return w.key===S?l(y,x,w,b):null;case uc:return w.key===S?u(y,x,w,b):null;case ga:return S=w._init,d(y,x,S(w._payload),b)}if(op(w)||Hd(w))return S!==null?null:c(y,x,w,b,null);$g(y,w)}return null}function p(y,x,w,b,S){if(typeof b=="string"&&b!==""||typeof b=="number")return y=y.get(w)||null,a(x,y,""+b,S);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case yg:return y=y.get(b.key===null?w:b.key)||null,l(x,y,b,S);case uc:return y=y.get(b.key===null?w:b.key)||null,u(x,y,b,S);case ga:var C=b._init;return p(y,x,w,C(b._payload),S)}if(op(b)||Hd(b))return y=y.get(w)||null,c(x,y,b,S,null);$g(x,b)}return null}function f(y,x,w,b){for(var S=null,C=null,k=x,N=x=0,_=null;k!==null&&N<w.length;N++){k.index>N?(_=k,k=null):_=k.sibling;var E=d(y,k,w[N],b);if(E===null){k===null&&(k=_);break}n&&k&&E.alternate===null&&e(y,k),x=o(E,x,N),C===null?S=E:C.sibling=E,C=E,k=_}if(N===w.length)return t(y,k),rn&&Tl(y,N),S;if(k===null){for(;N<w.length;N++)k=h(y,w[N],b),k!==null&&(x=o(k,x,N),C===null?S=k:C.sibling=k,C=k);return rn&&Tl(y,N),S}for(k=s(y,k);N<w.length;N++)_=p(k,y,N,w[N],b),_!==null&&(n&&_.alternate!==null&&k.delete(_.key===null?N:_.key),x=o(_,x,N),C===null?S=_:C.sibling=_,C=_);return n&&k.forEach(function(D){return e(y,D)}),rn&&Tl(y,N),S}function m(y,x,w,b){var S=Hd(w);if(typeof S!="function")throw Error(ge(150));if(w=S.call(w),w==null)throw Error(ge(151));for(var C=S=null,k=x,N=x=0,_=null,E=w.next();k!==null&&!E.done;N++,E=w.next()){k.index>N?(_=k,k=null):_=k.sibling;var D=d(y,k,E.value,b);if(D===null){k===null&&(k=_);break}n&&k&&D.alternate===null&&e(y,k),x=o(D,x,N),C===null?S=D:C.sibling=D,C=D,k=_}if(E.done)return t(y,k),rn&&Tl(y,N),S;if(k===null){for(;!E.done;N++,E=w.next())E=h(y,E.value,b),E!==null&&(x=o(E,x,N),C===null?S=E:C.sibling=E,C=E);return rn&&Tl(y,N),S}for(k=s(y,k);!E.done;N++,E=w.next())E=p(k,y,N,E.value,b),E!==null&&(n&&E.alternate!==null&&k.delete(E.key===null?N:E.key),x=o(E,x,N),C===null?S=E:C.sibling=E,C=E);return n&&k.forEach(function(P){return e(y,P)}),rn&&Tl(y,N),S}function g(y,x,w,b){if(typeof w=="object"&&w!==null&&w.type===cc&&w.key===null&&(w=w.props.children),typeof w=="object"&&w!==null){switch(w.$$typeof){case yg:e:{for(var S=w.key,C=x;C!==null;){if(C.key===S){if(S=w.type,S===cc){if(C.tag===7){t(y,C.sibling),x=r(C,w.props.children),x.return=y,y=x;break e}}else if(C.elementType===S||typeof S=="object"&&S!==null&&S.$$typeof===ga&&mT(S)===C.type){t(y,C.sibling),x=r(C,w.props),x.ref=Yd(y,C,w),x.return=y,y=x;break e}t(y,C);break}else e(y,C);C=C.sibling}w.type===cc?(x=jl(w.props.children,y.mode,b,w.key),x.return=y,y=x):(b=uy(w.type,w.key,w.props,null,y.mode,b),b.ref=Yd(y,x,w),b.return=y,y=b)}return i(y);case uc:e:{for(C=w.key;x!==null;){if(x.key===C)if(x.tag===4&&x.stateNode.containerInfo===w.containerInfo&&x.stateNode.implementation===w.implementation){t(y,x.sibling),x=r(x,w.children||[]),x.return=y,y=x;break e}else{t(y,x);break}else e(y,x);x=x.sibling}x=Sv(w,y.mode,b),x.return=y,y=x}return i(y);case ga:return C=w._init,g(y,x,C(w._payload),b)}if(op(w))return f(y,x,w,b);if(Hd(w))return m(y,x,w,b);$g(y,w)}return typeof w=="string"&&w!==""||typeof w=="number"?(w=""+w,x!==null&&x.tag===6?(t(y,x.sibling),x=r(x,w),x.return=y,y=x):(t(y,x),x=bv(w,y.mode,b),x.return=y,y=x),i(y)):t(y,x)}return g}var Bc=iA(!0),aA=iA(!1),Ry=ol(null),Ay=null,xc=null,AC=null;function DC(){AC=xc=Ay=null}function OC(n){var e=Ry.current;Yt(Ry),n._currentValue=e}function Rb(n,e,t){for(;n!==null;){var s=n.alternate;if((n.childLanes&e)!==e?(n.childLanes|=e,s!==null&&(s.childLanes|=e)):s!==null&&(s.childLanes&e)!==e&&(s.childLanes|=e),n===t)break;n=n.return}}function _c(n,e){Ay=n,AC=xc=null,n=n.dependencies,n!==null&&n.firstContext!==null&&(n.lanes&e&&(lr=!0),n.firstContext=null)}function ho(n){var e=n._currentValue;if(AC!==n)if(n={context:n,memoizedValue:e,next:null},xc===null){if(Ay===null)throw Error(ge(308));xc=n,Ay.dependencies={lanes:0,firstContext:n}}else xc=xc.next=n;return e}var Ll=null;function PC(n){Ll===null?Ll=[n]:Ll.push(n)}function lA(n,e,t,s){var r=e.interleaved;return r===null?(t.next=t,PC(e)):(t.next=r.next,r.next=t),e.interleaved=t,Zi(n,s)}function Zi(n,e){n.lanes|=e;var t=n.alternate;for(t!==null&&(t.lanes|=e),t=n,n=n.return;n!==null;)n.childLanes|=e,t=n.alternate,t!==null&&(t.childLanes|=e),t=n,n=n.return;return t.tag===3?t.stateNode:null}var ya=!1;function FC(n){n.updateQueue={baseState:n.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function uA(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,firstBaseUpdate:n.firstBaseUpdate,lastBaseUpdate:n.lastBaseUpdate,shared:n.shared,effects:n.effects})}function Gi(n,e){return{eventTime:n,lane:e,tag:0,payload:null,callback:null,next:null}}function Aa(n,e,t){var s=n.updateQueue;if(s===null)return null;if(s=s.shared,kt&2){var r=s.pending;return r===null?e.next=e:(e.next=r.next,r.next=e),s.pending=e,Zi(n,t)}return r=s.interleaved,r===null?(e.next=e,PC(s)):(e.next=r.next,r.next=e),s.interleaved=e,Zi(n,t)}function sy(n,e,t){if(e=e.updateQueue,e!==null&&(e=e.shared,(t&4194240)!==0)){var s=e.lanes;s&=n.pendingLanes,t|=s,e.lanes=t,bC(n,t)}}function gT(n,e){var t=n.updateQueue,s=n.alternate;if(s!==null&&(s=s.updateQueue,t===s)){var r=null,o=null;if(t=t.firstBaseUpdate,t!==null){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};o===null?r=o=i:o=o.next=i,t=t.next}while(t!==null);o===null?r=o=e:o=o.next=e}else r=o=e;t={baseState:s.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:s.shared,effects:s.effects},n.updateQueue=t;return}n=t.lastBaseUpdate,n===null?t.firstBaseUpdate=e:n.next=e,t.lastBaseUpdate=e}function Dy(n,e,t,s){var r=n.updateQueue;ya=!1;var o=r.firstBaseUpdate,i=r.lastBaseUpdate,a=r.shared.pending;if(a!==null){r.shared.pending=null;var l=a,u=l.next;l.next=null,i===null?o=u:i.next=u,i=l;var c=n.alternate;c!==null&&(c=c.updateQueue,a=c.lastBaseUpdate,a!==i&&(a===null?c.firstBaseUpdate=u:a.next=u,c.lastBaseUpdate=l))}if(o!==null){var h=r.baseState;i=0,c=u=l=null,a=o;do{var d=a.lane,p=a.eventTime;if((s&d)===d){c!==null&&(c=c.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var f=n,m=a;switch(d=e,p=t,m.tag){case 1:if(f=m.payload,typeof f=="function"){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,d=typeof f=="function"?f.call(p,h,d):f,d==null)break e;h=fn({},h,d);break e;case 2:ya=!0}}a.callback!==null&&a.lane!==0&&(n.flags|=64,d=r.effects,d===null?r.effects=[a]:d.push(a))}else p={eventTime:p,lane:d,tag:a.tag,payload:a.payload,callback:a.callback,next:null},c===null?(u=c=p,l=h):c=c.next=p,i|=d;if(a=a.next,a===null){if(a=r.shared.pending,a===null)break;d=a,a=d.next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}while(1);if(c===null&&(l=h),r.baseState=l,r.firstBaseUpdate=u,r.lastBaseUpdate=c,e=r.shared.interleaved,e!==null){r=e;do i|=r.lane,r=r.next;while(r!==e)}else o===null&&(r.shared.lanes=0);su|=i,n.lanes=i,n.memoizedState=h}}function yT(n,e,t){if(n=e.effects,e.effects=null,n!==null)for(e=0;e<n.length;e++){var s=n[e],r=s.callback;if(r!==null){if(s.callback=null,s=t,typeof r!="function")throw Error(ge(191,r));r.call(s)}}}var wf={},gi=ol(wf),Mp=ol(wf),zp=ol(wf);function Ml(n){if(n===wf)throw Error(ge(174));return n}function LC(n,e){switch(Ut(zp,e),Ut(Mp,n),Ut(gi,wf),n=e.nodeType,n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:hb(null,"");break;default:n=n===8?e.parentNode:e,e=n.namespaceURI||null,n=n.tagName,e=hb(e,n)}Yt(gi),Ut(gi,e)}function Wc(){Yt(gi),Yt(Mp),Yt(zp)}function cA(n){Ml(zp.current);var e=Ml(gi.current),t=hb(e,n.type);e!==t&&(Ut(Mp,n),Ut(gi,t))}function MC(n){Mp.current===n&&(Yt(gi),Yt(Mp))}var cn=ol(0);function Oy(n){for(var e=n;e!==null;){if(e.tag===13){var t=e.memoizedState;if(t!==null&&(t=t.dehydrated,t===null||t.data==="$?"||t.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var mv=[];function zC(){for(var n=0;n<mv.length;n++)mv[n]._workInProgressVersionPrimary=null;mv.length=0}var ry=ra.ReactCurrentDispatcher,gv=ra.ReactCurrentBatchConfig,nu=0,pn=null,Hn=null,Jn=null,Py=!1,vp=!1,Vp=0,tU=0;function bs(){throw Error(ge(321))}function VC(n,e){if(e===null)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!Mo(n[t],e[t]))return!1;return!0}function BC(n,e,t,s,r,o){if(nu=o,pn=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ry.current=n===null||n.memoizedState===null?oU:iU,n=t(s,r),vp){o=0;do{if(vp=!1,Vp=0,25<=o)throw Error(ge(301));o+=1,Jn=Hn=null,e.updateQueue=null,ry.current=aU,n=t(s,r)}while(vp)}if(ry.current=Fy,e=Hn!==null&&Hn.next!==null,nu=0,Jn=Hn=pn=null,Py=!1,e)throw Error(ge(300));return n}function WC(){var n=Vp!==0;return Vp=0,n}function li(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Jn===null?pn.memoizedState=Jn=n:Jn=Jn.next=n,Jn}function po(){if(Hn===null){var n=pn.alternate;n=n!==null?n.memoizedState:null}else n=Hn.next;var e=Jn===null?pn.memoizedState:Jn.next;if(e!==null)Jn=e,Hn=n;else{if(n===null)throw Error(ge(310));Hn=n,n={memoizedState:Hn.memoizedState,baseState:Hn.baseState,baseQueue:Hn.baseQueue,queue:Hn.queue,next:null},Jn===null?pn.memoizedState=Jn=n:Jn=Jn.next=n}return Jn}function Bp(n,e){return typeof e=="function"?e(n):e}function yv(n){var e=po(),t=e.queue;if(t===null)throw Error(ge(311));t.lastRenderedReducer=n;var s=Hn,r=s.baseQueue,o=t.pending;if(o!==null){if(r!==null){var i=r.next;r.next=o.next,o.next=i}s.baseQueue=r=o,t.pending=null}if(r!==null){o=r.next,s=s.baseState;var a=i=null,l=null,u=o;do{var c=u.lane;if((nu&c)===c)l!==null&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),s=u.hasEagerState?u.eagerState:n(s,u.action);else{var h={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};l===null?(a=l=h,i=s):l=l.next=h,pn.lanes|=c,su|=c}u=u.next}while(u!==null&&u!==o);l===null?i=s:l.next=a,Mo(s,e.memoizedState)||(lr=!0),e.memoizedState=s,e.baseState=i,e.baseQueue=l,t.lastRenderedState=s}if(n=t.interleaved,n!==null){r=n;do o=r.lane,pn.lanes|=o,su|=o,r=r.next;while(r!==n)}else r===null&&(t.lanes=0);return[e.memoizedState,t.dispatch]}function xv(n){var e=po(),t=e.queue;if(t===null)throw Error(ge(311));t.lastRenderedReducer=n;var s=t.dispatch,r=t.pending,o=e.memoizedState;if(r!==null){t.pending=null;var i=r=r.next;do o=n(o,i.action),i=i.next;while(i!==r);Mo(o,e.memoizedState)||(lr=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),t.lastRenderedState=o}return[o,s]}function hA(){}function dA(n,e){var t=pn,s=po(),r=e(),o=!Mo(s.memoizedState,r);if(o&&(s.memoizedState=r,lr=!0),s=s.queue,UC(mA.bind(null,t,s,n),[n]),s.getSnapshot!==e||o||Jn!==null&&Jn.memoizedState.tag&1){if(t.flags|=2048,Wp(9,fA.bind(null,t,s,r,e),void 0,null),ns===null)throw Error(ge(349));nu&30||pA(t,e,r)}return r}function pA(n,e,t){n.flags|=16384,n={getSnapshot:e,value:t},e=pn.updateQueue,e===null?(e={lastEffect:null,stores:null},pn.updateQueue=e,e.stores=[n]):(t=e.stores,t===null?e.stores=[n]:t.push(n))}function fA(n,e,t,s){e.value=t,e.getSnapshot=s,gA(e)&&yA(n)}function mA(n,e,t){return t(function(){gA(e)&&yA(n)})}function gA(n){var e=n.getSnapshot;n=n.value;try{var t=e();return!Mo(n,t)}catch{return!0}}function yA(n){var e=Zi(n,1);e!==null&&Po(e,n,1,-1)}function xT(n){var e=li();return typeof n=="function"&&(n=n()),e.memoizedState=e.baseState=n,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Bp,lastRenderedState:n},e.queue=n,n=n.dispatch=rU.bind(null,pn,n),[e.memoizedState,n]}function Wp(n,e,t,s){return n={tag:n,create:e,destroy:t,deps:s,next:null},e=pn.updateQueue,e===null?(e={lastEffect:null,stores:null},pn.updateQueue=e,e.lastEffect=n.next=n):(t=e.lastEffect,t===null?e.lastEffect=n.next=n:(s=t.next,t.next=n,n.next=s,e.lastEffect=n)),n}function xA(){return po().memoizedState}function oy(n,e,t,s){var r=li();pn.flags|=n,r.memoizedState=Wp(1|e,t,void 0,s===void 0?null:s)}function G0(n,e,t,s){var r=po();s=s===void 0?null:s;var o=void 0;if(Hn!==null){var i=Hn.memoizedState;if(o=i.destroy,s!==null&&VC(s,i.deps)){r.memoizedState=Wp(e,t,o,s);return}}pn.flags|=n,r.memoizedState=Wp(1|e,t,o,s)}function wT(n,e){return oy(8390656,8,n,e)}function UC(n,e){return G0(2048,8,n,e)}function wA(n,e){return G0(4,2,n,e)}function vA(n,e){return G0(4,4,n,e)}function bA(n,e){if(typeof e=="function")return n=n(),e(n),function(){e(null)};if(e!=null)return n=n(),e.current=n,function(){e.current=null}}function SA(n,e,t){return t=t!=null?t.concat([n]):null,G0(4,4,bA.bind(null,e,n),t)}function GC(){}function CA(n,e){var t=po();e=e===void 0?null:e;var s=t.memoizedState;return s!==null&&e!==null&&VC(e,s[1])?s[0]:(t.memoizedState=[n,e],n)}function kA(n,e){var t=po();e=e===void 0?null:e;var s=t.memoizedState;return s!==null&&e!==null&&VC(e,s[1])?s[0]:(n=n(),t.memoizedState=[n,e],n)}function IA(n,e,t){return nu&21?(Mo(t,e)||(t=ER(),pn.lanes|=t,su|=t,n.baseState=!0),e):(n.baseState&&(n.baseState=!1,lr=!0),n.memoizedState=t)}function nU(n,e){var t=Et;Et=t!==0&&4>t?t:4,n(!0);var s=gv.transition;gv.transition={};try{n(!1),e()}finally{Et=t,gv.transition=s}}function NA(){return po().memoizedState}function sU(n,e,t){var s=Oa(n);if(t={lane:s,action:t,hasEagerState:!1,eagerState:null,next:null},TA(n))$A(e,t);else if(t=lA(n,e,t,s),t!==null){var r=Us();Po(t,n,s,r),_A(t,e,s)}}function rU(n,e,t){var s=Oa(n),r={lane:s,action:t,hasEagerState:!1,eagerState:null,next:null};if(TA(n))$A(e,r);else{var o=n.alternate;if(n.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var i=e.lastRenderedState,a=o(i,t);if(r.hasEagerState=!0,r.eagerState=a,Mo(a,i)){var l=e.interleaved;l===null?(r.next=r,PC(e)):(r.next=l.next,l.next=r),e.interleaved=r;return}}catch{}finally{}t=lA(n,e,r,s),t!==null&&(r=Us(),Po(t,n,s,r),_A(t,e,s))}}function TA(n){var e=n.alternate;return n===pn||e!==null&&e===pn}function $A(n,e){vp=Py=!0;var t=n.pending;t===null?e.next=e:(e.next=t.next,t.next=e),n.pending=e}function _A(n,e,t){if(t&4194240){var s=e.lanes;s&=n.pendingLanes,t|=s,e.lanes=t,bC(n,t)}}var Fy={readContext:ho,useCallback:bs,useContext:bs,useEffect:bs,useImperativeHandle:bs,useInsertionEffect:bs,useLayoutEffect:bs,useMemo:bs,useReducer:bs,useRef:bs,useState:bs,useDebugValue:bs,useDeferredValue:bs,useTransition:bs,useMutableSource:bs,useSyncExternalStore:bs,useId:bs,unstable_isNewReconciler:!1},oU={readContext:ho,useCallback:function(n,e){return li().memoizedState=[n,e===void 0?null:e],n},useContext:ho,useEffect:wT,useImperativeHandle:function(n,e,t){return t=t!=null?t.concat([n]):null,oy(4194308,4,bA.bind(null,e,n),t)},useLayoutEffect:function(n,e){return oy(4194308,4,n,e)},useInsertionEffect:function(n,e){return oy(4,2,n,e)},useMemo:function(n,e){var t=li();return e=e===void 0?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var s=li();return e=t!==void 0?t(e):e,s.memoizedState=s.baseState=e,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},s.queue=n,n=n.dispatch=sU.bind(null,pn,n),[s.memoizedState,n]},useRef:function(n){var e=li();return n={current:n},e.memoizedState=n},useState:xT,useDebugValue:GC,useDeferredValue:function(n){return li().memoizedState=n},useTransition:function(){var n=xT(!1),e=n[0];return n=nU.bind(null,n[1]),li().memoizedState=n,[e,n]},useMutableSource:function(){},useSyncExternalStore:function(n,e,t){var s=pn,r=li();if(rn){if(t===void 0)throw Error(ge(407));t=t()}else{if(t=e(),ns===null)throw Error(ge(349));nu&30||pA(s,e,t)}r.memoizedState=t;var o={value:t,getSnapshot:e};return r.queue=o,wT(mA.bind(null,s,o,n),[n]),s.flags|=2048,Wp(9,fA.bind(null,s,o,t,e),void 0,null),t},useId:function(){var n=li(),e=ns.identifierPrefix;if(rn){var t=Ui,s=Wi;t=(s&~(1<<32-Oo(s)-1)).toString(32)+t,e=":"+e+"R"+t,t=Vp++,0<t&&(e+="H"+t.toString(32)),e+=":"}else t=tU++,e=":"+e+"r"+t.toString(32)+":";return n.memoizedState=e},unstable_isNewReconciler:!1},iU={readContext:ho,useCallback:CA,useContext:ho,useEffect:UC,useImperativeHandle:SA,useInsertionEffect:wA,useLayoutEffect:vA,useMemo:kA,useReducer:yv,useRef:xA,useState:function(){return yv(Bp)},useDebugValue:GC,useDeferredValue:function(n){var e=po();return IA(e,Hn.memoizedState,n)},useTransition:function(){var n=yv(Bp)[0],e=po().memoizedState;return[n,e]},useMutableSource:hA,useSyncExternalStore:dA,useId:NA,unstable_isNewReconciler:!1},aU={readContext:ho,useCallback:CA,useContext:ho,useEffect:UC,useImperativeHandle:SA,useInsertionEffect:wA,useLayoutEffect:vA,useMemo:kA,useReducer:xv,useRef:xA,useState:function(){return xv(Bp)},useDebugValue:GC,useDeferredValue:function(n){var e=po();return Hn===null?e.memoizedState=n:IA(e,Hn.memoizedState,n)},useTransition:function(){var n=xv(Bp)[0],e=po().memoizedState;return[n,e]},useMutableSource:hA,useSyncExternalStore:dA,useId:NA,unstable_isNewReconciler:!1};function ko(n,e){if(n&&n.defaultProps){e=fn({},e),n=n.defaultProps;for(var t in n)e[t]===void 0&&(e[t]=n[t]);return e}return e}function Ab(n,e,t,s){e=n.memoizedState,t=t(s,e),t=t==null?e:fn({},e,t),n.memoizedState=t,n.lanes===0&&(n.updateQueue.baseState=t)}var H0={isMounted:function(n){return(n=n._reactInternals)?ku(n)===n:!1},enqueueSetState:function(n,e,t){n=n._reactInternals;var s=Us(),r=Oa(n),o=Gi(s,r);o.payload=e,t!=null&&(o.callback=t),e=Aa(n,o,r),e!==null&&(Po(e,n,r,s),sy(e,n,r))},enqueueReplaceState:function(n,e,t){n=n._reactInternals;var s=Us(),r=Oa(n),o=Gi(s,r);o.tag=1,o.payload=e,t!=null&&(o.callback=t),e=Aa(n,o,r),e!==null&&(Po(e,n,r,s),sy(e,n,r))},enqueueForceUpdate:function(n,e){n=n._reactInternals;var t=Us(),s=Oa(n),r=Gi(t,s);r.tag=2,e!=null&&(r.callback=e),e=Aa(n,r,s),e!==null&&(Po(e,n,s,t),sy(e,n,s))}};function vT(n,e,t,s,r,o,i){return n=n.stateNode,typeof n.shouldComponentUpdate=="function"?n.shouldComponentUpdate(s,o,i):e.prototype&&e.prototype.isPureReactComponent?!Op(t,s)||!Op(r,o):!0}function EA(n,e,t){var s=!1,r=Wa,o=e.contextType;return typeof o=="object"&&o!==null?o=ho(o):(r=dr(e)?eu:Es.current,s=e.contextTypes,o=(s=s!=null)?zc(n,r):Wa),e=new e(t,o),n.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=H0,n.stateNode=e,e._reactInternals=n,s&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=r,n.__reactInternalMemoizedMaskedChildContext=o),e}function bT(n,e,t,s){n=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(t,s),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(t,s),e.state!==n&&H0.enqueueReplaceState(e,e.state,null)}function Db(n,e,t,s){var r=n.stateNode;r.props=t,r.state=n.memoizedState,r.refs={},FC(n);var o=e.contextType;typeof o=="object"&&o!==null?r.context=ho(o):(o=dr(e)?eu:Es.current,r.context=zc(n,o)),r.state=n.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&(Ab(n,e,o,t),r.state=n.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof r.getSnapshotBeforeUpdate=="function"||typeof r.UNSAFE_componentWillMount!="function"&&typeof r.componentWillMount!="function"||(e=r.state,typeof r.componentWillMount=="function"&&r.componentWillMount(),typeof r.UNSAFE_componentWillMount=="function"&&r.UNSAFE_componentWillMount(),e!==r.state&&H0.enqueueReplaceState(r,r.state,null),Dy(n,t,r,s),r.state=n.memoizedState),typeof r.componentDidMount=="function"&&(n.flags|=4194308)}function Uc(n,e){try{var t="",s=e;do t+=P4(s),s=s.return;while(s);var r=t}catch(o){r=`
Error generating stack: `+o.message+`
`+o.stack}return{value:n,source:e,stack:r,digest:null}}function wv(n,e,t){return{value:n,source:null,stack:t??null,digest:e??null}}function Ob(n,e){try{console.error(e.value)}catch(t){setTimeout(function(){throw t})}}var lU=typeof WeakMap=="function"?WeakMap:Map;function RA(n,e,t){t=Gi(-1,t),t.tag=3,t.payload={element:null};var s=e.value;return t.callback=function(){My||(My=!0,Gb=s),Ob(n,e)},t}function AA(n,e,t){t=Gi(-1,t),t.tag=3;var s=n.type.getDerivedStateFromError;if(typeof s=="function"){var r=e.value;t.payload=function(){return s(r)},t.callback=function(){Ob(n,e)}}var o=n.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(t.callback=function(){Ob(n,e),typeof s!="function"&&(Da===null?Da=new Set([this]):Da.add(this));var i=e.stack;this.componentDidCatch(e.value,{componentStack:i!==null?i:""})}),t}function ST(n,e,t){var s=n.pingCache;if(s===null){s=n.pingCache=new lU;var r=new Set;s.set(e,r)}else r=s.get(e),r===void 0&&(r=new Set,s.set(e,r));r.has(t)||(r.add(t),n=SU.bind(null,n,e,t),e.then(n,n))}function CT(n){do{var e;if((e=n.tag===13)&&(e=n.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return n;n=n.return}while(n!==null);return null}function kT(n,e,t,s,r){return n.mode&1?(n.flags|=65536,n.lanes=r,n):(n===e?n.flags|=65536:(n.flags|=128,t.flags|=131072,t.flags&=-52805,t.tag===1&&(t.alternate===null?t.tag=17:(e=Gi(-1,1),e.tag=2,Aa(t,e,1))),t.lanes|=1),n)}var uU=ra.ReactCurrentOwner,lr=!1;function Ls(n,e,t,s){e.child=n===null?aA(e,null,t,s):Bc(e,n.child,t,s)}function IT(n,e,t,s,r){t=t.render;var o=e.ref;return _c(e,r),s=BC(n,e,t,s,o,r),t=WC(),n!==null&&!lr?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~r,Ji(n,e,r)):(rn&&t&&_C(e),e.flags|=1,Ls(n,e,s,r),e.child)}function NT(n,e,t,s,r){if(n===null){var o=t.type;return typeof o=="function"&&!ZC(o)&&o.defaultProps===void 0&&t.compare===null&&t.defaultProps===void 0?(e.tag=15,e.type=o,DA(n,e,o,s,r)):(n=uy(t.type,null,s,e,e.mode,r),n.ref=e.ref,n.return=e,e.child=n)}if(o=n.child,!(n.lanes&r)){var i=o.memoizedProps;if(t=t.compare,t=t!==null?t:Op,t(i,s)&&n.ref===e.ref)return Ji(n,e,r)}return e.flags|=1,n=Pa(o,s),n.ref=e.ref,n.return=e,e.child=n}function DA(n,e,t,s,r){if(n!==null){var o=n.memoizedProps;if(Op(o,s)&&n.ref===e.ref)if(lr=!1,e.pendingProps=s=o,(n.lanes&r)!==0)n.flags&131072&&(lr=!0);else return e.lanes=n.lanes,Ji(n,e,r)}return Pb(n,e,t,s,r)}function OA(n,e,t){var s=e.pendingProps,r=s.children,o=n!==null?n.memoizedState:null;if(s.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ut(vc,kr),kr|=t;else{if(!(t&1073741824))return n=o!==null?o.baseLanes|t:t,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:n,cachePool:null,transitions:null},e.updateQueue=null,Ut(vc,kr),kr|=n,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},s=o!==null?o.baseLanes:t,Ut(vc,kr),kr|=s}else o!==null?(s=o.baseLanes|t,e.memoizedState=null):s=t,Ut(vc,kr),kr|=s;return Ls(n,e,r,t),e.child}function PA(n,e){var t=e.ref;(n===null&&t!==null||n!==null&&n.ref!==t)&&(e.flags|=512,e.flags|=2097152)}function Pb(n,e,t,s,r){var o=dr(t)?eu:Es.current;return o=zc(e,o),_c(e,r),t=BC(n,e,t,s,o,r),s=WC(),n!==null&&!lr?(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~r,Ji(n,e,r)):(rn&&s&&_C(e),e.flags|=1,Ls(n,e,t,r),e.child)}function TT(n,e,t,s,r){if(dr(t)){var o=!0;$y(e)}else o=!1;if(_c(e,r),e.stateNode===null)iy(n,e),EA(e,t,s),Db(e,t,s,r),s=!0;else if(n===null){var i=e.stateNode,a=e.memoizedProps;i.props=a;var l=i.context,u=t.contextType;typeof u=="object"&&u!==null?u=ho(u):(u=dr(t)?eu:Es.current,u=zc(e,u));var c=t.getDerivedStateFromProps,h=typeof c=="function"||typeof i.getSnapshotBeforeUpdate=="function";h||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==s||l!==u)&&bT(e,i,s,u),ya=!1;var d=e.memoizedState;i.state=d,Dy(e,s,i,r),l=e.memoizedState,a!==s||d!==l||hr.current||ya?(typeof c=="function"&&(Ab(e,t,c,s),l=e.memoizedState),(a=ya||vT(e,t,a,s,d,l,u))?(h||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount()),typeof i.componentDidMount=="function"&&(e.flags|=4194308)):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=s,e.memoizedState=l),i.props=s,i.state=l,i.context=u,s=a):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),s=!1)}else{i=e.stateNode,uA(n,e),a=e.memoizedProps,u=e.type===e.elementType?a:ko(e.type,a),i.props=u,h=e.pendingProps,d=i.context,l=t.contextType,typeof l=="object"&&l!==null?l=ho(l):(l=dr(t)?eu:Es.current,l=zc(e,l));var p=t.getDerivedStateFromProps;(c=typeof p=="function"||typeof i.getSnapshotBeforeUpdate=="function")||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==h||d!==l)&&bT(e,i,s,l),ya=!1,d=e.memoizedState,i.state=d,Dy(e,s,i,r);var f=e.memoizedState;a!==h||d!==f||hr.current||ya?(typeof p=="function"&&(Ab(e,t,p,s),f=e.memoizedState),(u=ya||vT(e,t,u,s,d,f,l)||!1)?(c||typeof i.UNSAFE_componentWillUpdate!="function"&&typeof i.componentWillUpdate!="function"||(typeof i.componentWillUpdate=="function"&&i.componentWillUpdate(s,f,l),typeof i.UNSAFE_componentWillUpdate=="function"&&i.UNSAFE_componentWillUpdate(s,f,l)),typeof i.componentDidUpdate=="function"&&(e.flags|=4),typeof i.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof i.componentDidUpdate!="function"||a===n.memoizedProps&&d===n.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===n.memoizedProps&&d===n.memoizedState||(e.flags|=1024),e.memoizedProps=s,e.memoizedState=f),i.props=s,i.state=f,i.context=l,s=u):(typeof i.componentDidUpdate!="function"||a===n.memoizedProps&&d===n.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===n.memoizedProps&&d===n.memoizedState||(e.flags|=1024),s=!1)}return Fb(n,e,t,s,o,r)}function Fb(n,e,t,s,r,o){PA(n,e);var i=(e.flags&128)!==0;if(!s&&!i)return r&&dT(e,t,!1),Ji(n,e,o);s=e.stateNode,uU.current=e;var a=i&&typeof t.getDerivedStateFromError!="function"?null:s.render();return e.flags|=1,n!==null&&i?(e.child=Bc(e,n.child,null,o),e.child=Bc(e,null,a,o)):Ls(n,e,a,o),e.memoizedState=s.state,r&&dT(e,t,!0),e.child}function FA(n){var e=n.stateNode;e.pendingContext?hT(n,e.pendingContext,e.pendingContext!==e.context):e.context&&hT(n,e.context,!1),LC(n,e.containerInfo)}function $T(n,e,t,s,r){return Vc(),RC(r),e.flags|=256,Ls(n,e,t,s),e.child}var Lb={dehydrated:null,treeContext:null,retryLane:0};function Mb(n){return{baseLanes:n,cachePool:null,transitions:null}}function LA(n,e,t){var s=e.pendingProps,r=cn.current,o=!1,i=(e.flags&128)!==0,a;if((a=i)||(a=n!==null&&n.memoizedState===null?!1:(r&2)!==0),a?(o=!0,e.flags&=-129):(n===null||n.memoizedState!==null)&&(r|=1),Ut(cn,r&1),n===null)return Eb(e),n=e.memoizedState,n!==null&&(n=n.dehydrated,n!==null)?(e.mode&1?n.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(i=s.children,n=s.fallback,o?(s=e.mode,o=e.child,i={mode:"hidden",children:i},!(s&1)&&o!==null?(o.childLanes=0,o.pendingProps=i):o=K0(i,s,0,null),n=jl(n,s,t,null),o.return=e,n.return=e,o.sibling=n,e.child=o,e.child.memoizedState=Mb(t),e.memoizedState=Lb,n):HC(e,i));if(r=n.memoizedState,r!==null&&(a=r.dehydrated,a!==null))return cU(n,e,i,s,a,r,t);if(o){o=s.fallback,i=e.mode,r=n.child,a=r.sibling;var l={mode:"hidden",children:s.children};return!(i&1)&&e.child!==r?(s=e.child,s.childLanes=0,s.pendingProps=l,e.deletions=null):(s=Pa(r,l),s.subtreeFlags=r.subtreeFlags&14680064),a!==null?o=Pa(a,o):(o=jl(o,i,t,null),o.flags|=2),o.return=e,s.return=e,s.sibling=o,e.child=s,s=o,o=e.child,i=n.child.memoizedState,i=i===null?Mb(t):{baseLanes:i.baseLanes|t,cachePool:null,transitions:i.transitions},o.memoizedState=i,o.childLanes=n.childLanes&~t,e.memoizedState=Lb,s}return o=n.child,n=o.sibling,s=Pa(o,{mode:"visible",children:s.children}),!(e.mode&1)&&(s.lanes=t),s.return=e,s.sibling=null,n!==null&&(t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)),e.child=s,e.memoizedState=null,s}function HC(n,e){return e=K0({mode:"visible",children:e},n.mode,0,null),e.return=n,n.child=e}function _g(n,e,t,s){return s!==null&&RC(s),Bc(e,n.child,null,t),n=HC(e,e.pendingProps.children),n.flags|=2,e.memoizedState=null,n}function cU(n,e,t,s,r,o,i){if(t)return e.flags&256?(e.flags&=-257,s=wv(Error(ge(422))),_g(n,e,i,s)):e.memoizedState!==null?(e.child=n.child,e.flags|=128,null):(o=s.fallback,r=e.mode,s=K0({mode:"visible",children:s.children},r,0,null),o=jl(o,r,i,null),o.flags|=2,s.return=e,o.return=e,s.sibling=o,e.child=s,e.mode&1&&Bc(e,n.child,null,i),e.child.memoizedState=Mb(i),e.memoizedState=Lb,o);if(!(e.mode&1))return _g(n,e,i,null);if(r.data==="$!"){if(s=r.nextSibling&&r.nextSibling.dataset,s)var a=s.dgst;return s=a,o=Error(ge(419)),s=wv(o,s,void 0),_g(n,e,i,s)}if(a=(i&n.childLanes)!==0,lr||a){if(s=ns,s!==null){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}r=r&(s.suspendedLanes|i)?0:r,r!==0&&r!==o.retryLane&&(o.retryLane=r,Zi(n,r),Po(s,n,r,-1))}return QC(),s=wv(Error(ge(421))),_g(n,e,i,s)}return r.data==="$?"?(e.flags|=128,e.child=n.child,e=CU.bind(null,n),r._reactRetry=e,null):(n=o.treeContext,Tr=Ra(r.nextSibling),Er=e,rn=!0,To=null,n!==null&&(Xr[Yr++]=Wi,Xr[Yr++]=Ui,Xr[Yr++]=tu,Wi=n.id,Ui=n.overflow,tu=e),e=HC(e,s.children),e.flags|=4096,e)}function _T(n,e,t){n.lanes|=e;var s=n.alternate;s!==null&&(s.lanes|=e),Rb(n.return,e,t)}function vv(n,e,t,s,r){var o=n.memoizedState;o===null?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:s,tail:t,tailMode:r}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=s,o.tail=t,o.tailMode=r)}function MA(n,e,t){var s=e.pendingProps,r=s.revealOrder,o=s.tail;if(Ls(n,e,s.children,t),s=cn.current,s&2)s=s&1|2,e.flags|=128;else{if(n!==null&&n.flags&128)e:for(n=e.child;n!==null;){if(n.tag===13)n.memoizedState!==null&&_T(n,t,e);else if(n.tag===19)_T(n,t,e);else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break e;for(;n.sibling===null;){if(n.return===null||n.return===e)break e;n=n.return}n.sibling.return=n.return,n=n.sibling}s&=1}if(Ut(cn,s),!(e.mode&1))e.memoizedState=null;else switch(r){case"forwards":for(t=e.child,r=null;t!==null;)n=t.alternate,n!==null&&Oy(n)===null&&(r=t),t=t.sibling;t=r,t===null?(r=e.child,e.child=null):(r=t.sibling,t.sibling=null),vv(e,!1,r,t,o);break;case"backwards":for(t=null,r=e.child,e.child=null;r!==null;){if(n=r.alternate,n!==null&&Oy(n)===null){e.child=r;break}n=r.sibling,r.sibling=t,t=r,r=n}vv(e,!0,t,null,o);break;case"together":vv(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function iy(n,e){!(e.mode&1)&&n!==null&&(n.alternate=null,e.alternate=null,e.flags|=2)}function Ji(n,e,t){if(n!==null&&(e.dependencies=n.dependencies),su|=e.lanes,!(t&e.childLanes))return null;if(n!==null&&e.child!==n.child)throw Error(ge(153));if(e.child!==null){for(n=e.child,t=Pa(n,n.pendingProps),e.child=t,t.return=e;n.sibling!==null;)n=n.sibling,t=t.sibling=Pa(n,n.pendingProps),t.return=e;t.sibling=null}return e.child}function hU(n,e,t){switch(e.tag){case 3:FA(e),Vc();break;case 5:cA(e);break;case 1:dr(e.type)&&$y(e);break;case 4:LC(e,e.stateNode.containerInfo);break;case 10:var s=e.type._context,r=e.memoizedProps.value;Ut(Ry,s._currentValue),s._currentValue=r;break;case 13:if(s=e.memoizedState,s!==null)return s.dehydrated!==null?(Ut(cn,cn.current&1),e.flags|=128,null):t&e.child.childLanes?LA(n,e,t):(Ut(cn,cn.current&1),n=Ji(n,e,t),n!==null?n.sibling:null);Ut(cn,cn.current&1);break;case 19:if(s=(t&e.childLanes)!==0,n.flags&128){if(s)return MA(n,e,t);e.flags|=128}if(r=e.memoizedState,r!==null&&(r.rendering=null,r.tail=null,r.lastEffect=null),Ut(cn,cn.current),s)break;return null;case 22:case 23:return e.lanes=0,OA(n,e,t)}return Ji(n,e,t)}var zA,zb,VA,BA;zA=function(n,e){for(var t=e.child;t!==null;){if(t.tag===5||t.tag===6)n.appendChild(t.stateNode);else if(t.tag!==4&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}};zb=function(){};VA=function(n,e,t,s){var r=n.memoizedProps;if(r!==s){n=e.stateNode,Ml(gi.current);var o=null;switch(t){case"input":r=ab(n,r),s=ab(n,s),o=[];break;case"select":r=fn({},r,{value:void 0}),s=fn({},s,{value:void 0}),o=[];break;case"textarea":r=cb(n,r),s=cb(n,s),o=[];break;default:typeof r.onClick!="function"&&typeof s.onClick=="function"&&(n.onclick=Ny)}db(t,s);var i;t=null;for(u in r)if(!s.hasOwnProperty(u)&&r.hasOwnProperty(u)&&r[u]!=null)if(u==="style"){var a=r[u];for(i in a)a.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(Tp.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in s){var l=s[u];if(a=r!=null?r[u]:void 0,s.hasOwnProperty(u)&&l!==a&&(l!=null||a!=null))if(u==="style")if(a){for(i in a)!a.hasOwnProperty(i)||l&&l.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in l)l.hasOwnProperty(i)&&a[i]!==l[i]&&(t||(t={}),t[i]=l[i])}else t||(o||(o=[]),o.push(u,t)),t=l;else u==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,a=a?a.__html:void 0,l!=null&&a!==l&&(o=o||[]).push(u,l)):u==="children"?typeof l!="string"&&typeof l!="number"||(o=o||[]).push(u,""+l):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(Tp.hasOwnProperty(u)?(l!=null&&u==="onScroll"&&Xt("scroll",n),o||a===l||(o=[])):(o=o||[]).push(u,l))}t&&(o=o||[]).push("style",t);var u=o;(e.updateQueue=u)&&(e.flags|=4)}};BA=function(n,e,t,s){t!==s&&(e.flags|=4)};function Qd(n,e){if(!rn)switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;e!==null;)e.alternate!==null&&(t=e),e=e.sibling;t===null?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var s=null;t!==null;)t.alternate!==null&&(s=t),t=t.sibling;s===null?e||n.tail===null?n.tail=null:n.tail.sibling=null:s.sibling=null}}function Ss(n){var e=n.alternate!==null&&n.alternate.child===n.child,t=0,s=0;if(e)for(var r=n.child;r!==null;)t|=r.lanes|r.childLanes,s|=r.subtreeFlags&14680064,s|=r.flags&14680064,r.return=n,r=r.sibling;else for(r=n.child;r!==null;)t|=r.lanes|r.childLanes,s|=r.subtreeFlags,s|=r.flags,r.return=n,r=r.sibling;return n.subtreeFlags|=s,n.childLanes=t,e}function dU(n,e,t){var s=e.pendingProps;switch(EC(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ss(e),null;case 1:return dr(e.type)&&Ty(),Ss(e),null;case 3:return s=e.stateNode,Wc(),Yt(hr),Yt(Es),zC(),s.pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),(n===null||n.child===null)&&(Tg(e)?e.flags|=4:n===null||n.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,To!==null&&(qb(To),To=null))),zb(n,e),Ss(e),null;case 5:MC(e);var r=Ml(zp.current);if(t=e.type,n!==null&&e.stateNode!=null)VA(n,e,t,s,r),n.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!s){if(e.stateNode===null)throw Error(ge(166));return Ss(e),null}if(n=Ml(gi.current),Tg(e)){s=e.stateNode,t=e.type;var o=e.memoizedProps;switch(s[pi]=e,s[Lp]=o,n=(e.mode&1)!==0,t){case"dialog":Xt("cancel",s),Xt("close",s);break;case"iframe":case"object":case"embed":Xt("load",s);break;case"video":case"audio":for(r=0;r<ap.length;r++)Xt(ap[r],s);break;case"source":Xt("error",s);break;case"img":case"image":case"link":Xt("error",s),Xt("load",s);break;case"details":Xt("toggle",s);break;case"input":MN(s,o),Xt("invalid",s);break;case"select":s._wrapperState={wasMultiple:!!o.multiple},Xt("invalid",s);break;case"textarea":VN(s,o),Xt("invalid",s)}db(t,o),r=null;for(var i in o)if(o.hasOwnProperty(i)){var a=o[i];i==="children"?typeof a=="string"?s.textContent!==a&&(o.suppressHydrationWarning!==!0&&Ng(s.textContent,a,n),r=["children",a]):typeof a=="number"&&s.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&Ng(s.textContent,a,n),r=["children",""+a]):Tp.hasOwnProperty(i)&&a!=null&&i==="onScroll"&&Xt("scroll",s)}switch(t){case"input":xg(s),zN(s,o,!0);break;case"textarea":xg(s),BN(s);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(s.onclick=Ny)}s=r,e.updateQueue=s,s!==null&&(e.flags|=4)}else{i=r.nodeType===9?r:r.ownerDocument,n==="http://www.w3.org/1999/xhtml"&&(n=mR(t)),n==="http://www.w3.org/1999/xhtml"?t==="script"?(n=i.createElement("div"),n.innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):typeof s.is=="string"?n=i.createElement(t,{is:s.is}):(n=i.createElement(t),t==="select"&&(i=n,s.multiple?i.multiple=!0:s.size&&(i.size=s.size))):n=i.createElementNS(n,t),n[pi]=e,n[Lp]=s,zA(n,e,!1,!1),e.stateNode=n;e:{switch(i=pb(t,s),t){case"dialog":Xt("cancel",n),Xt("close",n),r=s;break;case"iframe":case"object":case"embed":Xt("load",n),r=s;break;case"video":case"audio":for(r=0;r<ap.length;r++)Xt(ap[r],n);r=s;break;case"source":Xt("error",n),r=s;break;case"img":case"image":case"link":Xt("error",n),Xt("load",n),r=s;break;case"details":Xt("toggle",n),r=s;break;case"input":MN(n,s),r=ab(n,s),Xt("invalid",n);break;case"option":r=s;break;case"select":n._wrapperState={wasMultiple:!!s.multiple},r=fn({},s,{value:void 0}),Xt("invalid",n);break;case"textarea":VN(n,s),r=cb(n,s),Xt("invalid",n);break;default:r=s}db(t,r),a=r;for(o in a)if(a.hasOwnProperty(o)){var l=a[o];o==="style"?xR(n,l):o==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&gR(n,l)):o==="children"?typeof l=="string"?(t!=="textarea"||l!=="")&&$p(n,l):typeof l=="number"&&$p(n,""+l):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(Tp.hasOwnProperty(o)?l!=null&&o==="onScroll"&&Xt("scroll",n):l!=null&&mC(n,o,l,i))}switch(t){case"input":xg(n),zN(n,s,!1);break;case"textarea":xg(n),BN(n);break;case"option":s.value!=null&&n.setAttribute("value",""+Ba(s.value));break;case"select":n.multiple=!!s.multiple,o=s.value,o!=null?Ic(n,!!s.multiple,o,!1):s.defaultValue!=null&&Ic(n,!!s.multiple,s.defaultValue,!0);break;default:typeof r.onClick=="function"&&(n.onclick=Ny)}switch(t){case"button":case"input":case"select":case"textarea":s=!!s.autoFocus;break e;case"img":s=!0;break e;default:s=!1}}s&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Ss(e),null;case 6:if(n&&e.stateNode!=null)BA(n,e,n.memoizedProps,s);else{if(typeof s!="string"&&e.stateNode===null)throw Error(ge(166));if(t=Ml(zp.current),Ml(gi.current),Tg(e)){if(s=e.stateNode,t=e.memoizedProps,s[pi]=e,(o=s.nodeValue!==t)&&(n=Er,n!==null))switch(n.tag){case 3:Ng(s.nodeValue,t,(n.mode&1)!==0);break;case 5:n.memoizedProps.suppressHydrationWarning!==!0&&Ng(s.nodeValue,t,(n.mode&1)!==0)}o&&(e.flags|=4)}else s=(t.nodeType===9?t:t.ownerDocument).createTextNode(s),s[pi]=e,e.stateNode=s}return Ss(e),null;case 13:if(Yt(cn),s=e.memoizedState,n===null||n.memoizedState!==null&&n.memoizedState.dehydrated!==null){if(rn&&Tr!==null&&e.mode&1&&!(e.flags&128))oA(),Vc(),e.flags|=98560,o=!1;else if(o=Tg(e),s!==null&&s.dehydrated!==null){if(n===null){if(!o)throw Error(ge(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(ge(317));o[pi]=e}else Vc(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;Ss(e),o=!1}else To!==null&&(qb(To),To=null),o=!0;if(!o)return e.flags&65536?e:null}return e.flags&128?(e.lanes=t,e):(s=s!==null,s!==(n!==null&&n.memoizedState!==null)&&s&&(e.child.flags|=8192,e.mode&1&&(n===null||cn.current&1?qn===0&&(qn=3):QC())),e.updateQueue!==null&&(e.flags|=4),Ss(e),null);case 4:return Wc(),zb(n,e),n===null&&Pp(e.stateNode.containerInfo),Ss(e),null;case 10:return OC(e.type._context),Ss(e),null;case 17:return dr(e.type)&&Ty(),Ss(e),null;case 19:if(Yt(cn),o=e.memoizedState,o===null)return Ss(e),null;if(s=(e.flags&128)!==0,i=o.rendering,i===null)if(s)Qd(o,!1);else{if(qn!==0||n!==null&&n.flags&128)for(n=e.child;n!==null;){if(i=Oy(n),i!==null){for(e.flags|=128,Qd(o,!1),s=i.updateQueue,s!==null&&(e.updateQueue=s,e.flags|=4),e.subtreeFlags=0,s=t,t=e.child;t!==null;)o=t,n=s,o.flags&=14680066,i=o.alternate,i===null?(o.childLanes=0,o.lanes=n,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,o.type=i.type,n=i.dependencies,o.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext}),t=t.sibling;return Ut(cn,cn.current&1|2),e.child}n=n.sibling}o.tail!==null&&Nn()>Gc&&(e.flags|=128,s=!0,Qd(o,!1),e.lanes=4194304)}else{if(!s)if(n=Oy(i),n!==null){if(e.flags|=128,s=!0,t=n.updateQueue,t!==null&&(e.updateQueue=t,e.flags|=4),Qd(o,!0),o.tail===null&&o.tailMode==="hidden"&&!i.alternate&&!rn)return Ss(e),null}else 2*Nn()-o.renderingStartTime>Gc&&t!==1073741824&&(e.flags|=128,s=!0,Qd(o,!1),e.lanes=4194304);o.isBackwards?(i.sibling=e.child,e.child=i):(t=o.last,t!==null?t.sibling=i:e.child=i,o.last=i)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=Nn(),e.sibling=null,t=cn.current,Ut(cn,s?t&1|2:t&1),e):(Ss(e),null);case 22:case 23:return YC(),s=e.memoizedState!==null,n!==null&&n.memoizedState!==null!==s&&(e.flags|=8192),s&&e.mode&1?kr&1073741824&&(Ss(e),e.subtreeFlags&6&&(e.flags|=8192)):Ss(e),null;case 24:return null;case 25:return null}throw Error(ge(156,e.tag))}function pU(n,e){switch(EC(e),e.tag){case 1:return dr(e.type)&&Ty(),n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 3:return Wc(),Yt(hr),Yt(Es),zC(),n=e.flags,n&65536&&!(n&128)?(e.flags=n&-65537|128,e):null;case 5:return MC(e),null;case 13:if(Yt(cn),n=e.memoizedState,n!==null&&n.dehydrated!==null){if(e.alternate===null)throw Error(ge(340));Vc()}return n=e.flags,n&65536?(e.flags=n&-65537|128,e):null;case 19:return Yt(cn),null;case 4:return Wc(),null;case 10:return OC(e.type._context),null;case 22:case 23:return YC(),null;case 24:return null;default:return null}}var Eg=!1,Ns=!1,fU=typeof WeakSet=="function"?WeakSet:Set,Re=null;function wc(n,e){var t=n.ref;if(t!==null)if(typeof t=="function")try{t(null)}catch(s){yn(n,e,s)}else t.current=null}function Vb(n,e,t){try{t()}catch(s){yn(n,e,s)}}var ET=!1;function mU(n,e){if(Cb=Cy,n=jR(),$C(n)){if("selectionStart"in n)var t={start:n.selectionStart,end:n.selectionEnd};else e:{t=(t=n.ownerDocument)&&t.defaultView||window;var s=t.getSelection&&t.getSelection();if(s&&s.rangeCount!==0){t=s.anchorNode;var r=s.anchorOffset,o=s.focusNode;s=s.focusOffset;try{t.nodeType,o.nodeType}catch{t=null;break e}var i=0,a=-1,l=-1,u=0,c=0,h=n,d=null;t:for(;;){for(var p;h!==t||r!==0&&h.nodeType!==3||(a=i+r),h!==o||s!==0&&h.nodeType!==3||(l=i+s),h.nodeType===3&&(i+=h.nodeValue.length),(p=h.firstChild)!==null;)d=h,h=p;for(;;){if(h===n)break t;if(d===t&&++u===r&&(a=i),d===o&&++c===s&&(l=i),(p=h.nextSibling)!==null)break;h=d,d=h.parentNode}h=p}t=a===-1||l===-1?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;for(kb={focusedElem:n,selectionRange:t},Cy=!1,Re=e;Re!==null;)if(e=Re,n=e.child,(e.subtreeFlags&1028)!==0&&n!==null)n.return=e,Re=n;else for(;Re!==null;){e=Re;try{var f=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var m=f.memoizedProps,g=f.memoizedState,y=e.stateNode,x=y.getSnapshotBeforeUpdate(e.elementType===e.type?m:ko(e.type,m),g);y.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var w=e.stateNode.containerInfo;w.nodeType===1?w.textContent="":w.nodeType===9&&w.documentElement&&w.removeChild(w.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(ge(163))}}catch(b){yn(e,e.return,b)}if(n=e.sibling,n!==null){n.return=e.return,Re=n;break}Re=e.return}return f=ET,ET=!1,f}function bp(n,e,t){var s=e.updateQueue;if(s=s!==null?s.lastEffect:null,s!==null){var r=s=s.next;do{if((r.tag&n)===n){var o=r.destroy;r.destroy=void 0,o!==void 0&&Vb(e,t,o)}r=r.next}while(r!==s)}}function j0(n,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var t=e=e.next;do{if((t.tag&n)===n){var s=t.create;t.destroy=s()}t=t.next}while(t!==e)}}function Bb(n){var e=n.ref;if(e!==null){var t=n.stateNode;switch(n.tag){case 5:n=t;break;default:n=t}typeof e=="function"?e(n):e.current=n}}function WA(n){var e=n.alternate;e!==null&&(n.alternate=null,WA(e)),n.child=null,n.deletions=null,n.sibling=null,n.tag===5&&(e=n.stateNode,e!==null&&(delete e[pi],delete e[Lp],delete e[Tb],delete e[QW],delete e[ZW])),n.stateNode=null,n.return=null,n.dependencies=null,n.memoizedProps=null,n.memoizedState=null,n.pendingProps=null,n.stateNode=null,n.updateQueue=null}function UA(n){return n.tag===5||n.tag===3||n.tag===4}function RT(n){e:for(;;){for(;n.sibling===null;){if(n.return===null||UA(n.return))return null;n=n.return}for(n.sibling.return=n.return,n=n.sibling;n.tag!==5&&n.tag!==6&&n.tag!==18;){if(n.flags&2||n.child===null||n.tag===4)continue e;n.child.return=n,n=n.child}if(!(n.flags&2))return n.stateNode}}function Wb(n,e,t){var s=n.tag;if(s===5||s===6)n=n.stateNode,e?t.nodeType===8?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(t.nodeType===8?(e=t.parentNode,e.insertBefore(n,t)):(e=t,e.appendChild(n)),t=t._reactRootContainer,t!=null||e.onclick!==null||(e.onclick=Ny));else if(s!==4&&(n=n.child,n!==null))for(Wb(n,e,t),n=n.sibling;n!==null;)Wb(n,e,t),n=n.sibling}function Ub(n,e,t){var s=n.tag;if(s===5||s===6)n=n.stateNode,e?t.insertBefore(n,e):t.appendChild(n);else if(s!==4&&(n=n.child,n!==null))for(Ub(n,e,t),n=n.sibling;n!==null;)Ub(n,e,t),n=n.sibling}var hs=null,No=!1;function fa(n,e,t){for(t=t.child;t!==null;)GA(n,e,t),t=t.sibling}function GA(n,e,t){if(mi&&typeof mi.onCommitFiberUnmount=="function")try{mi.onCommitFiberUnmount(M0,t)}catch{}switch(t.tag){case 5:Ns||wc(t,e);case 6:var s=hs,r=No;hs=null,fa(n,e,t),hs=s,No=r,hs!==null&&(No?(n=hs,t=t.stateNode,n.nodeType===8?n.parentNode.removeChild(t):n.removeChild(t)):hs.removeChild(t.stateNode));break;case 18:hs!==null&&(No?(n=hs,t=t.stateNode,n.nodeType===8?pv(n.parentNode,t):n.nodeType===1&&pv(n,t),Ap(n)):pv(hs,t.stateNode));break;case 4:s=hs,r=No,hs=t.stateNode.containerInfo,No=!0,fa(n,e,t),hs=s,No=r;break;case 0:case 11:case 14:case 15:if(!Ns&&(s=t.updateQueue,s!==null&&(s=s.lastEffect,s!==null))){r=s=s.next;do{var o=r,i=o.destroy;o=o.tag,i!==void 0&&(o&2||o&4)&&Vb(t,e,i),r=r.next}while(r!==s)}fa(n,e,t);break;case 1:if(!Ns&&(wc(t,e),s=t.stateNode,typeof s.componentWillUnmount=="function"))try{s.props=t.memoizedProps,s.state=t.memoizedState,s.componentWillUnmount()}catch(a){yn(t,e,a)}fa(n,e,t);break;case 21:fa(n,e,t);break;case 22:t.mode&1?(Ns=(s=Ns)||t.memoizedState!==null,fa(n,e,t),Ns=s):fa(n,e,t);break;default:fa(n,e,t)}}function AT(n){var e=n.updateQueue;if(e!==null){n.updateQueue=null;var t=n.stateNode;t===null&&(t=n.stateNode=new fU),e.forEach(function(s){var r=kU.bind(null,n,s);t.has(s)||(t.add(s),s.then(r,r))})}}function bo(n,e){var t=e.deletions;if(t!==null)for(var s=0;s<t.length;s++){var r=t[s];try{var o=n,i=e,a=i;e:for(;a!==null;){switch(a.tag){case 5:hs=a.stateNode,No=!1;break e;case 3:hs=a.stateNode.containerInfo,No=!0;break e;case 4:hs=a.stateNode.containerInfo,No=!0;break e}a=a.return}if(hs===null)throw Error(ge(160));GA(o,i,r),hs=null,No=!1;var l=r.alternate;l!==null&&(l.return=null),r.return=null}catch(u){yn(r,e,u)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)HA(e,n),e=e.sibling}function HA(n,e){var t=n.alternate,s=n.flags;switch(n.tag){case 0:case 11:case 14:case 15:if(bo(e,n),ai(n),s&4){try{bp(3,n,n.return),j0(3,n)}catch(m){yn(n,n.return,m)}try{bp(5,n,n.return)}catch(m){yn(n,n.return,m)}}break;case 1:bo(e,n),ai(n),s&512&&t!==null&&wc(t,t.return);break;case 5:if(bo(e,n),ai(n),s&512&&t!==null&&wc(t,t.return),n.flags&32){var r=n.stateNode;try{$p(r,"")}catch(m){yn(n,n.return,m)}}if(s&4&&(r=n.stateNode,r!=null)){var o=n.memoizedProps,i=t!==null?t.memoizedProps:o,a=n.type,l=n.updateQueue;if(n.updateQueue=null,l!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&pR(r,o),pb(a,i);var u=pb(a,o);for(i=0;i<l.length;i+=2){var c=l[i],h=l[i+1];c==="style"?xR(r,h):c==="dangerouslySetInnerHTML"?gR(r,h):c==="children"?$p(r,h):mC(r,c,h,u)}switch(a){case"input":lb(r,o);break;case"textarea":fR(r,o);break;case"select":var d=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var p=o.value;p!=null?Ic(r,!!o.multiple,p,!1):d!==!!o.multiple&&(o.defaultValue!=null?Ic(r,!!o.multiple,o.defaultValue,!0):Ic(r,!!o.multiple,o.multiple?[]:"",!1))}r[Lp]=o}catch(m){yn(n,n.return,m)}}break;case 6:if(bo(e,n),ai(n),s&4){if(n.stateNode===null)throw Error(ge(162));r=n.stateNode,o=n.memoizedProps;try{r.nodeValue=o}catch(m){yn(n,n.return,m)}}break;case 3:if(bo(e,n),ai(n),s&4&&t!==null&&t.memoizedState.isDehydrated)try{Ap(e.containerInfo)}catch(m){yn(n,n.return,m)}break;case 4:bo(e,n),ai(n);break;case 13:bo(e,n),ai(n),r=n.child,r.flags&8192&&(o=r.memoizedState!==null,r.stateNode.isHidden=o,!o||r.alternate!==null&&r.alternate.memoizedState!==null||(KC=Nn())),s&4&&AT(n);break;case 22:if(c=t!==null&&t.memoizedState!==null,n.mode&1?(Ns=(u=Ns)||c,bo(e,n),Ns=u):bo(e,n),ai(n),s&8192){if(u=n.memoizedState!==null,(n.stateNode.isHidden=u)&&!c&&n.mode&1)for(Re=n,c=n.child;c!==null;){for(h=Re=c;Re!==null;){switch(d=Re,p=d.child,d.tag){case 0:case 11:case 14:case 15:bp(4,d,d.return);break;case 1:wc(d,d.return);var f=d.stateNode;if(typeof f.componentWillUnmount=="function"){s=d,t=d.return;try{e=s,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(m){yn(s,t,m)}}break;case 5:wc(d,d.return);break;case 22:if(d.memoizedState!==null){OT(h);continue}}p!==null?(p.return=d,Re=p):OT(h)}c=c.sibling}e:for(c=null,h=n;;){if(h.tag===5){if(c===null){c=h;try{r=h.stateNode,u?(o=r.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=h.stateNode,l=h.memoizedProps.style,i=l!=null&&l.hasOwnProperty("display")?l.display:null,a.style.display=yR("display",i))}catch(m){yn(n,n.return,m)}}}else if(h.tag===6){if(c===null)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(m){yn(n,n.return,m)}}else if((h.tag!==22&&h.tag!==23||h.memoizedState===null||h===n)&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===n)break e;for(;h.sibling===null;){if(h.return===null||h.return===n)break e;c===h&&(c=null),h=h.return}c===h&&(c=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:bo(e,n),ai(n),s&4&&AT(n);break;case 21:break;default:bo(e,n),ai(n)}}function ai(n){var e=n.flags;if(e&2){try{e:{for(var t=n.return;t!==null;){if(UA(t)){var s=t;break e}t=t.return}throw Error(ge(160))}switch(s.tag){case 5:var r=s.stateNode;s.flags&32&&($p(r,""),s.flags&=-33);var o=RT(n);Ub(n,o,r);break;case 3:case 4:var i=s.stateNode.containerInfo,a=RT(n);Wb(n,a,i);break;default:throw Error(ge(161))}}catch(l){yn(n,n.return,l)}n.flags&=-3}e&4096&&(n.flags&=-4097)}function gU(n,e,t){Re=n,jA(n)}function jA(n,e,t){for(var s=(n.mode&1)!==0;Re!==null;){var r=Re,o=r.child;if(r.tag===22&&s){var i=r.memoizedState!==null||Eg;if(!i){var a=r.alternate,l=a!==null&&a.memoizedState!==null||Ns;a=Eg;var u=Ns;if(Eg=i,(Ns=l)&&!u)for(Re=r;Re!==null;)i=Re,l=i.child,i.tag===22&&i.memoizedState!==null?PT(r):l!==null?(l.return=i,Re=l):PT(r);for(;o!==null;)Re=o,jA(o),o=o.sibling;Re=r,Eg=a,Ns=u}DT(n)}else r.subtreeFlags&8772&&o!==null?(o.return=r,Re=o):DT(n)}}function DT(n){for(;Re!==null;){var e=Re;if(e.flags&8772){var t=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:Ns||j0(5,e);break;case 1:var s=e.stateNode;if(e.flags&4&&!Ns)if(t===null)s.componentDidMount();else{var r=e.elementType===e.type?t.memoizedProps:ko(e.type,t.memoizedProps);s.componentDidUpdate(r,t.memoizedState,s.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&yT(e,o,s);break;case 3:var i=e.updateQueue;if(i!==null){if(t=null,e.child!==null)switch(e.child.tag){case 5:t=e.child.stateNode;break;case 1:t=e.child.stateNode}yT(e,i,t)}break;case 5:var a=e.stateNode;if(t===null&&e.flags&4){t=a;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&t.focus();break;case"img":l.src&&(t.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var u=e.alternate;if(u!==null){var c=u.memoizedState;if(c!==null){var h=c.dehydrated;h!==null&&Ap(h)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(ge(163))}Ns||e.flags&512&&Bb(e)}catch(d){yn(e,e.return,d)}}if(e===n){Re=null;break}if(t=e.sibling,t!==null){t.return=e.return,Re=t;break}Re=e.return}}function OT(n){for(;Re!==null;){var e=Re;if(e===n){Re=null;break}var t=e.sibling;if(t!==null){t.return=e.return,Re=t;break}Re=e.return}}function PT(n){for(;Re!==null;){var e=Re;try{switch(e.tag){case 0:case 11:case 15:var t=e.return;try{j0(4,e)}catch(l){yn(e,t,l)}break;case 1:var s=e.stateNode;if(typeof s.componentDidMount=="function"){var r=e.return;try{s.componentDidMount()}catch(l){yn(e,r,l)}}var o=e.return;try{Bb(e)}catch(l){yn(e,o,l)}break;case 5:var i=e.return;try{Bb(e)}catch(l){yn(e,i,l)}}}catch(l){yn(e,e.return,l)}if(e===n){Re=null;break}var a=e.sibling;if(a!==null){a.return=e.return,Re=a;break}Re=e.return}}var yU=Math.ceil,Ly=ra.ReactCurrentDispatcher,jC=ra.ReactCurrentOwner,oo=ra.ReactCurrentBatchConfig,kt=0,ns=null,On=null,ps=0,kr=0,vc=ol(0),qn=0,Up=null,su=0,q0=0,qC=0,Sp=null,or=null,KC=0,Gc=1/0,Pi=null,My=!1,Gb=null,Da=null,Rg=!1,Ca=null,zy=0,Cp=0,Hb=null,ay=-1,ly=0;function Us(){return kt&6?Nn():ay!==-1?ay:ay=Nn()}function Oa(n){return n.mode&1?kt&2&&ps!==0?ps&-ps:eU.transition!==null?(ly===0&&(ly=ER()),ly):(n=Et,n!==0||(n=window.event,n=n===void 0?16:LR(n.type)),n):1}function Po(n,e,t,s){if(50<Cp)throw Cp=0,Hb=null,Error(ge(185));gf(n,t,s),(!(kt&2)||n!==ns)&&(n===ns&&(!(kt&2)&&(q0|=t),qn===4&&ba(n,ps)),pr(n,s),t===1&&kt===0&&!(e.mode&1)&&(Gc=Nn()+500,U0&&il()))}function pr(n,e){var t=n.callbackNode;eW(n,e);var s=Sy(n,n===ns?ps:0);if(s===0)t!==null&&GN(t),n.callbackNode=null,n.callbackPriority=0;else if(e=s&-s,n.callbackPriority!==e){if(t!=null&&GN(t),e===1)n.tag===0?JW(FT.bind(null,n)):nA(FT.bind(null,n)),XW(function(){!(kt&6)&&il()}),t=null;else{switch(RR(s)){case 1:t=vC;break;case 4:t=$R;break;case 16:t=by;break;case 536870912:t=_R;break;default:t=by}t=eD(t,qA.bind(null,n))}n.callbackPriority=e,n.callbackNode=t}}function qA(n,e){if(ay=-1,ly=0,kt&6)throw Error(ge(327));var t=n.callbackNode;if(Ec()&&n.callbackNode!==t)return null;var s=Sy(n,n===ns?ps:0);if(s===0)return null;if(s&30||s&n.expiredLanes||e)e=Vy(n,s);else{e=s;var r=kt;kt|=2;var o=XA();(ns!==n||ps!==e)&&(Pi=null,Gc=Nn()+500,Hl(n,e));do try{vU();break}catch(a){KA(n,a)}while(1);DC(),Ly.current=o,kt=r,On!==null?e=0:(ns=null,ps=0,e=qn)}if(e!==0){if(e===2&&(r=xb(n),r!==0&&(s=r,e=jb(n,r))),e===1)throw t=Up,Hl(n,0),ba(n,s),pr(n,Nn()),t;if(e===6)ba(n,s);else{if(r=n.current.alternate,!(s&30)&&!xU(r)&&(e=Vy(n,s),e===2&&(o=xb(n),o!==0&&(s=o,e=jb(n,o))),e===1))throw t=Up,Hl(n,0),ba(n,s),pr(n,Nn()),t;switch(n.finishedWork=r,n.finishedLanes=s,e){case 0:case 1:throw Error(ge(345));case 2:$l(n,or,Pi);break;case 3:if(ba(n,s),(s&130023424)===s&&(e=KC+500-Nn(),10<e)){if(Sy(n,0)!==0)break;if(r=n.suspendedLanes,(r&s)!==s){Us(),n.pingedLanes|=n.suspendedLanes&r;break}n.timeoutHandle=Nb($l.bind(null,n,or,Pi),e);break}$l(n,or,Pi);break;case 4:if(ba(n,s),(s&4194240)===s)break;for(e=n.eventTimes,r=-1;0<s;){var i=31-Oo(s);o=1<<i,i=e[i],i>r&&(r=i),s&=~o}if(s=r,s=Nn()-s,s=(120>s?120:480>s?480:1080>s?1080:1920>s?1920:3e3>s?3e3:4320>s?4320:1960*yU(s/1960))-s,10<s){n.timeoutHandle=Nb($l.bind(null,n,or,Pi),s);break}$l(n,or,Pi);break;case 5:$l(n,or,Pi);break;default:throw Error(ge(329))}}}return pr(n,Nn()),n.callbackNode===t?qA.bind(null,n):null}function jb(n,e){var t=Sp;return n.current.memoizedState.isDehydrated&&(Hl(n,e).flags|=256),n=Vy(n,e),n!==2&&(e=or,or=t,e!==null&&qb(e)),n}function qb(n){or===null?or=n:or.push.apply(or,n)}function xU(n){for(var e=n;;){if(e.flags&16384){var t=e.updateQueue;if(t!==null&&(t=t.stores,t!==null))for(var s=0;s<t.length;s++){var r=t[s],o=r.getSnapshot;r=r.value;try{if(!Mo(o(),r))return!1}catch{return!1}}}if(t=e.child,e.subtreeFlags&16384&&t!==null)t.return=e,e=t;else{if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function ba(n,e){for(e&=~qC,e&=~q0,n.suspendedLanes|=e,n.pingedLanes&=~e,n=n.expirationTimes;0<e;){var t=31-Oo(e),s=1<<t;n[t]=-1,e&=~s}}function FT(n){if(kt&6)throw Error(ge(327));Ec();var e=Sy(n,0);if(!(e&1))return pr(n,Nn()),null;var t=Vy(n,e);if(n.tag!==0&&t===2){var s=xb(n);s!==0&&(e=s,t=jb(n,s))}if(t===1)throw t=Up,Hl(n,0),ba(n,e),pr(n,Nn()),t;if(t===6)throw Error(ge(345));return n.finishedWork=n.current.alternate,n.finishedLanes=e,$l(n,or,Pi),pr(n,Nn()),null}function XC(n,e){var t=kt;kt|=1;try{return n(e)}finally{kt=t,kt===0&&(Gc=Nn()+500,U0&&il())}}function ru(n){Ca!==null&&Ca.tag===0&&!(kt&6)&&Ec();var e=kt;kt|=1;var t=oo.transition,s=Et;try{if(oo.transition=null,Et=1,n)return n()}finally{Et=s,oo.transition=t,kt=e,!(kt&6)&&il()}}function YC(){kr=vc.current,Yt(vc)}function Hl(n,e){n.finishedWork=null,n.finishedLanes=0;var t=n.timeoutHandle;if(t!==-1&&(n.timeoutHandle=-1,KW(t)),On!==null)for(t=On.return;t!==null;){var s=t;switch(EC(s),s.tag){case 1:s=s.type.childContextTypes,s!=null&&Ty();break;case 3:Wc(),Yt(hr),Yt(Es),zC();break;case 5:MC(s);break;case 4:Wc();break;case 13:Yt(cn);break;case 19:Yt(cn);break;case 10:OC(s.type._context);break;case 22:case 23:YC()}t=t.return}if(ns=n,On=n=Pa(n.current,null),ps=kr=e,qn=0,Up=null,qC=q0=su=0,or=Sp=null,Ll!==null){for(e=0;e<Ll.length;e++)if(t=Ll[e],s=t.interleaved,s!==null){t.interleaved=null;var r=s.next,o=t.pending;if(o!==null){var i=o.next;o.next=r,s.next=i}t.pending=s}Ll=null}return n}function KA(n,e){do{var t=On;try{if(DC(),ry.current=Fy,Py){for(var s=pn.memoizedState;s!==null;){var r=s.queue;r!==null&&(r.pending=null),s=s.next}Py=!1}if(nu=0,Jn=Hn=pn=null,vp=!1,Vp=0,jC.current=null,t===null||t.return===null){qn=1,Up=e,On=null;break}e:{var o=n,i=t.return,a=t,l=e;if(e=ps,a.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var u=l,c=a,h=c.tag;if(!(c.mode&1)&&(h===0||h===11||h===15)){var d=c.alternate;d?(c.updateQueue=d.updateQueue,c.memoizedState=d.memoizedState,c.lanes=d.lanes):(c.updateQueue=null,c.memoizedState=null)}var p=CT(i);if(p!==null){p.flags&=-257,kT(p,i,a,o,e),p.mode&1&&ST(o,u,e),e=p,l=u;var f=e.updateQueue;if(f===null){var m=new Set;m.add(l),e.updateQueue=m}else f.add(l);break e}else{if(!(e&1)){ST(o,u,e),QC();break e}l=Error(ge(426))}}else if(rn&&a.mode&1){var g=CT(i);if(g!==null){!(g.flags&65536)&&(g.flags|=256),kT(g,i,a,o,e),RC(Uc(l,a));break e}}o=l=Uc(l,a),qn!==4&&(qn=2),Sp===null?Sp=[o]:Sp.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var y=RA(o,l,e);gT(o,y);break e;case 1:a=l;var x=o.type,w=o.stateNode;if(!(o.flags&128)&&(typeof x.getDerivedStateFromError=="function"||w!==null&&typeof w.componentDidCatch=="function"&&(Da===null||!Da.has(w)))){o.flags|=65536,e&=-e,o.lanes|=e;var b=AA(o,a,e);gT(o,b);break e}}o=o.return}while(o!==null)}QA(t)}catch(S){e=S,On===t&&t!==null&&(On=t=t.return);continue}break}while(1)}function XA(){var n=Ly.current;return Ly.current=Fy,n===null?Fy:n}function QC(){(qn===0||qn===3||qn===2)&&(qn=4),ns===null||!(su&268435455)&&!(q0&268435455)||ba(ns,ps)}function Vy(n,e){var t=kt;kt|=2;var s=XA();(ns!==n||ps!==e)&&(Pi=null,Hl(n,e));do try{wU();break}catch(r){KA(n,r)}while(1);if(DC(),kt=t,Ly.current=s,On!==null)throw Error(ge(261));return ns=null,ps=0,qn}function wU(){for(;On!==null;)YA(On)}function vU(){for(;On!==null&&!H4();)YA(On)}function YA(n){var e=JA(n.alternate,n,kr);n.memoizedProps=n.pendingProps,e===null?QA(n):On=e,jC.current=null}function QA(n){var e=n;do{var t=e.alternate;if(n=e.return,e.flags&32768){if(t=pU(t,e),t!==null){t.flags&=32767,On=t;return}if(n!==null)n.flags|=32768,n.subtreeFlags=0,n.deletions=null;else{qn=6,On=null;return}}else if(t=dU(t,e,kr),t!==null){On=t;return}if(e=e.sibling,e!==null){On=e;return}On=e=n}while(e!==null);qn===0&&(qn=5)}function $l(n,e,t){var s=Et,r=oo.transition;try{oo.transition=null,Et=1,bU(n,e,t,s)}finally{oo.transition=r,Et=s}return null}function bU(n,e,t,s){do Ec();while(Ca!==null);if(kt&6)throw Error(ge(327));t=n.finishedWork;var r=n.finishedLanes;if(t===null)return null;if(n.finishedWork=null,n.finishedLanes=0,t===n.current)throw Error(ge(177));n.callbackNode=null,n.callbackPriority=0;var o=t.lanes|t.childLanes;if(tW(n,o),n===ns&&(On=ns=null,ps=0),!(t.subtreeFlags&2064)&&!(t.flags&2064)||Rg||(Rg=!0,eD(by,function(){return Ec(),null})),o=(t.flags&15990)!==0,t.subtreeFlags&15990||o){o=oo.transition,oo.transition=null;var i=Et;Et=1;var a=kt;kt|=4,jC.current=null,mU(n,t),HA(t,n),BW(kb),Cy=!!Cb,kb=Cb=null,n.current=t,gU(t),j4(),kt=a,Et=i,oo.transition=o}else n.current=t;if(Rg&&(Rg=!1,Ca=n,zy=r),o=n.pendingLanes,o===0&&(Da=null),X4(t.stateNode),pr(n,Nn()),e!==null)for(s=n.onRecoverableError,t=0;t<e.length;t++)r=e[t],s(r.value,{componentStack:r.stack,digest:r.digest});if(My)throw My=!1,n=Gb,Gb=null,n;return zy&1&&n.tag!==0&&Ec(),o=n.pendingLanes,o&1?n===Hb?Cp++:(Cp=0,Hb=n):Cp=0,il(),null}function Ec(){if(Ca!==null){var n=RR(zy),e=oo.transition,t=Et;try{if(oo.transition=null,Et=16>n?16:n,Ca===null)var s=!1;else{if(n=Ca,Ca=null,zy=0,kt&6)throw Error(ge(331));var r=kt;for(kt|=4,Re=n.current;Re!==null;){var o=Re,i=o.child;if(Re.flags&16){var a=o.deletions;if(a!==null){for(var l=0;l<a.length;l++){var u=a[l];for(Re=u;Re!==null;){var c=Re;switch(c.tag){case 0:case 11:case 15:bp(8,c,o)}var h=c.child;if(h!==null)h.return=c,Re=h;else for(;Re!==null;){c=Re;var d=c.sibling,p=c.return;if(WA(c),c===u){Re=null;break}if(d!==null){d.return=p,Re=d;break}Re=p}}}var f=o.alternate;if(f!==null){var m=f.child;if(m!==null){f.child=null;do{var g=m.sibling;m.sibling=null,m=g}while(m!==null)}}Re=o}}if(o.subtreeFlags&2064&&i!==null)i.return=o,Re=i;else e:for(;Re!==null;){if(o=Re,o.flags&2048)switch(o.tag){case 0:case 11:case 15:bp(9,o,o.return)}var y=o.sibling;if(y!==null){y.return=o.return,Re=y;break e}Re=o.return}}var x=n.current;for(Re=x;Re!==null;){i=Re;var w=i.child;if(i.subtreeFlags&2064&&w!==null)w.return=i,Re=w;else e:for(i=x;Re!==null;){if(a=Re,a.flags&2048)try{switch(a.tag){case 0:case 11:case 15:j0(9,a)}}catch(S){yn(a,a.return,S)}if(a===i){Re=null;break e}var b=a.sibling;if(b!==null){b.return=a.return,Re=b;break e}Re=a.return}}if(kt=r,il(),mi&&typeof mi.onPostCommitFiberRoot=="function")try{mi.onPostCommitFiberRoot(M0,n)}catch{}s=!0}return s}finally{Et=t,oo.transition=e}}return!1}function LT(n,e,t){e=Uc(t,e),e=RA(n,e,1),n=Aa(n,e,1),e=Us(),n!==null&&(gf(n,1,e),pr(n,e))}function yn(n,e,t){if(n.tag===3)LT(n,n,t);else for(;e!==null;){if(e.tag===3){LT(e,n,t);break}else if(e.tag===1){var s=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof s.componentDidCatch=="function"&&(Da===null||!Da.has(s))){n=Uc(t,n),n=AA(e,n,1),e=Aa(e,n,1),n=Us(),e!==null&&(gf(e,1,n),pr(e,n));break}}e=e.return}}function SU(n,e,t){var s=n.pingCache;s!==null&&s.delete(e),e=Us(),n.pingedLanes|=n.suspendedLanes&t,ns===n&&(ps&t)===t&&(qn===4||qn===3&&(ps&130023424)===ps&&500>Nn()-KC?Hl(n,0):qC|=t),pr(n,e)}function ZA(n,e){e===0&&(n.mode&1?(e=bg,bg<<=1,!(bg&130023424)&&(bg=4194304)):e=1);var t=Us();n=Zi(n,e),n!==null&&(gf(n,e,t),pr(n,t))}function CU(n){var e=n.memoizedState,t=0;e!==null&&(t=e.retryLane),ZA(n,t)}function kU(n,e){var t=0;switch(n.tag){case 13:var s=n.stateNode,r=n.memoizedState;r!==null&&(t=r.retryLane);break;case 19:s=n.stateNode;break;default:throw Error(ge(314))}s!==null&&s.delete(e),ZA(n,t)}var JA;JA=function(n,e,t){if(n!==null)if(n.memoizedProps!==e.pendingProps||hr.current)lr=!0;else{if(!(n.lanes&t)&&!(e.flags&128))return lr=!1,hU(n,e,t);lr=!!(n.flags&131072)}else lr=!1,rn&&e.flags&1048576&&sA(e,Ey,e.index);switch(e.lanes=0,e.tag){case 2:var s=e.type;iy(n,e),n=e.pendingProps;var r=zc(e,Es.current);_c(e,t),r=BC(null,e,s,n,r,t);var o=WC();return e.flags|=1,typeof r=="object"&&r!==null&&typeof r.render=="function"&&r.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,dr(s)?(o=!0,$y(e)):o=!1,e.memoizedState=r.state!==null&&r.state!==void 0?r.state:null,FC(e),r.updater=H0,e.stateNode=r,r._reactInternals=e,Db(e,s,n,t),e=Fb(null,e,s,!0,o,t)):(e.tag=0,rn&&o&&_C(e),Ls(null,e,r,t),e=e.child),e;case 16:s=e.elementType;e:{switch(iy(n,e),n=e.pendingProps,r=s._init,s=r(s._payload),e.type=s,r=e.tag=NU(s),n=ko(s,n),r){case 0:e=Pb(null,e,s,n,t);break e;case 1:e=TT(null,e,s,n,t);break e;case 11:e=IT(null,e,s,n,t);break e;case 14:e=NT(null,e,s,ko(s.type,n),t);break e}throw Error(ge(306,s,""))}return e;case 0:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:ko(s,r),Pb(n,e,s,r,t);case 1:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:ko(s,r),TT(n,e,s,r,t);case 3:e:{if(FA(e),n===null)throw Error(ge(387));s=e.pendingProps,o=e.memoizedState,r=o.element,uA(n,e),Dy(e,s,null,t);var i=e.memoizedState;if(s=i.element,o.isDehydrated)if(o={element:s,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){r=Uc(Error(ge(423)),e),e=$T(n,e,s,t,r);break e}else if(s!==r){r=Uc(Error(ge(424)),e),e=$T(n,e,s,t,r);break e}else for(Tr=Ra(e.stateNode.containerInfo.firstChild),Er=e,rn=!0,To=null,t=aA(e,null,s,t),e.child=t;t;)t.flags=t.flags&-3|4096,t=t.sibling;else{if(Vc(),s===r){e=Ji(n,e,t);break e}Ls(n,e,s,t)}e=e.child}return e;case 5:return cA(e),n===null&&Eb(e),s=e.type,r=e.pendingProps,o=n!==null?n.memoizedProps:null,i=r.children,Ib(s,r)?i=null:o!==null&&Ib(s,o)&&(e.flags|=32),PA(n,e),Ls(n,e,i,t),e.child;case 6:return n===null&&Eb(e),null;case 13:return LA(n,e,t);case 4:return LC(e,e.stateNode.containerInfo),s=e.pendingProps,n===null?e.child=Bc(e,null,s,t):Ls(n,e,s,t),e.child;case 11:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:ko(s,r),IT(n,e,s,r,t);case 7:return Ls(n,e,e.pendingProps,t),e.child;case 8:return Ls(n,e,e.pendingProps.children,t),e.child;case 12:return Ls(n,e,e.pendingProps.children,t),e.child;case 10:e:{if(s=e.type._context,r=e.pendingProps,o=e.memoizedProps,i=r.value,Ut(Ry,s._currentValue),s._currentValue=i,o!==null)if(Mo(o.value,i)){if(o.children===r.children&&!hr.current){e=Ji(n,e,t);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var a=o.dependencies;if(a!==null){i=o.child;for(var l=a.firstContext;l!==null;){if(l.context===s){if(o.tag===1){l=Gi(-1,t&-t),l.tag=2;var u=o.updateQueue;if(u!==null){u=u.shared;var c=u.pending;c===null?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}o.lanes|=t,l=o.alternate,l!==null&&(l.lanes|=t),Rb(o.return,t,e),a.lanes|=t;break}l=l.next}}else if(o.tag===10)i=o.type===e.type?null:o.child;else if(o.tag===18){if(i=o.return,i===null)throw Error(ge(341));i.lanes|=t,a=i.alternate,a!==null&&(a.lanes|=t),Rb(i,t,e),i=o.sibling}else i=o.child;if(i!==null)i.return=o;else for(i=o;i!==null;){if(i===e){i=null;break}if(o=i.sibling,o!==null){o.return=i.return,i=o;break}i=i.return}o=i}Ls(n,e,r.children,t),e=e.child}return e;case 9:return r=e.type,s=e.pendingProps.children,_c(e,t),r=ho(r),s=s(r),e.flags|=1,Ls(n,e,s,t),e.child;case 14:return s=e.type,r=ko(s,e.pendingProps),r=ko(s.type,r),NT(n,e,s,r,t);case 15:return DA(n,e,e.type,e.pendingProps,t);case 17:return s=e.type,r=e.pendingProps,r=e.elementType===s?r:ko(s,r),iy(n,e),e.tag=1,dr(s)?(n=!0,$y(e)):n=!1,_c(e,t),EA(e,s,r),Db(e,s,r,t),Fb(null,e,s,!0,n,t);case 19:return MA(n,e,t);case 22:return OA(n,e,t)}throw Error(ge(156,e.tag))};function eD(n,e){return TR(n,e)}function IU(n,e,t,s){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=s,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Zr(n,e,t,s){return new IU(n,e,t,s)}function ZC(n){return n=n.prototype,!(!n||!n.isReactComponent)}function NU(n){if(typeof n=="function")return ZC(n)?1:0;if(n!=null){if(n=n.$$typeof,n===yC)return 11;if(n===xC)return 14}return 2}function Pa(n,e){var t=n.alternate;return t===null?(t=Zr(n.tag,e,n.key,n.mode),t.elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.type=n.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=n.flags&14680064,t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function uy(n,e,t,s,r,o){var i=2;if(s=n,typeof n=="function")ZC(n)&&(i=1);else if(typeof n=="string")i=5;else e:switch(n){case cc:return jl(t.children,r,o,e);case gC:i=8,r|=8;break;case sb:return n=Zr(12,t,e,r|2),n.elementType=sb,n.lanes=o,n;case rb:return n=Zr(13,t,e,r),n.elementType=rb,n.lanes=o,n;case ob:return n=Zr(19,t,e,r),n.elementType=ob,n.lanes=o,n;case cR:return K0(t,r,o,e);default:if(typeof n=="object"&&n!==null)switch(n.$$typeof){case lR:i=10;break e;case uR:i=9;break e;case yC:i=11;break e;case xC:i=14;break e;case ga:i=16,s=null;break e}throw Error(ge(130,n==null?n:typeof n,""))}return e=Zr(i,t,e,r),e.elementType=n,e.type=s,e.lanes=o,e}function jl(n,e,t,s){return n=Zr(7,n,s,e),n.lanes=t,n}function K0(n,e,t,s){return n=Zr(22,n,s,e),n.elementType=cR,n.lanes=t,n.stateNode={isHidden:!1},n}function bv(n,e,t){return n=Zr(6,n,null,e),n.lanes=t,n}function Sv(n,e,t){return e=Zr(4,n.children!==null?n.children:[],n.key,e),e.lanes=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function TU(n,e,t,s,r){this.tag=e,this.containerInfo=n,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=nv(0),this.expirationTimes=nv(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=nv(0),this.identifierPrefix=s,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function JC(n,e,t,s,r,o,i,a,l){return n=new TU(n,e,t,a,l),e===1?(e=1,o===!0&&(e|=8)):e=0,o=Zr(3,null,null,e),n.current=o,o.stateNode=n,o.memoizedState={element:s,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},FC(o),n}function $U(n,e,t){var s=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:uc,key:s==null?null:""+s,children:n,containerInfo:e,implementation:t}}function tD(n){if(!n)return Wa;n=n._reactInternals;e:{if(ku(n)!==n||n.tag!==1)throw Error(ge(170));var e=n;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(dr(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(ge(171))}if(n.tag===1){var t=n.type;if(dr(t))return tA(n,t,e)}return e}function nD(n,e,t,s,r,o,i,a,l){return n=JC(t,s,!0,n,r,o,i,a,l),n.context=tD(null),t=n.current,s=Us(),r=Oa(t),o=Gi(s,r),o.callback=e??null,Aa(t,o,r),n.current.lanes=r,gf(n,r,s),pr(n,s),n}function X0(n,e,t,s){var r=e.current,o=Us(),i=Oa(r);return t=tD(t),e.context===null?e.context=t:e.pendingContext=t,e=Gi(o,i),e.payload={element:n},s=s===void 0?null:s,s!==null&&(e.callback=s),n=Aa(r,e,i),n!==null&&(Po(n,r,i,o),sy(n,r,i)),i}function By(n){if(n=n.current,!n.child)return null;switch(n.child.tag){case 5:return n.child.stateNode;default:return n.child.stateNode}}function MT(n,e){if(n=n.memoizedState,n!==null&&n.dehydrated!==null){var t=n.retryLane;n.retryLane=t!==0&&t<e?t:e}}function e2(n,e){MT(n,e),(n=n.alternate)&&MT(n,e)}function _U(){return null}var sD=typeof reportError=="function"?reportError:function(n){console.error(n)};function t2(n){this._internalRoot=n}Y0.prototype.render=t2.prototype.render=function(n){var e=this._internalRoot;if(e===null)throw Error(ge(409));X0(n,e,null,null)};Y0.prototype.unmount=t2.prototype.unmount=function(){var n=this._internalRoot;if(n!==null){this._internalRoot=null;var e=n.containerInfo;ru(function(){X0(null,n,null,null)}),e[Qi]=null}};function Y0(n){this._internalRoot=n}Y0.prototype.unstable_scheduleHydration=function(n){if(n){var e=OR();n={blockedOn:null,target:n,priority:e};for(var t=0;t<va.length&&e!==0&&e<va[t].priority;t++);va.splice(t,0,n),t===0&&FR(n)}};function n2(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11)}function Q0(n){return!(!n||n.nodeType!==1&&n.nodeType!==9&&n.nodeType!==11&&(n.nodeType!==8||n.nodeValue!==" react-mount-point-unstable "))}function zT(){}function EU(n,e,t,s,r){if(r){if(typeof s=="function"){var o=s;s=function(){var u=By(i);o.call(u)}}var i=nD(e,s,n,0,null,!1,!1,"",zT);return n._reactRootContainer=i,n[Qi]=i.current,Pp(n.nodeType===8?n.parentNode:n),ru(),i}for(;r=n.lastChild;)n.removeChild(r);if(typeof s=="function"){var a=s;s=function(){var u=By(l);a.call(u)}}var l=JC(n,0,!1,null,null,!1,!1,"",zT);return n._reactRootContainer=l,n[Qi]=l.current,Pp(n.nodeType===8?n.parentNode:n),ru(function(){X0(e,l,t,s)}),l}function Z0(n,e,t,s,r){var o=t._reactRootContainer;if(o){var i=o;if(typeof r=="function"){var a=r;r=function(){var l=By(i);a.call(l)}}X0(e,i,n,r)}else i=EU(t,e,n,r,s);return By(i)}AR=function(n){switch(n.tag){case 3:var e=n.stateNode;if(e.current.memoizedState.isDehydrated){var t=ip(e.pendingLanes);t!==0&&(bC(e,t|1),pr(e,Nn()),!(kt&6)&&(Gc=Nn()+500,il()))}break;case 13:ru(function(){var s=Zi(n,1);if(s!==null){var r=Us();Po(s,n,1,r)}}),e2(n,1)}};SC=function(n){if(n.tag===13){var e=Zi(n,134217728);if(e!==null){var t=Us();Po(e,n,134217728,t)}e2(n,134217728)}};DR=function(n){if(n.tag===13){var e=Oa(n),t=Zi(n,e);if(t!==null){var s=Us();Po(t,n,e,s)}e2(n,e)}};OR=function(){return Et};PR=function(n,e){var t=Et;try{return Et=n,e()}finally{Et=t}};mb=function(n,e,t){switch(e){case"input":if(lb(n,t),e=t.name,t.type==="radio"&&e!=null){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var s=t[e];if(s!==n&&s.form===n.form){var r=W0(s);if(!r)throw Error(ge(90));dR(s),lb(s,r)}}}break;case"textarea":fR(n,t);break;case"select":e=t.value,e!=null&&Ic(n,!!t.multiple,e,!1)}};bR=XC;SR=ru;var RU={usingClientEntryPoint:!1,Events:[xf,fc,W0,wR,vR,XC]},Zd={findFiberByHostInstance:Fl,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},AU={bundleType:Zd.bundleType,version:Zd.version,rendererPackageName:Zd.rendererPackageName,rendererConfig:Zd.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return n=IR(n),n===null?null:n.stateNode},findFiberByHostInstance:Zd.findFiberByHostInstance||_U,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ag=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ag.isDisabled&&Ag.supportsFiber)try{M0=Ag.inject(AU),mi=Ag}catch{}}Lr.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=RU;Lr.createPortal=function(n,e){var t=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!n2(e))throw Error(ge(200));return $U(n,e,null,t)};Lr.createRoot=function(n,e){if(!n2(n))throw Error(ge(299));var t=!1,s="",r=sD;return e!=null&&(e.unstable_strictMode===!0&&(t=!0),e.identifierPrefix!==void 0&&(s=e.identifierPrefix),e.onRecoverableError!==void 0&&(r=e.onRecoverableError)),e=JC(n,1,!1,null,null,t,!1,s,r),n[Qi]=e.current,Pp(n.nodeType===8?n.parentNode:n),new t2(e)};Lr.findDOMNode=function(n){if(n==null)return null;if(n.nodeType===1)return n;var e=n._reactInternals;if(e===void 0)throw typeof n.render=="function"?Error(ge(188)):(n=Object.keys(n).join(","),Error(ge(268,n)));return n=IR(e),n=n===null?null:n.stateNode,n};Lr.flushSync=function(n){return ru(n)};Lr.hydrate=function(n,e,t){if(!Q0(e))throw Error(ge(200));return Z0(null,n,e,!0,t)};Lr.hydrateRoot=function(n,e,t){if(!n2(n))throw Error(ge(405));var s=t!=null&&t.hydratedSources||null,r=!1,o="",i=sD;if(t!=null&&(t.unstable_strictMode===!0&&(r=!0),t.identifierPrefix!==void 0&&(o=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),e=nD(e,null,n,1,t??null,r,!1,o,i),n[Qi]=e.current,Pp(n),s)for(n=0;n<s.length;n++)t=s[n],r=t._getVersion,r=r(t._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[t,r]:e.mutableSourceEagerHydrationData.push(t,r);return new Y0(e)};Lr.render=function(n,e,t){if(!Q0(e))throw Error(ge(200));return Z0(null,n,e,!1,t)};Lr.unmountComponentAtNode=function(n){if(!Q0(n))throw Error(ge(40));return n._reactRootContainer?(ru(function(){Z0(null,null,n,!1,function(){n._reactRootContainer=null,n[Qi]=null})}),!0):!1};Lr.unstable_batchedUpdates=XC;Lr.unstable_renderSubtreeIntoContainer=function(n,e,t,s){if(!Q0(t))throw Error(ge(200));if(n==null||n._reactInternals===void 0)throw Error(ge(38));return Z0(n,e,t,!1,s)};Lr.version="18.3.1-next-f1338f8080-20240426";function rD(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(rD)}catch(n){console.error(n)}}rD(),rR.exports=Lr;var DU=rR.exports,VT=DU;tb.createRoot=VT.createRoot,tb.hydrateRoot=VT.hydrateRoot;function OU({onStart:n}){return ue.jsxs("div",{className:"container",role:"main",children:[ue.jsx("h1",{children:"Movement to Music AI"}),ue.jsx("p",{className:"welcome-description",children:"Transform your movements into music using AI"}),ue.jsxs("div",{className:"welcome-content",children:[ue.jsx("p",{children:"This application uses your webcam to detect body movements and generates music in real-time based on your gestures."}),ue.jsxs("ul",{className:"feature-list","aria-label":"Application features",children:[ue.jsx("li",{children:"Real-time pose detection using AI"}),ue.jsx("li",{children:"Customisable body part selection"}),ue.jsx("li",{children:"Dynamic music generation"}),ue.jsx("li",{children:"Accessible with multiple theme options"})]}),ue.jsx("button",{onClick:n,"aria-label":"Get started with Movement to Music",className:"primary-button",children:"Get Started"})]})]})}const Cv={face:{label:"Face",parts:[{id:"nose",label:"Nose"},{id:"leftEye",label:"Left Eye"},{id:"rightEye",label:"Right Eye"},{id:"leftEar",label:"Left Ear"},{id:"rightEar",label:"Right Ear"}]},upper:{label:"Upper Body",parts:[{id:"leftShoulder",label:"Left Shoulder"},{id:"rightShoulder",label:"Right Shoulder"},{id:"leftElbow",label:"Left Elbow"},{id:"rightElbow",label:"Right Elbow"},{id:"leftWrist",label:"Left Wrist"},{id:"rightWrist",label:"Right Wrist"}]},lower:{label:"Lower Body",parts:[{id:"leftHip",label:"Left Hip"},{id:"rightHip",label:"Right Hip"},{id:"leftKnee",label:"Left Knee"},{id:"rightKnee",label:"Right Knee"},{id:"leftAnkle",label:"Left Ankle"},{id:"rightAnkle",label:"Right Ankle"}]}};function PU({selectedParts:n,onSelectionChange:e}){const t=o=>{n.includes(o)?e(n.filter(i=>i!==o)):e([...n,o])},s=()=>{const o=Object.values(Cv).flatMap(i=>i.parts.map(a=>a.id));n.length===o.length?e([]):e(o)},r=Object.values(Cv).reduce((o,i)=>o+i.parts.length,0);return ue.jsxs("div",{className:"body-part-selector",children:[ue.jsxs("div",{className:"selector-header",children:[ue.jsx("h3",{children:"Select Body Parts to Track"}),ue.jsx("button",{onClick:s,className:"toggle-all-button","aria-label":n.length===r?"Deselect all body parts":"Select all body parts",children:n.length===r?"Deselect All":"Select All"})]}),ue.jsx("div",{className:"body-parts-container",children:Object.entries(Cv).map(([o,i])=>ue.jsxs("div",{className:"body-part-group",children:[ue.jsx("h4",{children:i.label}),ue.jsx("div",{className:"body-parts-list",children:i.parts.map(a=>ue.jsxs("label",{className:"body-part-option",children:[ue.jsx("input",{type:"checkbox",checked:n.includes(a.id),onChange:()=>t(a.id),"aria-label":`Select ${a.label}`}),ue.jsx("span",{children:a.label})]},a.id))})]},o))})]})}const FU={nose:{x:100,y:40,label:"Nose"},leftEye:{x:90,y:35,label:"L Eye"},rightEye:{x:110,y:35,label:"R Eye"},leftEar:{x:80,y:40,label:"L Ear"},rightEar:{x:120,y:40,label:"R Ear"},leftShoulder:{x:70,y:80,label:"L Shoulder"},rightShoulder:{x:130,y:80,label:"R Shoulder"},leftElbow:{x:50,y:120,label:"L Elbow"},rightElbow:{x:150,y:120,label:"R Elbow"},leftWrist:{x:40,y:150,label:"L Wrist"},rightWrist:{x:160,y:150,label:"R Wrist"},leftHip:{x:85,y:140,label:"L Hip"},rightHip:{x:115,y:140,label:"R Hip"},leftKnee:{x:80,y:190,label:"L Knee"},rightKnee:{x:120,y:190,label:"R Knee"},leftAnkle:{x:75,y:240,label:"L Ankle"},rightAnkle:{x:125,y:240,label:"R Ankle"}};function oD({selectedParts:n}){return ue.jsx("div",{className:"body-diagram",children:ue.jsxs("svg",{viewBox:"0 0 200 260",className:"body-svg",children:[ue.jsxs("g",{className:"body-outline",children:[ue.jsx("circle",{cx:"100",cy:"40",r:"20"}),ue.jsx("line",{x1:"100",y1:"60",x2:"100",y2:"140"}),ue.jsx("line",{x1:"100",y1:"80",x2:"70",y2:"80"}),ue.jsx("line",{x1:"70",y1:"80",x2:"50",y2:"120"}),ue.jsx("line",{x1:"50",y1:"120",x2:"40",y2:"150"}),ue.jsx("line",{x1:"100",y1:"80",x2:"130",y2:"80"}),ue.jsx("line",{x1:"130",y1:"80",x2:"150",y2:"120"}),ue.jsx("line",{x1:"150",y1:"120",x2:"160",y2:"150"}),ue.jsx("line",{x1:"100",y1:"140",x2:"85",y2:"140"}),ue.jsx("line",{x1:"85",y1:"140",x2:"80",y2:"190"}),ue.jsx("line",{x1:"80",y1:"190",x2:"75",y2:"240"}),ue.jsx("line",{x1:"100",y1:"140",x2:"115",y2:"140"}),ue.jsx("line",{x1:"115",y1:"140",x2:"120",y2:"190"}),ue.jsx("line",{x1:"120",y1:"190",x2:"125",y2:"240"})]}),Object.entries(FU).map(([e,t])=>{const s=n.includes(e);return ue.jsxs("g",{children:[ue.jsx("circle",{cx:t.x,cy:t.y,r:"6",className:`body-point ${s?"active":""}`}),s&&ue.jsx("circle",{cx:t.x,cy:t.y,r:"8",fill:"none",stroke:"var(--accent-color)",strokeWidth:"2",opacity:"0.6",className:"body-point-glow"}),ue.jsx("text",{x:t.x,y:t.y-10,className:"body-label",children:t.label})]},e)})]})})}function LU({onComplete:n}){const[e,t]=He.useState([]),s=()=>{e.length>0&&n(e)};return ue.jsxs("div",{className:"setup-container",children:[ue.jsx("h2",{className:"setup-title",children:"Setup Body Tracking"}),ue.jsxs("div",{className:"setup-content",children:[ue.jsxs("div",{className:"diagram-section",children:[ue.jsx(oD,{selectedParts:e}),ue.jsx("p",{className:"diagram-caption",children:"Selected parts are highlighted"})]}),ue.jsx("div",{className:"selector-section",children:ue.jsx(PU,{selectedParts:e,onSelectionChange:t})})]}),ue.jsx("button",{className:"continue-button",onClick:s,disabled:e.length===0,"aria-label":e.length===0?"Select at least one body part to continue":"Continue to performance",children:"Continue to Performance"})]})}const iD="15.1.22",BT=(n,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:n}),WT=(n,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:n}),Kb=(n,e)=>({startTime:e,type:"setValue",value:n}),aD=(n,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:n}),lD=(n,e,{startTime:t,target:s,timeConstant:r})=>s+(e-s)*Math.exp((t-n)/r),bc=n=>n.type==="exponentialRampToValue",Wy=n=>n.type==="linearRampToValue",xa=n=>bc(n)||Wy(n),s2=n=>n.type==="setValue",Fi=n=>n.type==="setValueCurve",Uy=(n,e,t,s)=>{const r=n[e];return r===void 0?s:xa(r)||s2(r)?r.value:Fi(r)?r.values[r.values.length-1]:lD(t,Uy(n,e-1,r.startTime,s),r)},UT=(n,e,t,s,r)=>t===void 0?[s.insertTime,r]:xa(t)?[t.endTime,t.value]:s2(t)?[t.startTime,t.value]:Fi(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,Uy(n,e-1,t.startTime,r)],Xb=n=>n.type==="cancelAndHold",Yb=n=>n.type==="cancelScheduledValues",ma=n=>Xb(n)||Yb(n)?n.cancelTime:bc(n)||Wy(n)?n.endTime:n.startTime,GT=(n,e,t,{endTime:s,value:r})=>t===r?r:0<t&&0<r||t<0&&r<0?t*(r/t)**((n-e)/(s-e)):0,HT=(n,e,t,{endTime:s,value:r})=>t+(n-e)/(s-e)*(r-t),MU=(n,e)=>{const t=Math.floor(e),s=Math.ceil(e);return t===s?n[t]:(1-(e-t))*n[t]+(1-(s-e))*n[s]},zU=(n,{duration:e,startTime:t,values:s})=>{const r=(n-t)/e*(s.length-1);return MU(s,r)},Dg=n=>n.type==="setTarget";class VU{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=ma(e);if(Xb(e)||Yb(e)){const s=this._automationEvents.findIndex(o=>Yb(e)&&Fi(o)?o.startTime+o.duration>=t:ma(o)>=t),r=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),Xb(e)){const o=this._automationEvents[this._automationEvents.length-1];if(r!==void 0&&xa(r)){if(o!==void 0&&Dg(o))throw new Error("The internal list is malformed.");const i=o===void 0?r.insertTime:Fi(o)?o.startTime+o.duration:ma(o),a=o===void 0?this._defaultValue:Fi(o)?o.values[o.values.length-1]:o.value,l=bc(r)?GT(t,i,a,r):HT(t,i,a,r),u=bc(r)?BT(l,t,this._currenTime):WT(l,t,this._currenTime);this._automationEvents.push(u)}if(o!==void 0&&Dg(o)&&this._automationEvents.push(Kb(this.getValue(t),t)),o!==void 0&&Fi(o)&&o.startTime+o.duration>t){const i=t-o.startTime,a=(o.values.length-1)/o.duration,l=Math.max(2,1+Math.ceil(i*a)),u=i/(l-1)*a,c=o.values.slice(0,l);if(u<1)for(let h=1;h<l;h+=1){const d=u*h%1;c[h]=o.values[h-1]*(1-d)+o.values[h]*d}this._automationEvents[this._automationEvents.length-1]=aD(c,o.startTime,i)}}}else{const s=this._automationEvents.findIndex(i=>ma(i)>t),r=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(r!==void 0&&Fi(r)&&ma(r)+r.duration>t)return!1;const o=bc(e)?BT(e.value,e.endTime,this._currenTime):Wy(e)?WT(e.value,t,this._currenTime):e;if(s===-1)this._automationEvents.push(o);else{if(Fi(e)&&t+e.duration>ma(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,o)}}return!0}flush(e){const t=this._automationEvents.findIndex(s=>ma(s)>e);if(t>1){const s=this._automationEvents.slice(t-1),r=s[0];Dg(r)&&s.unshift(Kb(Uy(this._automationEvents,t-2,r.startTime,this._defaultValue),r.startTime)),this._automationEvents=s}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(i=>ma(i)>e),s=this._automationEvents[t],r=(t===-1?this._automationEvents.length:t)-1,o=this._automationEvents[r];if(o!==void 0&&Dg(o)&&(s===void 0||!xa(s)||s.insertTime>e))return lD(e,Uy(this._automationEvents,r-1,o.startTime,this._defaultValue),o);if(o!==void 0&&s2(o)&&(s===void 0||!xa(s)))return o.value;if(o!==void 0&&Fi(o)&&(s===void 0||!xa(s)||o.startTime+o.duration>e))return e<o.startTime+o.duration?zU(e,o):o.values[o.values.length-1];if(o!==void 0&&xa(o)&&(s===void 0||!xa(s)))return o.value;if(s!==void 0&&bc(s)){const[i,a]=UT(this._automationEvents,r,o,s,this._defaultValue);return GT(e,i,a,s)}if(s!==void 0&&Wy(s)){const[i,a]=UT(this._automationEvents,r,o,s,this._defaultValue);return HT(e,i,a,s)}return this._defaultValue}}const BU=n=>({cancelTime:n,type:"cancelAndHold"}),WU=n=>({cancelTime:n,type:"cancelScheduledValues"}),UU=(n,e)=>({endTime:e,type:"exponentialRampToValue",value:n}),GU=(n,e)=>({endTime:e,type:"linearRampToValue",value:n}),HU=(n,e,t)=>({startTime:e,target:n,timeConstant:t,type:"setTarget"}),jU=()=>new DOMException("","AbortError"),qU=n=>(e,t,[s,r,o],i)=>{n(e[r],[t,s,o],a=>a[0]===t&&a[1]===s,i)},KU=n=>(e,t,s)=>{const r=[];for(let o=0;o<s.numberOfInputs;o+=1)r.push(new Set);n.set(e,{activeInputs:r,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},XU=n=>(e,t)=>{n.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},Hc=new WeakSet,uD=new WeakMap,r2=new WeakMap,cD=new WeakMap,o2=new WeakMap,J0=new WeakMap,hD=new WeakMap,Qb=new WeakMap,Zb=new WeakMap,Jb=new WeakMap,dD={construct(){return dD}},YU=n=>{try{const e=new Proxy(n,dD);new e}catch{return!1}return!0},jT=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,qT=(n,e)=>{const t=[];let s=n.replace(/^[\s]+/,""),r=s.match(jT);for(;r!==null;){const o=r[1].slice(1,-1),i=r[0].replace(/([\s]+)?;?$/,"").replace(o,new URL(o,e).toString());t.push(i),s=s.slice(r[0].length).replace(/^[\s]+/,""),r=s.match(jT)}return[t.join(";"),s]},KT=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},XT=n=>{if(!YU(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},QU=(n,e,t,s,r,o,i,a,l,u,c,h,d)=>{let p=0;return(f,m,g={credentials:"omit"})=>{const y=c.get(f);if(y!==void 0&&y.has(m))return Promise.resolve();const x=u.get(f);if(x!==void 0){const S=x.get(m);if(S!==void 0)return S}const w=o(f),b=w.audioWorklet===void 0?r(m).then(([S,C])=>{const[k,N]=qT(S,C),_=`${k};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${N}
})})(window,'_AWGS')`;return t(_)}).then(()=>{const S=d._AWGS.pop();if(S===void 0)throw new SyntaxError;s(w.currentTime,w.sampleRate,()=>S(class{},void 0,(C,k)=>{if(C.trim()==="")throw e();const N=Zb.get(w);if(N!==void 0){if(N.has(C))throw e();XT(k),KT(k.parameterDescriptors),N.set(C,k)}else XT(k),KT(k.parameterDescriptors),Zb.set(w,new Map([[C,k]]))},w.sampleRate,void 0,void 0))}):Promise.all([r(m),Promise.resolve(n(h,h))]).then(([[S,C],k])=>{const N=p+1;p=N;const[_,E]=qT(S,C),L=`${_};((AudioWorkletProcessor,registerProcessor)=>{${E}
})(${k?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${k?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${k?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${N}',class extends AudioWorkletProcessor{process(){return !1}})`,B=new Blob([L],{type:"application/javascript; charset=utf-8"}),W=URL.createObjectURL(B);return w.audioWorklet.addModule(W,g).then(()=>{if(a(w))return w;const Y=i(w);return Y.audioWorklet.addModule(W,g).then(()=>Y)}).then(Y=>{if(l===null)throw new SyntaxError;try{new l(Y,`__sac${N}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(W))});return x===void 0?u.set(f,new Map([[m,b]])):x.set(m,b),b.then(()=>{const S=c.get(f);S===void 0?c.set(f,new Set([m])):S.add(m)}).finally(()=>{const S=u.get(f);S!==void 0&&S.delete(m)}),b}},zo=(n,e)=>{const t=n.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},ex=(n,e)=>{const t=Array.from(n).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[s]=t;return n.delete(s),s},pD=(n,e,t,s)=>{const r=zo(n,e),o=ex(r,i=>i[0]===t&&i[1]===s);return r.size===0&&n.delete(e),o},vf=n=>zo(hD,n),jc=n=>{if(Hc.has(n))throw new Error("The AudioNode is already stored.");Hc.add(n),vf(n).forEach(e=>e(!0))},fD=n=>"port"in n,bf=n=>{if(!Hc.has(n))throw new Error("The AudioNode is not stored.");Hc.delete(n),vf(n).forEach(e=>e(!1))},eS=(n,e)=>{!fD(n)&&e.every(t=>t.size===0)&&bf(n)},ZU=(n,e,t,s,r,o,i,a,l,u,c,h,d)=>{const p=new WeakMap;return(f,m,g,y,x)=>{const{activeInputs:w,passiveInputs:b}=o(m),{outputs:S}=o(f),C=a(f),k=N=>{const _=l(m),E=l(f);if(N){const D=pD(b,f,g,y);n(w,f,D,!1),!x&&!h(f)&&t(E,_,g,y),d(m)&&jc(m)}else{const D=s(w,f,g,y);e(b,y,D,!1),!x&&!h(f)&&r(E,_,g,y);const P=i(m);if(P===0)c(m)&&eS(m,w);else{const F=p.get(m);F!==void 0&&clearTimeout(F),p.set(m,setTimeout(()=>{c(m)&&eS(m,w)},P*1e3))}}};return u(S,[m,g,y],N=>N[0]===m&&N[1]===g&&N[2]===y,!0)?(C.add(k),c(f)?n(w,f,[g,y,k],!0):e(b,y,[f,g,k],!0),!0):!1}},JU=n=>(e,t,[s,r,o],i)=>{const a=e.get(s);a===void 0?e.set(s,new Set([[r,t,o]])):n(a,[r,t,o],l=>l[0]===r&&l[1]===t,i)},eG=n=>(e,t)=>{const s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(s).connect(e.destination);const r=()=>{t.removeEventListener("ended",r),t.disconnect(s),s.disconnect()};t.addEventListener("ended",r)},tG=n=>(e,t)=>{n(e).add(t)},nG={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},sG=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=r(a),c={...nG,...l},h=s(u,c),d=o(u)?e():null;super(a,!1,h,d),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const l=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=l,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const l=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=l,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},Ds=(n,e)=>n.context===e,rG=(n,e,t)=>()=>{const s=new WeakMap,r=async(o,i)=>{let a=e(o);if(!Ds(a,i)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=n(i,u)}return s.set(i,a),await t(o,i,a),a};return{render(o,i){const a=s.get(i);return a!==void 0?Promise.resolve(a):r(o,i)}}},Gy=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Ti=()=>new DOMException("","IndexSizeError"),i2=n=>{n.getChannelData=(e=>t=>{try{return e.call(n,t)}catch(s){throw s.code===12?Ti():s}})(n.getChannelData)},oG={numberOfChannels:1},iG=(n,e,t,s,r,o,i,a)=>{let l=null;return class mD{constructor(c){if(r===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:d,sampleRate:p}={...oG,...c};l===null&&(l=new r(1,1,44100));const f=s!==null&&e(o,o)?new s({length:h,numberOfChannels:d,sampleRate:p}):l.createBuffer(d,h,p);if(f.numberOfChannels===0)throw t();return typeof f.copyFromChannel!="function"?(i(f),i2(f)):e(Gy,()=>Gy(f))||a(f),n.add(f),f}static[Symbol.hasInstance](c){return c!==null&&typeof c=="object"&&Object.getPrototypeOf(c)===mD.prototype||n.has(c)}}},ir=-34028234663852886e22,zs=-ir,Hi=n=>Hc.has(n),aG={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},lG=(n,e,t,s,r,o,i,a)=>class extends n{constructor(u,c){const h=o(u),d={...aG,...c},p=r(h,d),f=i(h),m=f?e():null;super(u,!1,p,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=d.buffer!==null,this._nativeAudioBufferSourceNode=p,this._onended=null,this._playbackRate=t(this,f,p.playbackRate,zs,ir)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const c=typeof u=="function"?a(this,u):null;this._nativeAudioBufferSourceNode.onended=c;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===c?u:h}get playbackRate(){return this._playbackRate}start(u=0,c=0,h){if(this._nativeAudioBufferSourceNode.start(u,c,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[u,c]:[u,c,h]),this.context.state!=="closed"){jc(this);const d=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",d),Hi(this)&&bf(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",d)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},uG=(n,e,t,s,r)=>()=>{const o=new WeakMap;let i=null,a=null;const l=async(u,c)=>{let h=t(u);const d=Ds(h,c);if(!d){const p={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=e(c,p),i!==null&&h.start(...i),a!==null&&h.stop(a)}return o.set(c,h),d?await n(c,u.playbackRate,h.playbackRate):await s(c,u.playbackRate,h.playbackRate),await r(u,c,h),h};return{set start(u){i=u},set stop(u){a=u},render(u,c){const h=o.get(c);return h!==void 0?Promise.resolve(h):l(u,c)}}},cG=n=>"playbackRate"in n,hG=n=>"frequency"in n&&"gain"in n,dG=n=>"offset"in n,pG=n=>!("frequency"in n)&&"gain"in n,fG=n=>"detune"in n&&"frequency"in n&&!("gain"in n),mG=n=>"pan"in n,Ws=n=>zo(uD,n),Sf=n=>zo(cD,n),tS=(n,e)=>{const{activeInputs:t}=Ws(n);t.forEach(r=>r.forEach(([o])=>{e.includes(n)||tS(o,[...e,n])}));const s=cG(n)?[n.playbackRate]:fD(n)?Array.from(n.parameters.values()):hG(n)?[n.Q,n.detune,n.frequency,n.gain]:dG(n)?[n.offset]:pG(n)?[n.gain]:fG(n)?[n.detune,n.frequency]:mG(n)?[n.pan]:[];for(const r of s){const o=Sf(r);o!==void 0&&o.activeInputs.forEach(([i])=>tS(i,e))}Hi(n)&&bf(n)},gD=n=>{tS(n.destination,[])},gG=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),yG=(n,e,t,s,r,o,i,a,l)=>class extends n{constructor(c={}){if(l===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new l(c)}catch(f){throw f.code===12&&f.message==="sampleRate is not in range"?t():f}if(h===null)throw s();if(!gG(c.latencyHint))throw new TypeError(`The provided value '${c.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(c.sampleRate!==void 0&&h.sampleRate!==c.sampleRate)throw t();super(h,2);const{latencyHint:d}=c,{sampleRate:p}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:d==="balanced"?512/p:d==="interactive"||d===void 0?256/p:d==="playback"?1024/p:Math.max(2,Math.min(128,Math.round(d*p/128)))*128/p,this._nativeAudioContext=h,l.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const f=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",f)};h.addEventListener("statechange",f)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),gD(this)}))}createMediaElementSource(c){return new r(this,{mediaElement:c})}createMediaStreamDestination(){return new o(this)}createMediaStreamSource(c){return new i(this,{mediaStream:c})}createMediaStreamTrackSource(c){return new a(this,{mediaStreamTrack:c})}resume(){return this._state==="suspended"?new Promise((c,h)=>{const d=()=>{this._nativeAudioContext.removeEventListener("statechange",d),this._nativeAudioContext.state==="running"?c():this.resume().then(c,h)};this._nativeAudioContext.addEventListener("statechange",d)}):this._nativeAudioContext.resume().catch(c=>{throw c===void 0||c.code===15?e():c})}suspend(){return this._nativeAudioContext.suspend().catch(c=>{throw c===void 0?e():c})}},xG=(n,e,t,s,r,o,i,a)=>class extends n{constructor(u,c){const h=o(u),d=i(h),p=r(h,c,d),f=d?e(a):null;super(u,!1,p,f),this._isNodeOfNativeOfflineAudioContext=d,this._nativeAudioDestinationNode=p}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},wG=n=>{const e=new WeakMap,t=async(s,r)=>{const o=r.destination;return e.set(r,o),await n(s,r,o),o};return{render(s,r){const o=e.get(r);return o!==void 0?Promise.resolve(o):t(s,r)}}},vG=(n,e,t,s,r,o,i,a)=>(l,u)=>{const c=u.listener,h=()=>{const S=new Float32Array(1),C=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),k=i(u);let N=!1,_=[0,0,-1,0,1,0],E=[0,0,0];const D=()=>{if(N)return;N=!0;const B=s(u,256,9,0);B.onaudioprocess=({inputBuffer:W})=>{const Y=[o(W,S,0),o(W,S,1),o(W,S,2),o(W,S,3),o(W,S,4),o(W,S,5)];Y.some((H,Z)=>H!==_[Z])&&(c.setOrientation(...Y),_=Y);const z=[o(W,S,6),o(W,S,7),o(W,S,8)];z.some((H,Z)=>H!==E[Z])&&(c.setPosition(...z),E=z)},C.connect(B)},P=B=>W=>{W!==_[B]&&(_[B]=W,c.setOrientation(..._))},F=B=>W=>{W!==E[B]&&(E[B]=W,c.setPosition(...E))},L=(B,W,Y)=>{const z=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:W});z.connect(C,0,B),z.start(),Object.defineProperty(z.offset,"defaultValue",{get(){return W}});const H=n({context:l},k,z.offset,zs,ir);return a(H,"value",Z=>()=>Z.call(H),Z=>te=>{try{Z.call(H,te)}catch(re){if(re.code!==9)throw re}D(),k&&Y(te)}),H.cancelAndHoldAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.cancelAndHoldAtTime),H.cancelScheduledValues=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.cancelScheduledValues),H.exponentialRampToValueAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.exponentialRampToValueAtTime),H.linearRampToValueAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.linearRampToValueAtTime),H.setTargetAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.setTargetAtTime),H.setValueAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.setValueAtTime),H.setValueCurveAtTime=(Z=>k?()=>{throw r()}:(...te)=>{const re=Z.apply(H,te);return D(),re})(H.setValueCurveAtTime),H};return{forwardX:L(0,0,P(0)),forwardY:L(1,0,P(1)),forwardZ:L(2,-1,P(2)),positionX:L(6,0,F(0)),positionY:L(7,0,F(1)),positionZ:L(8,0,F(2)),upX:L(3,0,P(3)),upY:L(4,1,P(4)),upZ:L(5,0,P(5))}},{forwardX:d,forwardY:p,forwardZ:f,positionX:m,positionY:g,positionZ:y,upX:x,upY:w,upZ:b}=c.forwardX===void 0?h():c;return{get forwardX(){return d},get forwardY(){return p},get forwardZ(){return f},get positionX(){return m},get positionY(){return g},get positionZ(){return y},get upX(){return x},get upY(){return w},get upZ(){return b}}},Hy=n=>"context"in n,Cf=n=>Hy(n[0]),Iu=(n,e,t,s)=>{for(const r of n)if(t(r)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(e),!0},YT=(n,e,[t,s],r)=>{Iu(n,[e,t,s],o=>o[0]===e&&o[1]===t,r)},QT=(n,[e,t,s],r)=>{const o=n.get(e);o===void 0?n.set(e,new Set([[t,s]])):Iu(o,[t,s],i=>i[0]===t,r)},fh=n=>"inputs"in n,jy=(n,e,t,s)=>{if(fh(e)){const r=e.inputs[s];return n.connect(r,t,0),[r,t,0]}return n.connect(e,t,s),[e,t,s]},yD=(n,e,t)=>{for(const s of n)if(s[0]===e&&s[1]===t)return n.delete(s),s;return null},bG=(n,e,t)=>ex(n,s=>s[0]===e&&s[1]===t),xD=(n,e)=>{if(!vf(n).delete(e))throw new Error("Missing the expected event listener.")},wD=(n,e,t)=>{const s=zo(n,e),r=ex(s,o=>o[0]===t);return s.size===0&&n.delete(e),r},qy=(n,e,t,s)=>{fh(e)?n.disconnect(e.inputs[s],t,0):n.disconnect(e,t,s)},Zt=n=>zo(r2,n),Gp=n=>zo(o2,n),ou=n=>Qb.has(n),cy=n=>!Hc.has(n),ZT=(n,e)=>new Promise(t=>{if(e!==null)t(!0);else{const s=n.createScriptProcessor(256,1,1),r=n.createGain(),o=n.createBuffer(1,2,44100),i=o.getChannelData(0);i[0]=1,i[1]=1;const a=n.createBufferSource();a.buffer=o,a.loop=!0,a.connect(s).connect(n.destination),a.connect(r),a.disconnect(r),s.onaudioprocess=l=>{const u=l.inputBuffer.getChannelData(0);Array.prototype.some.call(u,c=>c===1)?t(!0):t(!1),a.stop(),s.onaudioprocess=null,a.disconnect(s),s.disconnect(n.destination)},a.start()}}),kv=(n,e)=>{const t=new Map;for(const s of n)for(const r of s){const o=t.get(r);t.set(r,o===void 0?1:o+1)}t.forEach((s,r)=>e(r,s))},Ky=n=>"context"in n,SG=n=>{const e=new Map;n.connect=(t=>(s,r=0,o=0)=>{const i=Ky(s)?t(s,r,o):t(s,r),a=e.get(s);return a===void 0?e.set(s,[{input:o,output:r}]):a.every(l=>l.input!==o||l.output!==r)&&a.push({input:o,output:r}),i})(n.connect.bind(n)),n.disconnect=(t=>(s,r,o)=>{if(t.apply(n),s===void 0)e.clear();else if(typeof s=="number")for(const[i,a]of e){const l=a.filter(u=>u.output!==s);l.length===0?e.delete(i):e.set(i,l)}else if(e.has(s))if(r===void 0)e.delete(s);else{const i=e.get(s);if(i!==void 0){const a=i.filter(l=>l.output!==r&&(l.input!==o||o===void 0));a.length===0?e.delete(s):e.set(s,a)}}for(const[i,a]of e)a.forEach(l=>{Ky(i)?n.connect(i,l.output,l.input):n.connect(i,l.output)})})(n.disconnect)},CG=(n,e,t,s)=>{const{activeInputs:r,passiveInputs:o}=Sf(e),{outputs:i}=Ws(n),a=vf(n),l=u=>{const c=Zt(n),h=Gp(e);if(u){const d=wD(o,n,t);YT(r,n,d,!1),!s&&!ou(n)&&c.connect(h,t)}else{const d=bG(r,n,t);QT(o,d,!1),!s&&!ou(n)&&c.disconnect(h,t)}};return Iu(i,[e,t],u=>u[0]===e&&u[1]===t,!0)?(a.add(l),Hi(n)?YT(r,n,[t,l],!0):QT(o,[n,t,l],!0),!0):!1},kG=(n,e,t,s)=>{const{activeInputs:r,passiveInputs:o}=Ws(e),i=yD(r[s],n,t);return i===null?[pD(o,n,t,s)[2],!1]:[i[2],!0]},IG=(n,e,t)=>{const{activeInputs:s,passiveInputs:r}=Sf(e),o=yD(s,n,t);return o===null?[wD(r,n,t)[1],!1]:[o[2],!0]},a2=(n,e,t,s,r)=>{const[o,i]=kG(n,t,s,r);if(o!==null&&(xD(n,o),i&&!e&&!ou(n)&&qy(Zt(n),Zt(t),s,r)),Hi(t)){const{activeInputs:a}=Ws(t);eS(t,a)}},l2=(n,e,t,s)=>{const[r,o]=IG(n,t,s);r!==null&&(xD(n,r),o&&!e&&!ou(n)&&Zt(n).disconnect(Gp(t),s))},NG=(n,e)=>{const t=Ws(n),s=[];for(const r of t.outputs)Cf(r)?a2(n,e,...r):l2(n,e,...r),s.push(r[0]);return t.outputs.clear(),s},TG=(n,e,t)=>{const s=Ws(n),r=[];for(const o of s.outputs)o[1]===t&&(Cf(o)?a2(n,e,...o):l2(n,e,...o),r.push(o[0]),s.outputs.delete(o));return r},$G=(n,e,t,s,r)=>{const o=Ws(n);return Array.from(o.outputs).filter(i=>i[0]===t&&(s===void 0||i[1]===s)&&(r===void 0||i[2]===r)).map(i=>(Cf(i)?a2(n,e,...i):l2(n,e,...i),o.outputs.delete(i),i[0]))},_G=(n,e,t,s,r,o,i,a,l,u,c,h,d,p,f,m)=>class extends u{constructor(y,x,w,b){super(w),this._context=y,this._nativeAudioNode=w;const S=c(y);h(S)&&t(ZT,()=>ZT(S,m))!==!0&&SG(w),r2.set(this,w),hD.set(this,new Set),y.state!=="closed"&&x&&jc(this),n(this,b,w)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,x=0,w=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw r();const b=c(this._context),S=f(b);if(d(y)||p(y))throw o();if(Hy(y)){const N=Zt(y);try{const E=jy(this._nativeAudioNode,N,x,w),D=cy(this);(S||D)&&this._nativeAudioNode.disconnect(...E),this.context.state!=="closed"&&!D&&cy(y)&&jc(y)}catch(E){throw E.code===12?o():E}if(e(this,y,x,w,S)){const E=l([this],y);kv(E,s(S))}return y}const C=Gp(y);if(C.name==="playbackRate"&&C.maxValue===1024)throw i();try{this._nativeAudioNode.connect(C,x),(S||cy(this))&&this._nativeAudioNode.disconnect(C,x)}catch(N){throw N.code===12?o():N}if(CG(this,y,x,S)){const N=l([this],y);kv(N,s(S))}}disconnect(y,x,w){let b;const S=c(this._context),C=f(S);if(y===void 0)b=NG(this,C);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw r();b=TG(this,C,y)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||Hy(y)&&w!==void 0&&(w<0||w>=y.numberOfInputs))throw r();if(b=$G(this,C,y,x,w),b.length===0)throw o()}for(const k of b){const N=l([this],k);kv(N,a)}}},EG=(n,e,t,s,r,o,i,a,l,u,c,h,d)=>(p,f,m,g=null,y=null)=>{const x=m.value,w=new VU(x),b=f?s(w):null,S={get defaultValue(){return x},get maxValue(){return g===null?m.maxValue:g},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(C){m.value=C,S.setValueAtTime(C,p.context.currentTime)},cancelAndHoldAtTime(C){if(typeof m.cancelAndHoldAtTime=="function")b===null&&w.flush(p.context.currentTime),w.add(r(C)),m.cancelAndHoldAtTime(C);else{const k=Array.from(w).pop();b===null&&w.flush(p.context.currentTime),w.add(r(C));const N=Array.from(w).pop();m.cancelScheduledValues(C),k!==N&&N!==void 0&&(N.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(N.value,N.endTime):N.type==="linearRampToValue"?m.linearRampToValueAtTime(N.value,N.endTime):N.type==="setValue"?m.setValueAtTime(N.value,N.startTime):N.type==="setValueCurve"&&m.setValueCurveAtTime(N.values,N.startTime,N.duration))}return S},cancelScheduledValues(C){return b===null&&w.flush(p.context.currentTime),w.add(o(C)),m.cancelScheduledValues(C),S},exponentialRampToValueAtTime(C,k){if(C===0)throw new RangeError;if(!Number.isFinite(k)||k<0)throw new RangeError;const N=p.context.currentTime;return b===null&&w.flush(N),Array.from(w).length===0&&(w.add(u(x,N)),m.setValueAtTime(x,N)),w.add(i(C,k)),m.exponentialRampToValueAtTime(C,k),S},linearRampToValueAtTime(C,k){const N=p.context.currentTime;return b===null&&w.flush(N),Array.from(w).length===0&&(w.add(u(x,N)),m.setValueAtTime(x,N)),w.add(a(C,k)),m.linearRampToValueAtTime(C,k),S},setTargetAtTime(C,k,N){return b===null&&w.flush(p.context.currentTime),w.add(l(C,k,N)),m.setTargetAtTime(C,k,N),S},setValueAtTime(C,k){return b===null&&w.flush(p.context.currentTime),w.add(u(C,k)),m.setValueAtTime(C,k),S},setValueCurveAtTime(C,k,N){const _=C instanceof Float32Array?C:new Float32Array(C);if(h!==null&&h.name==="webkitAudioContext"){const E=k+N,D=p.context.sampleRate,P=Math.ceil(k*D),F=Math.floor(E*D),L=F-P,B=new Float32Array(L);for(let Y=0;Y<L;Y+=1){const z=(_.length-1)/N*((P+Y)/D-k),H=Math.floor(z),Z=Math.ceil(z);B[Y]=H===Z?_[H]:(1-(z-H))*_[H]+(1-(Z-z))*_[Z]}b===null&&w.flush(p.context.currentTime),w.add(c(B,k,N)),m.setValueCurveAtTime(B,k,N);const W=F/D;W<E&&d(S,B[B.length-1],W),d(S,_[_.length-1],E)}else b===null&&w.flush(p.context.currentTime),w.add(c(_,k,N)),m.setValueCurveAtTime(_,k,N);return S}};return t.set(S,m),e.set(S,p),n(S,b),S},RG=n=>({replay(e){for(const t of n)if(t.type==="exponentialRampToValue"){const{endTime:s,value:r}=t;e.exponentialRampToValueAtTime(r,s)}else if(t.type==="linearRampToValue"){const{endTime:s,value:r}=t;e.linearRampToValueAtTime(r,s)}else if(t.type==="setTarget"){const{startTime:s,target:r,timeConstant:o}=t;e.setTargetAtTime(r,s,o)}else if(t.type==="setValue"){const{startTime:s,value:r}=t;e.setValueAtTime(r,s)}else if(t.type==="setValueCurve"){const{duration:s,startTime:r,values:o}=t;e.setValueCurveAtTime(o,r,s)}else throw new Error("Can't apply an unknown automation.")}});class vD{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((s,r)=>e.call(t,s,r,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const AG={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},DG=(n,e,t,s,r,o,i,a,l,u,c,h,d,p)=>class extends e{constructor(m,g,y){var x;const w=a(m),b=l(w),S=c({...AG,...y});d(S);const C=Zb.get(w),k=C==null?void 0:C.get(g),N=b||w.state!=="closed"?w:(x=i(w))!==null&&x!==void 0?x:w,_=r(N,b?null:m.baseLatency,u,g,k,S),E=b?s(g,S,k):null;super(m,!0,_,E);const D=[];_.parameters.forEach((F,L)=>{const B=t(this,b,F);D.push([L,B])}),this._nativeAudioWorkletNode=_,this._onprocessorerror=null,this._parameters=new vD(D),b&&n(w,this);const{activeInputs:P}=o(this);h(_,P)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const g=typeof m=="function"?p(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=g;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===g?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Xy(n,e,t,s,r){if(typeof n.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),n.copyFromChannel(e[t],s,r);else{const o=n.getChannelData(s);if(e[t].byteLength===0)e[t]=o.slice(r,r+128);else{const i=new Float32Array(o.buffer,r*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(i)}}}const bD=(n,e,t,s,r)=>{typeof n.copyToChannel=="function"?e[t].byteLength!==0&&n.copyToChannel(e[t],s,r):e[t].byteLength!==0&&n.getChannelData(s).set(e[t],r)},Yy=(n,e)=>{const t=[];for(let s=0;s<n;s+=1){const r=[],o=typeof e=="number"?e:e[s];for(let i=0;i<o;i+=1)r.push(new Float32Array(128));t.push(r)}return t},OG=(n,e)=>{const t=zo(Jb,n),s=Zt(e);return zo(t,s)},PG=async(n,e,t,s,r,o,i)=>{const a=e===null?Math.ceil(n.context.length/128)*128:e.length,l=s.channelCount*s.numberOfInputs,u=r.reduce((g,y)=>g+y,0),c=u===0?null:t.createBuffer(u,a,t.sampleRate);if(o===void 0)throw new Error("Missing the processor constructor.");const h=Ws(n),d=await OG(t,n),p=Yy(s.numberOfInputs,s.channelCount),f=Yy(s.numberOfOutputs,r),m=Array.from(n.parameters.keys()).reduce((g,y)=>({...g,[y]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(s.numberOfInputs>0&&e!==null)for(let y=0;y<s.numberOfInputs;y+=1)for(let x=0;x<s.channelCount;x+=1)Xy(e,p[y],x,x,g);o.parameterDescriptors!==void 0&&e!==null&&o.parameterDescriptors.forEach(({name:y},x)=>{Xy(e,m,y,l+x,g)});for(let y=0;y<s.numberOfInputs;y+=1)for(let x=0;x<r[y];x+=1)f[y][x].byteLength===0&&(f[y][x]=new Float32Array(128));try{const y=p.map((w,b)=>h.activeInputs[b].size===0?[]:w),x=i(g/t.sampleRate,t.sampleRate,()=>d.process(y,f,m));if(c!==null)for(let w=0,b=0;w<s.numberOfOutputs;w+=1){for(let S=0;S<r[w];S+=1)bD(c,f[w],S,b+S,g);b+=r[w]}if(!x)break}catch(y){n.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return c},FG=(n,e,t,s,r,o,i,a,l,u,c,h,d,p,f,m)=>(g,y,x)=>{const w=new WeakMap;let b=null;const S=async(C,k)=>{let N=c(C),_=null;const E=Ds(N,k),D=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const P=D.reduce((W,Y)=>W+Y,0),F=r(k,{channelCount:Math.max(1,P),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,P)}),L=[];for(let W=0;W<C.numberOfOutputs;W+=1)L.push(s(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:D[W]}));const B=i(k,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});B.connect=e.bind(null,L),B.disconnect=l.bind(null,L),_=[F,L,B]}else E||(N=new h(k,g));if(w.set(k,_===null?N:_[2]),_!==null){if(b===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const Y=C.channelCount*C.numberOfInputs,z=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,H=Y+z;b=PG(C,H===0?null:await(async()=>{const te=new d(H,Math.ceil(C.context.length/128)*128,k.sampleRate),re=[],le=[];for(let de=0;de<y.numberOfInputs;de+=1)re.push(i(te,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),le.push(r(te,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const he=await Promise.all(Array.from(C.parameters.values()).map(async de=>{const be=o(te,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:de.value});return await p(te,de,be.offset),be})),ie=s(te,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,Y+z)});for(let de=0;de<y.numberOfInputs;de+=1){re[de].connect(le[de]);for(let be=0;be<y.channelCount;be+=1)le[de].connect(ie,be,de*y.channelCount+be)}for(const[de,be]of he.entries())be.connect(ie,0,Y+de),be.start(0);return ie.connect(te.destination),await Promise.all(re.map(de=>f(C,te,de))),m(te)})(),k,y,D,x,u)}const P=await b,F=t(k,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[L,B,W]=_;P!==null&&(F.buffer=P,F.start(0)),F.connect(L);for(let Y=0,z=0;Y<C.numberOfOutputs;Y+=1){const H=B[Y];for(let Z=0;Z<D[Y];Z+=1)L.connect(H,z+Z,Z);z+=D[Y]}return W}if(E)for(const[P,F]of C.parameters.entries())await n(k,F,N.parameters.get(P));else for(const[P,F]of C.parameters.entries())await p(k,F,N.parameters.get(P));return await f(C,k,N),N};return{render(C,k){a(k,C);const N=w.get(k);return N!==void 0?Promise.resolve(N):S(C,k)}}},LG=(n,e,t,s,r,o,i,a,l,u,c,h,d,p,f,m,g,y,x,w)=>class extends f{constructor(S,C){super(S,C),this._nativeContext=S,this._audioWorklet=n===void 0?void 0:{addModule:(k,N)=>n(this,k,N)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new r(this)}createBuffer(S,C,k){return new t({length:C,numberOfChannels:S,sampleRate:k})}createBufferSource(){return new s(this)}createChannelMerger(S=6){return new o(this,{numberOfInputs:S})}createChannelSplitter(S=6){return new i(this,{numberOfOutputs:S})}createConstantSource(){return new a(this)}createConvolver(){return new l(this)}createDelay(S=1){return new c(this,{maxDelayTime:S})}createDynamicsCompressor(){return new h(this)}createGain(){return new d(this)}createIIRFilter(S,C){return new p(this,{feedback:C,feedforward:S})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(S,C,k={disableNormalization:!1}){return new y(this,{...k,imag:C,real:S})}createStereoPanner(){return new x(this)}createWaveShaper(){return new w(this)}decodeAudioData(S,C,k){return u(this._nativeContext,S).then(N=>(typeof C=="function"&&C(N),N),N=>{throw typeof k=="function"&&k(N),N})}},MG={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},zG=(n,e,t,s,r,o,i,a)=>class extends n{constructor(u,c){const h=o(u),d={...MG,...c},p=r(h,d),f=i(h),m=f?t():null;super(u,!1,p,m),this._Q=e(this,f,p.Q,zs,ir),this._detune=e(this,f,p.detune,1200*Math.log2(zs),-1200*Math.log2(zs)),this._frequency=e(this,f,p.frequency,u.sampleRate/2,0),this._gain=e(this,f,p.gain,40*Math.log10(zs),ir),this._nativeBiquadFilterNode=p,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,c,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,c,h)}catch(d){throw d.code===11?s():d}if(u.length!==c.length||c.length!==h.length)throw s()}},VG=(n,e,t,s,r)=>()=>{const o=new WeakMap,i=async(a,l)=>{let u=t(a);const c=Ds(u,l);if(!c){const h={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=e(l,h)}return o.set(l,u),c?(await n(l,a.Q,u.Q),await n(l,a.detune,u.detune),await n(l,a.frequency,u.frequency),await n(l,a.gain,u.gain)):(await s(l,a.Q,u.Q),await s(l,a.detune,u.detune),await s(l,a.frequency,u.frequency),await s(l,a.gain,u.gain)),await r(a,l,u),u};return{render(a,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):i(a,l)}}},BG=(n,e)=>(t,s)=>{const r=e.get(t);if(r!==void 0)return r;const o=n.get(t);if(o!==void 0)return o;try{const i=s();return i instanceof Promise?(n.set(t,i),i.catch(()=>!1).then(a=>(n.delete(t),e.set(t,a),a))):(e.set(t,i),i)}catch{return e.set(t,!1),!1}},WG={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},UG=(n,e,t,s,r)=>class extends n{constructor(i,a){const l=s(i),u={...WG,...a},c=t(l,u),h=r(l)?e():null;super(i,!1,c,h)}},GG=(n,e,t)=>()=>{const s=new WeakMap,r=async(o,i)=>{let a=e(o);if(!Ds(a,i)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=n(i,u)}return s.set(i,a),await t(o,i,a),a};return{render(o,i){const a=s.get(i);return a!==void 0?Promise.resolve(a):r(o,i)}}},HG={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},jG=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=s(a),c=o({...HG,...l}),h=t(u,c),d=r(u)?e():null;super(a,!1,h,d)}},qG=(n,e,t)=>()=>{const s=new WeakMap,r=async(o,i)=>{let a=e(o);if(!Ds(a,i)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=n(i,u)}return s.set(i,a),await t(o,i,a),a};return{render(o,i){const a=s.get(i);return a!==void 0?Promise.resolve(a):r(o,i)}}},KG=n=>(e,t,s)=>n(t,e,s),XG=n=>(e,t,s=0,r=0)=>{const o=e[s];if(o===void 0)throw n();return Ky(t)?o.connect(t,0,r):o.connect(t,0)},YG=n=>(e,t)=>{const s=n(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),r=e.createBuffer(1,2,44100);return s.buffer=r,s.loop=!0,s.connect(t),s.start(),()=>{s.stop(),s.disconnect(t)}},QG={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},ZG=(n,e,t,s,r,o,i)=>class extends n{constructor(l,u){const c=r(l),h={...QG,...u},d=s(c,h),p=o(c),f=p?t():null;super(l,!1,d,f),this._constantSourceNodeRenderer=f,this._nativeConstantSourceNode=d,this._offset=e(this,p,d.offset,zs,ir),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?i(this,l):null;this._nativeConstantSourceNode.onended=u;const c=this._nativeConstantSourceNode.onended;this._onended=c!==null&&c===u?l:c}start(l=0){if(this._nativeConstantSourceNode.start(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=l),this.context.state!=="closed"){jc(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),Hi(this)&&bf(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(l=0){this._nativeConstantSourceNode.stop(l),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=l)}},JG=(n,e,t,s,r)=>()=>{const o=new WeakMap;let i=null,a=null;const l=async(u,c)=>{let h=t(u);const d=Ds(h,c);if(!d){const p={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=e(c,p),i!==null&&h.start(i),a!==null&&h.stop(a)}return o.set(c,h),d?await n(c,u.offset,h.offset):await s(c,u.offset,h.offset),await r(u,c,h),h};return{set start(u){i=u},set stop(u){a=u},render(u,c){const h=o.get(c);return h!==void 0?Promise.resolve(h):l(u,c)}}},eH=n=>e=>(n[0]=e,n[0]),tH={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},nH=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=s(a),c={...tH,...l},h=t(u,c),p=r(u)?e():null;super(a,!1,h,p),this._isBufferNullified=!1,this._nativeConvolverNode=h,c.buffer!==null&&o(this,c.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const l=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=l.createBuffer(1,1,l.sampleRate),this._isBufferNullified=!0,o(this,0)}else this._isBufferNullified=!1,o(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},sH=(n,e,t)=>()=>{const s=new WeakMap,r=async(o,i)=>{let a=e(o);if(!Ds(a,i)){const u={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=n(i,u)}return s.set(i,a),fh(a)?await t(o,i,a.inputs[0]):await t(o,i,a),a};return{render(o,i){const a=s.get(i);return a!==void 0?Promise.resolve(a):r(o,i)}}},rH=(n,e)=>(t,s,r)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,s,r)}catch(o){throw o.name==="SyntaxError"?n():o}},oH=()=>new DOMException("","DataCloneError"),JT=n=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(s=>{const r=()=>{t.onmessage=null,e.close(),t.close(),s()};t.onmessage=()=>r();try{e.postMessage(n,[n])}catch{}finally{r()}})},iH=(n,e,t,s,r,o,i,a,l,u,c)=>(h,d)=>{const p=i(h)?h:o(h);if(r.has(d)){const f=t();return Promise.reject(f)}try{r.add(d)}catch{}return e(l,()=>l(p))?p.decodeAudioData(d).then(f=>(JT(d).catch(()=>{}),e(a,()=>a(f))||c(f),n.add(f),f)):new Promise((f,m)=>{const g=async()=>{try{await JT(d)}catch{}},y=x=>{m(x),g()};try{p.decodeAudioData(d,x=>{typeof x.copyFromChannel!="function"&&(u(x),i2(x)),n.add(x),g().then(()=>f(x))},x=>{y(x===null?s():x)})}catch(x){y(x)}})},aH=(n,e,t,s,r,o,i,a)=>(l,u)=>{const c=e.get(l);if(c===void 0)throw new Error("Missing the expected cycle count.");const h=o(l.context),d=a(h);if(c===u){if(e.delete(l),!d&&i(l)){const p=s(l),{outputs:f}=t(l);for(const m of f)if(Cf(m)){const g=s(m[0]);n(p,g,m[1],m[2])}else{const g=r(m[0]);p.connect(g,m[1])}}}else e.set(l,c-u)},lH={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},uH=(n,e,t,s,r,o,i)=>class extends n{constructor(l,u){const c=r(l),h={...lH,...u},d=s(c,h),p=o(c),f=p?t(h.maxDelayTime):null;super(l,!1,d,f),this._delayTime=e(this,p,d.delayTime),i(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},cH=(n,e,t,s,r)=>o=>{const i=new WeakMap,a=async(l,u)=>{let c=t(l);const h=Ds(c,u);if(!h){const d={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,delayTime:c.delayTime.value,maxDelayTime:o};c=e(u,d)}return i.set(u,c),h?await n(u,l.delayTime,c.delayTime):await s(u,l.delayTime,c.delayTime),await r(l,u,c),c};return{render(l,u){const c=i.get(u);return c!==void 0?Promise.resolve(c):a(l,u)}}},hH=n=>(e,t,s,r)=>n(e[r],o=>o[0]===t&&o[1]===s),dH=n=>(e,t)=>{n(e).delete(t)},pH=n=>"delayTime"in n,fH=(n,e,t)=>function s(r,o){const i=Hy(o)?o:t(n,o);if(pH(i))return[];if(r[0]===i)return[r];if(r.includes(i))return[];const{outputs:a}=e(i);return Array.from(a).map(l=>s([...r,i],l[0])).reduce((l,u)=>l.concat(u),[])},Og=(n,e,t)=>{const s=e[t];if(s===void 0)throw n();return s},mH=n=>(e,t=void 0,s=void 0,r=0)=>t===void 0?e.forEach(o=>o.disconnect()):typeof t=="number"?Og(n,e,t).disconnect():Ky(t)?s===void 0?e.forEach(o=>o.disconnect(t)):r===void 0?Og(n,e,s).disconnect(t,0):Og(n,e,s).disconnect(t,0,r):s===void 0?e.forEach(o=>o.disconnect(t)):Og(n,e,s).disconnect(t,0),gH={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},yH=(n,e,t,s,r,o,i,a)=>class extends n{constructor(u,c){const h=o(u),d={...gH,...c},p=s(h,d),f=i(h),m=f?t():null;super(u,!1,p,m),this._attack=e(this,f,p.attack),this._knee=e(this,f,p.knee),this._nativeDynamicsCompressorNode=p,this._ratio=e(this,f,p.ratio),this._release=e(this,f,p.release),this._threshold=e(this,f,p.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const c=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=c,r()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const c=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=c,r()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},xH=(n,e,t,s,r)=>()=>{const o=new WeakMap,i=async(a,l)=>{let u=t(a);const c=Ds(u,l);if(!c){const h={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=e(l,h)}return o.set(l,u),c?(await n(l,a.attack,u.attack),await n(l,a.knee,u.knee),await n(l,a.ratio,u.ratio),await n(l,a.release,u.release),await n(l,a.threshold,u.threshold)):(await s(l,a.attack,u.attack),await s(l,a.knee,u.knee),await s(l,a.ratio,u.ratio),await s(l,a.release,u.release),await s(l,a.threshold,u.threshold)),await r(a,l,u),u};return{render(a,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):i(a,l)}}},wH=()=>new DOMException("","EncodingError"),vH=n=>e=>new Promise((t,s)=>{if(n===null){s(new SyntaxError);return}const r=n.document.head;if(r===null)s(new SyntaxError);else{const o=n.document.createElement("script"),i=new Blob([e],{type:"application/javascript"}),a=URL.createObjectURL(i),l=n.onerror,u=()=>{n.onerror=l,URL.revokeObjectURL(a)};n.onerror=(c,h,d,p,f)=>{if(h===a||h===n.location.href&&d===1&&p===1)return u(),s(f),!1;if(l!==null)return l(c,h,d,p,f)},o.onerror=()=>{u(),s(new SyntaxError)},o.onload=()=>{u(),t()},o.src=a,o.type="module",r.appendChild(o)}}),bH=n=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,s,r){if(s!==null){let o=this._listeners.get(s);o===void 0&&(o=n(this,s),typeof s=="function"&&this._listeners.set(s,o)),this._nativeEventTarget.addEventListener(t,o,r)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,s,r){const o=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(t,o===void 0?null:o,r)}},SH=n=>(e,t,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},CH=n=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw n()},kH={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},IH=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=r(a),c={...kH,...l},h=s(u,c),d=o(u),p=d?t():null;super(a,!1,h,p),this._gain=e(this,d,h.gain,zs,ir)}get gain(){return this._gain}},NH=(n,e,t,s,r)=>()=>{const o=new WeakMap,i=async(a,l)=>{let u=t(a);const c=Ds(u,l);if(!c){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=e(l,h)}return o.set(l,u),c?await n(l,a.gain,u.gain):await s(l,a.gain,u.gain),await r(a,l,u),u};return{render(a,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):i(a,l)}}},TH=(n,e)=>t=>e(n,t),$H=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},_H=n=>e=>{var t;return(t=n.get(e))!==null&&t!==void 0?t:0},EH=n=>e=>{const t=n(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},RH=n=>e=>n.get(e),ss=()=>new DOMException("","InvalidStateError"),AH=n=>e=>{const t=n.get(e);if(t===void 0)throw ss();return t},DH=(n,e)=>t=>{let s=n.get(t);if(s!==void 0)return s;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new e(1,1,44100),n.set(t,s),s},OH=n=>e=>{const t=n.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},tx=()=>new DOMException("","InvalidAccessError"),PH=n=>{n.getFrequencyResponse=(e=>(t,s,r)=>{if(t.length!==s.length||s.length!==r.length)throw tx();return e.call(n,t,s,r)})(n.getFrequencyResponse)},FH={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},LH=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=s(a),c=r(u),h={...FH,...l},d=e(u,c?null:a.baseLatency,h),p=c?t(h.feedback,h.feedforward):null;super(a,!1,d,p),PH(d),this._nativeIIRFilterNode=d,o(this,1)}getFrequencyResponse(a,l,u){return this._nativeIIRFilterNode.getFrequencyResponse(a,l,u)}},SD=(n,e,t,s,r,o,i,a,l,u,c)=>{const h=u.length;let d=a;for(let p=0;p<h;p+=1){let f=t[0]*u[p];for(let m=1;m<r;m+=1){const g=d-m&l-1;f+=t[m]*o[g],f-=n[m]*i[g]}for(let m=r;m<s;m+=1)f+=t[m]*o[d-m&l-1];for(let m=r;m<e;m+=1)f-=n[m]*i[d-m&l-1];o[d]=u[p],i[d]=f,d=d+1&l-1,c[p]=f}return d},MH=(n,e,t,s)=>{const r=t instanceof Float64Array?t:new Float64Array(t),o=s instanceof Float64Array?s:new Float64Array(s),i=r.length,a=o.length,l=Math.min(i,a);if(r[0]!==1){for(let f=0;f<i;f+=1)o[f]/=r[0];for(let f=1;f<a;f+=1)r[f]/=r[0]}const u=32,c=new Float32Array(u),h=new Float32Array(u),d=e.createBuffer(n.numberOfChannels,n.length,n.sampleRate),p=n.numberOfChannels;for(let f=0;f<p;f+=1){const m=n.getChannelData(f),g=d.getChannelData(f);c.fill(0),h.fill(0),SD(r,i,o,a,l,c,h,0,u,m,g)}return d},zH=(n,e,t,s,r)=>(o,i)=>{const a=new WeakMap;let l=null;const u=async(c,h)=>{let d=null,p=e(c);const f=Ds(p,h);if(h.createIIRFilter===void 0?d=n(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):f||(p=h.createIIRFilter(i,o)),a.set(h,d===null?p:d),d!==null){if(l===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new t(c.context.destination.channelCount,c.context.length,h.sampleRate);l=(async()=>{await s(c,g,g.destination);const y=await r(g);return MH(y,h,o,i)})()}const m=await l;return d.buffer=m,d.start(0),d}return await s(c,h,p),p};return{render(c,h){const d=a.get(h);return d!==void 0?Promise.resolve(d):u(c,h)}}},VH=(n,e,t,s,r,o)=>i=>(a,l)=>{const u=n.get(a);if(u===void 0){if(!i&&o(a)){const c=s(a),{outputs:h}=t(a);for(const d of h)if(Cf(d)){const p=s(d[0]);e(c,p,d[1],d[2])}else{const p=r(d[0]);c.disconnect(p,d[1])}}n.set(a,l)}else n.set(a,u+l)},BH=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},WH=(n,e)=>t=>n.has(t)||e(t),UH=(n,e)=>t=>n.has(t)||e(t),GH=(n,e)=>t=>{const s=n.get(t);return e(s)||e(t)},HH=n=>e=>n!==null&&e instanceof n,jH=n=>e=>n!==null&&typeof n.AudioNode=="function"&&e instanceof n.AudioNode,qH=n=>e=>n!==null&&typeof n.AudioParam=="function"&&e instanceof n.AudioParam,KH=(n,e)=>t=>n(t)||e(t),XH=n=>e=>n!==null&&e instanceof n,YH=n=>n!==null&&n.isSecureContext,QH=(n,e,t,s)=>class extends n{constructor(o,i){const a=t(o),l=e(a,i);if(s(a))throw TypeError();super(o,!0,l,null),this._nativeMediaElementAudioSourceNode=l}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},ZH={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},JH=(n,e,t,s)=>class extends n{constructor(o,i){const a=t(o);if(s(a))throw new TypeError;const l={...ZH,...i},u=e(a,l);super(o,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},ej=(n,e,t,s)=>class extends n{constructor(o,i){const a=t(o),l=e(a,i);if(s(a))throw new TypeError;super(o,!0,l,null),this._nativeMediaStreamAudioSourceNode=l}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},tj=(n,e,t)=>class extends n{constructor(r,o){const i=t(r),a=e(i,o);super(r,!0,a,null)}},nj=(n,e,t,s,r,o)=>class extends t{constructor(a,l){super(a),this._nativeContext=a,J0.set(this,a),s(a)&&r.set(a,new Set),this._destination=new n(this,l),this._listener=e(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const l=typeof a=="function"?o(this,a):null;this._nativeContext.onstatechange=l;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===l?a:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Hp=n=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=n.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},sj=(n,e)=>(t,s,r)=>{const o=new Set;return t.connect=(i=>(a,l=0,u=0)=>{const c=o.size===0;if(e(a))return i.call(t,a,l,u),n(o,[a,l,u],h=>h[0]===a&&h[1]===l&&h[2]===u,!0),c&&s(),a;i.call(t,a,l),n(o,[a,l],h=>h[0]===a&&h[1]===l,!0),c&&s()})(t.connect),t.disconnect=(i=>(a,l,u)=>{const c=o.size>0;if(a===void 0)i.apply(t),o.clear();else if(typeof a=="number"){i.call(t,a);for(const d of o)d[1]===a&&o.delete(d)}else{e(a)?i.call(t,a,l,u):i.call(t,a,l);for(const d of o)d[0]===a&&(l===void 0||d[1]===l)&&(u===void 0||d[2]===u)&&o.delete(d)}const h=o.size===0;c&&h&&r()})(t.disconnect),t},sn=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t]&&(n[t]=s)},Yn=(n,e)=>{sn(n,e,"channelCount"),sn(n,e,"channelCountMode"),sn(n,e,"channelInterpretation")},e$=n=>typeof n.getFloatTimeDomainData=="function",rj=n=>{n.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);n.getByteTimeDomainData(t);const s=Math.max(t.length,n.fftSize);for(let r=0;r<s;r+=1)e[r]=(t[r]-128)*.0078125;return e}},oj=(n,e)=>(t,s)=>{const r=t.createAnalyser();if(Yn(r,s),!(s.maxDecibels>s.minDecibels))throw e();return sn(r,s,"fftSize"),sn(r,s,"maxDecibels"),sn(r,s,"minDecibels"),sn(r,s,"smoothingTimeConstant"),n(e$,()=>e$(r))||rj(r),r},ij=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,xn=(n,e,t)=>{const s=e[t];s!==void 0&&s!==n[t].value&&(n[t].value=s)},aj=n=>{n.start=(e=>{let t=!1;return(s=0,r=0,o)=>{if(t)throw ss();e.call(n,s,r,o),t=!0}})(n.start)},u2=n=>{n.start=(e=>(t=0,s=0,r)=>{if(typeof r=="number"&&r<0||s<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(n,t,s,r)})(n.start)},c2=n=>{n.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(n,t)})(n.stop)},lj=(n,e,t,s,r,o,i,a,l,u,c)=>(h,d)=>{const p=h.createBufferSource();return Yn(p,d),xn(p,d,"playbackRate"),sn(p,d,"buffer"),sn(p,d,"loop"),sn(p,d,"loopEnd"),sn(p,d,"loopStart"),e(t,()=>t(h))||aj(p),e(s,()=>s(h))||l(p),e(r,()=>r(h))||u(p,h),e(o,()=>o(h))||u2(p),e(i,()=>i(h))||c(p,h),e(a,()=>a(h))||c2(p),n(h,p),p},uj=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,cj=(n,e)=>(t,s,r)=>{const o=t.destination;if(o.channelCount!==s)try{o.channelCount=s}catch{}r&&o.channelCountMode!=="explicit"&&(o.channelCountMode="explicit"),o.maxChannelCount===0&&Object.defineProperty(o,"maxChannelCount",{value:s});const i=n(t,{channelCount:s,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,gain:1});return e(i,"channelCount",a=>()=>a.call(i),a=>l=>{a.call(i,l);try{o.channelCount=l}catch(u){if(l>o.maxChannelCount)throw u}}),e(i,"channelCountMode",a=>()=>a.call(i),a=>l=>{a.call(i,l),o.channelCountMode=l}),e(i,"channelInterpretation",a=>()=>a.call(i),a=>l=>{a.call(i,l),o.channelInterpretation=l}),Object.defineProperty(i,"maxChannelCount",{get:()=>o.maxChannelCount}),i.connect(o),i},hj=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,dj=n=>{const{port1:e}=new MessageChannel;try{e.postMessage(n)}finally{e.close()}},pj=(n,e,t,s,r)=>(o,i,a,l,u,c)=>{if(a!==null)try{const h=new a(o,l,c),d=new Map;let p=null;if(Object.defineProperties(h,{channelCount:{get:()=>c.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>p,set:f=>{typeof p=="function"&&h.removeEventListener("processorerror",p),p=typeof f=="function"?f:null,typeof p=="function"&&h.addEventListener("processorerror",p)}}}),h.addEventListener=(f=>(...m)=>{if(m[0]==="processorerror"){const g=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(g!==null){const y=d.get(m[1]);y!==void 0?m[1]=y:(m[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),g(x)):g(new ErrorEvent(m[0],{...x}))},d.set(g,m[1]))}}return f.call(h,"error",m[1],m[2]),f.call(h,...m)})(h.addEventListener),h.removeEventListener=(f=>(...m)=>{if(m[0]==="processorerror"){const g=d.get(m[1]);g!==void 0&&(d.delete(m[1]),m[1]=g)}return f.call(h,"error",m[1],m[2]),f.call(h,m[0],m[1],m[2])})(h.removeEventListener),c.numberOfOutputs!==0){const f=t(o,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(f).connect(o.destination),r(h,()=>f.disconnect(),()=>f.connect(o.destination))}return h}catch(h){throw h.code===11?s():h}if(u===void 0)throw s();return dj(c),e(o,i,u,c)},CD=(n,e)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*e))))),fj=n=>new Promise((e,t)=>{const{port1:s,port2:r}=new MessageChannel;s.onmessage=({data:o})=>{s.close(),r.close(),e(o)},s.onmessageerror=({data:o})=>{s.close(),r.close(),t(o)},r.postMessage(n)}),mj=async(n,e)=>{const t=await fj(e);return new n(t)},gj=(n,e,t,s)=>{let r=Jb.get(n);r===void 0&&(r=new WeakMap,Jb.set(n,r));const o=mj(t,s);return r.set(e,o),o},yj=(n,e,t,s,r,o,i,a,l,u,c,h,d)=>(p,f,m,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw l();const y=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(y.some(fe=>fe<1))throw l();if(y.length!==g.numberOfOutputs)throw e();if(g.channelCountMode!=="explicit")throw l();const x=g.channelCount*g.numberOfInputs,w=y.reduce((fe,Ie)=>fe+Ie,0),b=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(x+b>6||w>6)throw l();const S=new MessageChannel,C=[],k=[];for(let fe=0;fe<g.numberOfInputs;fe+=1)C.push(i(p,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),k.push(r(p,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const N=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:fe,maxValue:Ie,minValue:Je,name:Ge}of m.parameterDescriptors){const nt=o(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[Ge]!==void 0?g.parameterData[Ge]:fe===void 0?0:fe});Object.defineProperties(nt.offset,{defaultValue:{get:()=>fe===void 0?0:fe},maxValue:{get:()=>Ie===void 0?zs:Ie},minValue:{get:()=>Je===void 0?ir:Je}}),N.push(nt)}const _=s(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+b)}),E=CD(f,p.sampleRate),D=a(p,E,x+b,Math.max(1,w)),P=r(p,{channelCount:Math.max(1,w),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,w)}),F=[];for(let fe=0;fe<g.numberOfOutputs;fe+=1)F.push(s(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[fe]}));for(let fe=0;fe<g.numberOfInputs;fe+=1){C[fe].connect(k[fe]);for(let Ie=0;Ie<g.channelCount;Ie+=1)k[fe].connect(_,Ie,fe*g.channelCount+Ie)}const L=new vD(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:fe},Ie)=>{const Je=N[Ie];return Je.connect(_,0,x+Ie),Je.start(0),[fe,Je.offset]}));_.connect(D);let B=g.channelInterpretation,W=null;const Y=g.numberOfOutputs===0?[D]:F,z={get bufferSize(){return E},get channelCount(){return g.channelCount},set channelCount(fe){throw t()},get channelCountMode(){return g.channelCountMode},set channelCountMode(fe){throw t()},get channelInterpretation(){return B},set channelInterpretation(fe){for(const Ie of C)Ie.channelInterpretation=fe;B=fe},get context(){return D.context},get inputs(){return C},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return W},set onprocessorerror(fe){typeof W=="function"&&z.removeEventListener("processorerror",W),W=typeof fe=="function"?fe:null,typeof W=="function"&&z.addEventListener("processorerror",W)},get parameters(){return L},get port(){return S.port2},addEventListener(...fe){return D.addEventListener(fe[0],fe[1],fe[2])},connect:n.bind(null,Y),disconnect:u.bind(null,Y),dispatchEvent(...fe){return D.dispatchEvent(fe[0])},removeEventListener(...fe){return D.removeEventListener(fe[0],fe[1],fe[2])}},H=new Map;S.port1.addEventListener=(fe=>(...Ie)=>{if(Ie[0]==="message"){const Je=typeof Ie[1]=="function"?Ie[1]:typeof Ie[1]=="object"&&Ie[1]!==null&&typeof Ie[1].handleEvent=="function"?Ie[1].handleEvent:null;if(Je!==null){const Ge=H.get(Ie[1]);Ge!==void 0?Ie[1]=Ge:(Ie[1]=nt=>{c(p.currentTime,p.sampleRate,()=>Je(nt))},H.set(Je,Ie[1]))}}return fe.call(S.port1,Ie[0],Ie[1],Ie[2])})(S.port1.addEventListener),S.port1.removeEventListener=(fe=>(...Ie)=>{if(Ie[0]==="message"){const Je=H.get(Ie[1]);Je!==void 0&&(H.delete(Ie[1]),Ie[1]=Je)}return fe.call(S.port1,Ie[0],Ie[1],Ie[2])})(S.port1.removeEventListener);let Z=null;Object.defineProperty(S.port1,"onmessage",{get:()=>Z,set:fe=>{typeof Z=="function"&&S.port1.removeEventListener("message",Z),Z=typeof fe=="function"?fe:null,typeof Z=="function"&&(S.port1.addEventListener("message",Z),S.port1.start())}}),m.prototype.port=S.port1;let te=null;gj(p,z,m,g).then(fe=>te=fe);const le=Yy(g.numberOfInputs,g.channelCount),he=Yy(g.numberOfOutputs,y),ie=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((fe,{name:Ie})=>({...fe,[Ie]:new Float32Array(128)}),{});let de=!0;const be=()=>{g.numberOfOutputs>0&&D.disconnect(P);for(let fe=0,Ie=0;fe<g.numberOfOutputs;fe+=1){const Je=F[fe];for(let Ge=0;Ge<y[fe];Ge+=1)P.disconnect(Je,Ie+Ge,Ge);Ie+=y[fe]}},ce=new Map;D.onaudioprocess=({inputBuffer:fe,outputBuffer:Ie})=>{if(te!==null){const Je=h(z);for(let Ge=0;Ge<E;Ge+=128){for(let nt=0;nt<g.numberOfInputs;nt+=1)for(let st=0;st<g.channelCount;st+=1)Xy(fe,le[nt],st,st,Ge);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:nt},st)=>{Xy(fe,ie,nt,x+st,Ge)});for(let nt=0;nt<g.numberOfInputs;nt+=1)for(let st=0;st<y[nt];st+=1)he[nt][st].byteLength===0&&(he[nt][st]=new Float32Array(128));try{const nt=le.map((en,Bt)=>{if(Je[Bt].size>0)return ce.set(Bt,E/128),en;const ln=ce.get(Bt);return ln===void 0?[]:(en.every(Js=>Js.every(Fs=>Fs===0))&&(ln===1?ce.delete(Bt):ce.set(Bt,ln-1)),en)});de=c(p.currentTime+Ge/p.sampleRate,p.sampleRate,()=>te.process(nt,he,ie));for(let en=0,Bt=0;en<g.numberOfOutputs;en+=1){for(let vs=0;vs<y[en];vs+=1)bD(Ie,he[en],vs,Bt+vs,Ge);Bt+=y[en]}}catch(nt){de=!1,z.dispatchEvent(new ErrorEvent("processorerror",{colno:nt.colno,filename:nt.filename,lineno:nt.lineno,message:nt.message}))}if(!de){for(let nt=0;nt<g.numberOfInputs;nt+=1){C[nt].disconnect(k[nt]);for(let st=0;st<g.channelCount;st+=1)k[Ge].disconnect(_,st,nt*g.channelCount+st)}if(m.parameterDescriptors!==void 0){const nt=m.parameterDescriptors.length;for(let st=0;st<nt;st+=1){const en=N[st];en.disconnect(_,0,x+st),en.stop()}}_.disconnect(D),D.onaudioprocess=null,Pe?be():ct();break}}}};let Pe=!1;const Be=i(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),We=()=>D.connect(Be).connect(p.destination),ct=()=>{D.disconnect(Be),Be.disconnect()},Xe=()=>{if(de){ct(),g.numberOfOutputs>0&&D.connect(P);for(let fe=0,Ie=0;fe<g.numberOfOutputs;fe+=1){const Je=F[fe];for(let Ge=0;Ge<y[fe];Ge+=1)P.connect(Je,Ie+Ge,Ge);Ie+=y[fe]}}Pe=!0},lt=()=>{de&&(We(),be()),Pe=!1};return We(),d(z,Xe,lt)},kD=(n,e)=>{const t=n.createBiquadFilter();return Yn(t,e),xn(t,e,"Q"),xn(t,e,"detune"),xn(t,e,"frequency"),xn(t,e,"gain"),sn(t,e,"type"),t},xj=(n,e)=>(t,s)=>{const r=t.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&e(t,r),Yn(r,s),r},wj=n=>{const e=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw ss()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw ss()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw ss()}})},kf=(n,e)=>{const t=n.createChannelSplitter(e.numberOfOutputs);return Yn(t,e),wj(t),t},vj=(n,e,t,s,r)=>(o,i)=>{if(o.createConstantSource===void 0)return t(o,i);const a=o.createConstantSource();return Yn(a,i),xn(a,i,"offset"),e(s,()=>s(o))||u2(a),e(r,()=>r(o))||c2(a),n(o,a),a},mh=(n,e)=>(n.connect=e.connect.bind(e),n.disconnect=e.disconnect.bind(e),n),bj=(n,e,t,s)=>(r,{offset:o,...i})=>{const a=r.createBuffer(1,2,44100),l=e(r,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=t(r,{...i,gain:o}),c=a.getChannelData(0);c[0]=1,c[1]=1,l.buffer=a,l.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(f){u.channelCount=f},get channelCountMode(){return u.channelCountMode},set channelCountMode(f){u.channelCountMode=f},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(f){u.channelInterpretation=f},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return l.onended},set onended(f){l.onended=f},addEventListener(...f){return l.addEventListener(f[0],f[1],f[2])},dispatchEvent(...f){return l.dispatchEvent(f[0])},removeEventListener(...f){return l.removeEventListener(f[0],f[1],f[2])},start(f=0){l.start.call(l,f)},stop(f=0){l.stop.call(l,f)}},d=()=>l.connect(u),p=()=>l.disconnect(u);return n(r,l),s(mh(h,u),d,p)},Sj=(n,e)=>(t,s)=>{const r=t.createConvolver();if(Yn(r,s),s.disableNormalization===r.normalize&&(r.normalize=!s.disableNormalization),sn(r,s,"buffer"),s.channelCount>2||(e(r,"channelCount",o=>()=>o.call(r),o=>i=>{if(i>2)throw n();return o.call(r,i)}),s.channelCountMode==="max"))throw n();return e(r,"channelCountMode",o=>()=>o.call(r),o=>i=>{if(i==="max")throw n();return o.call(r,i)}),r},ID=(n,e)=>{const t=n.createDelay(e.maxDelayTime);return Yn(t,e),xn(t,e,"delayTime"),t},Cj=n=>(e,t)=>{const s=e.createDynamicsCompressor();if(Yn(s,t),t.channelCount>2||t.channelCountMode==="max")throw n();return xn(s,t,"attack"),xn(s,t,"knee"),xn(s,t,"ratio"),xn(s,t,"release"),xn(s,t,"threshold"),s},gr=(n,e)=>{const t=n.createGain();return Yn(t,e),xn(t,e,"gain"),t},kj=n=>(e,t,s)=>{if(e.createIIRFilter===void 0)return n(e,t,s);const r=e.createIIRFilter(s.feedforward,s.feedback);return Yn(r,s),r};function Ij(n,e){const t=e[0]*e[0]+e[1]*e[1];return[(n[0]*e[0]+n[1]*e[1])/t,(n[1]*e[0]-n[0]*e[1])/t]}function Nj(n,e){return[n[0]*e[0]-n[1]*e[1],n[0]*e[1]+n[1]*e[0]]}function t$(n,e){let t=[0,0];for(let s=n.length-1;s>=0;s-=1)t=Nj(t,e),t[0]+=n[s];return t}const Tj=(n,e,t,s)=>(r,o,{channelCount:i,channelCountMode:a,channelInterpretation:l,feedback:u,feedforward:c})=>{const h=CD(o,r.sampleRate),d=u instanceof Float64Array?u:new Float64Array(u),p=c instanceof Float64Array?c:new Float64Array(c),f=d.length,m=p.length,g=Math.min(f,m);if(f===0||f>20)throw s();if(d[0]===0)throw e();if(m===0||m>20)throw s();if(p[0]===0)throw e();if(d[0]!==1){for(let N=0;N<m;N+=1)p[N]/=d[0];for(let N=1;N<f;N+=1)d[N]/=d[0]}const y=t(r,h,i,i);y.channelCount=i,y.channelCountMode=a,y.channelInterpretation=l;const x=32,w=[],b=[],S=[];for(let N=0;N<i;N+=1){w.push(0);const _=new Float32Array(x),E=new Float32Array(x);_.fill(0),E.fill(0),b.push(_),S.push(E)}y.onaudioprocess=N=>{const _=N.inputBuffer,E=N.outputBuffer,D=_.numberOfChannels;for(let P=0;P<D;P+=1){const F=_.getChannelData(P),L=E.getChannelData(P);w[P]=SD(d,f,p,m,g,b[P],S[P],w[P],x,F,L)}};const C=r.sampleRate/2;return mh({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(N){y.channelCount=N},get channelCountMode(){return y.channelCountMode},set channelCountMode(N){y.channelCountMode=N},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(N){y.channelInterpretation=N},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...N){return y.addEventListener(N[0],N[1],N[2])},dispatchEvent(...N){return y.dispatchEvent(N[0])},getFrequencyResponse(N,_,E){if(N.length!==_.length||_.length!==E.length)throw n();const D=N.length;for(let P=0;P<D;P+=1){const F=-Math.PI*(N[P]/C),L=[Math.cos(F),Math.sin(F)],B=t$(p,L),W=t$(d,L),Y=Ij(B,W);_[P]=Math.sqrt(Y[0]*Y[0]+Y[1]*Y[1]),E[P]=Math.atan2(Y[1],Y[0])}},removeEventListener(...N){return y.removeEventListener(N[0],N[1],N[2])}},y)},$j=(n,e)=>n.createMediaElementSource(e.mediaElement),_j=(n,e)=>{const t=n.createMediaStreamDestination();return Yn(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},Ej=(n,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((o,i)=>o.id<i.id?-1:o.id>i.id?1:0);const s=t.slice(0,1),r=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(r,"mediaStream",{value:e}),r},Rj=(n,e)=>(t,{mediaStreamTrack:s})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(s);const r=new MediaStream([s]),o=t.createMediaStreamSource(r);if(s.kind!=="audio")throw n();if(e(t))throw new TypeError;return o},Aj=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,Dj=(n,e,t,s,r,o)=>(i,a)=>{const l=i.createOscillator();return Yn(l,a),xn(l,a,"detune"),xn(l,a,"frequency"),a.periodicWave!==void 0?l.setPeriodicWave(a.periodicWave):sn(l,a,"type"),e(t,()=>t(i))||u2(l),e(s,()=>s(i))||o(l,i),e(r,()=>r(i))||c2(l),n(i,l),l},Oj=n=>(e,t)=>{const s=e.createPanner();return s.orientationX===void 0?n(e,t):(Yn(s,t),xn(s,t,"orientationX"),xn(s,t,"orientationY"),xn(s,t,"orientationZ"),xn(s,t,"positionX"),xn(s,t,"positionY"),xn(s,t,"positionZ"),sn(s,t,"coneInnerAngle"),sn(s,t,"coneOuterAngle"),sn(s,t,"coneOuterGain"),sn(s,t,"distanceModel"),sn(s,t,"maxDistance"),sn(s,t,"panningModel"),sn(s,t,"refDistance"),sn(s,t,"rolloffFactor"),s)},Pj=(n,e,t,s,r,o,i,a,l,u)=>(c,{coneInnerAngle:h,coneOuterAngle:d,coneOuterGain:p,distanceModel:f,maxDistance:m,orientationX:g,orientationY:y,orientationZ:x,panningModel:w,positionX:b,positionY:S,positionZ:C,refDistance:k,rolloffFactor:N,..._})=>{const E=c.createPanner();if(_.channelCount>2||_.channelCountMode==="max")throw i();Yn(E,_);const D={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},P=t(c,{...D,channelInterpretation:"speakers",numberOfInputs:6}),F=s(c,{..._,gain:1}),L=s(c,{...D,gain:1}),B=s(c,{...D,gain:0}),W=s(c,{...D,gain:0}),Y=s(c,{...D,gain:0}),z=s(c,{...D,gain:0}),H=s(c,{...D,gain:0}),Z=r(c,256,6,1),te=o(c,{...D,curve:new Float32Array([1,1]),oversample:"none"});let re=[g,y,x],le=[b,S,C];const he=new Float32Array(1);Z.onaudioprocess=({inputBuffer:ce})=>{const Pe=[l(ce,he,0),l(ce,he,1),l(ce,he,2)];Pe.some((We,ct)=>We!==re[ct])&&(E.setOrientation(...Pe),re=Pe);const Be=[l(ce,he,3),l(ce,he,4),l(ce,he,5)];Be.some((We,ct)=>We!==le[ct])&&(E.setPosition(...Be),le=Be)},Object.defineProperty(B.gain,"defaultValue",{get:()=>0}),Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Y.gain,"defaultValue",{get:()=>0}),Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0});const ie={get bufferSize(){},get channelCount(){return E.channelCount},set channelCount(ce){if(ce>2)throw i();F.channelCount=ce,E.channelCount=ce},get channelCountMode(){return E.channelCountMode},set channelCountMode(ce){if(ce==="max")throw i();F.channelCountMode=ce,E.channelCountMode=ce},get channelInterpretation(){return E.channelInterpretation},set channelInterpretation(ce){F.channelInterpretation=ce,E.channelInterpretation=ce},get coneInnerAngle(){return E.coneInnerAngle},set coneInnerAngle(ce){E.coneInnerAngle=ce},get coneOuterAngle(){return E.coneOuterAngle},set coneOuterAngle(ce){E.coneOuterAngle=ce},get coneOuterGain(){return E.coneOuterGain},set coneOuterGain(ce){if(ce<0||ce>1)throw e();E.coneOuterGain=ce},get context(){return E.context},get distanceModel(){return E.distanceModel},set distanceModel(ce){E.distanceModel=ce},get inputs(){return[F]},get maxDistance(){return E.maxDistance},set maxDistance(ce){if(ce<0)throw new RangeError;E.maxDistance=ce},get numberOfInputs(){return E.numberOfInputs},get numberOfOutputs(){return E.numberOfOutputs},get orientationX(){return L.gain},get orientationY(){return B.gain},get orientationZ(){return W.gain},get panningModel(){return E.panningModel},set panningModel(ce){E.panningModel=ce},get positionX(){return Y.gain},get positionY(){return z.gain},get positionZ(){return H.gain},get refDistance(){return E.refDistance},set refDistance(ce){if(ce<0)throw new RangeError;E.refDistance=ce},get rolloffFactor(){return E.rolloffFactor},set rolloffFactor(ce){if(ce<0)throw new RangeError;E.rolloffFactor=ce},addEventListener(...ce){return F.addEventListener(ce[0],ce[1],ce[2])},dispatchEvent(...ce){return F.dispatchEvent(ce[0])},removeEventListener(...ce){return F.removeEventListener(ce[0],ce[1],ce[2])}};h!==ie.coneInnerAngle&&(ie.coneInnerAngle=h),d!==ie.coneOuterAngle&&(ie.coneOuterAngle=d),p!==ie.coneOuterGain&&(ie.coneOuterGain=p),f!==ie.distanceModel&&(ie.distanceModel=f),m!==ie.maxDistance&&(ie.maxDistance=m),g!==ie.orientationX.value&&(ie.orientationX.value=g),y!==ie.orientationY.value&&(ie.orientationY.value=y),x!==ie.orientationZ.value&&(ie.orientationZ.value=x),w!==ie.panningModel&&(ie.panningModel=w),b!==ie.positionX.value&&(ie.positionX.value=b),S!==ie.positionY.value&&(ie.positionY.value=S),C!==ie.positionZ.value&&(ie.positionZ.value=C),k!==ie.refDistance&&(ie.refDistance=k),N!==ie.rolloffFactor&&(ie.rolloffFactor=N),(re[0]!==1||re[1]!==0||re[2]!==0)&&E.setOrientation(...re),(le[0]!==0||le[1]!==0||le[2]!==0)&&E.setPosition(...le);const de=()=>{F.connect(E),n(F,te,0,0),te.connect(L).connect(P,0,0),te.connect(B).connect(P,0,1),te.connect(W).connect(P,0,2),te.connect(Y).connect(P,0,3),te.connect(z).connect(P,0,4),te.connect(H).connect(P,0,5),P.connect(Z).connect(c.destination)},be=()=>{F.disconnect(E),a(F,te,0,0),te.disconnect(L),L.disconnect(P),te.disconnect(B),B.disconnect(P),te.disconnect(W),W.disconnect(P),te.disconnect(Y),Y.disconnect(P),te.disconnect(z),z.disconnect(P),te.disconnect(H),H.disconnect(P),P.disconnect(Z),Z.disconnect(c.destination)};return u(mh(ie,E),de,be)},Fj=n=>(e,{disableNormalization:t,imag:s,real:r})=>{const o=s instanceof Float32Array?s:new Float32Array(s),i=r instanceof Float32Array?r:new Float32Array(r),a=e.createPeriodicWave(i,o,{disableNormalization:t});if(Array.from(s).length<2)throw n();return a},If=(n,e,t,s)=>n.createScriptProcessor(e,t,s),Lj=(n,e)=>(t,s)=>{const r=s.channelCountMode;if(r==="clamped-max")throw e();if(t.createStereoPanner===void 0)return n(t,s);const o=t.createStereoPanner();return Yn(o,s),xn(o,s,"pan"),Object.defineProperty(o,"channelCountMode",{get:()=>r,set:i=>{if(i!==r)throw e()}}),o},Mj=(n,e,t,s,r,o)=>{const a=new Float32Array([1,1]),l=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},c={...u,oversample:"none"},h=(f,m,g,y)=>{const x=new Float32Array(16385),w=new Float32Array(16385);for(let _=0;_<16385;_+=1){const E=_/16384*l;x[_]=Math.cos(E),w[_]=Math.sin(E)}const b=t(f,{...u,gain:0}),S=s(f,{...c,curve:x}),C=s(f,{...c,curve:a}),k=t(f,{...u,gain:0}),N=s(f,{...c,curve:w});return{connectGraph(){m.connect(b),m.connect(C.inputs===void 0?C:C.inputs[0]),m.connect(k),C.connect(g),g.connect(S.inputs===void 0?S:S.inputs[0]),g.connect(N.inputs===void 0?N:N.inputs[0]),S.connect(b.gain),N.connect(k.gain),b.connect(y,0,0),k.connect(y,0,1)},disconnectGraph(){m.disconnect(b),m.disconnect(C.inputs===void 0?C:C.inputs[0]),m.disconnect(k),C.disconnect(g),g.disconnect(S.inputs===void 0?S:S.inputs[0]),g.disconnect(N.inputs===void 0?N:N.inputs[0]),S.disconnect(b.gain),N.disconnect(k.gain),b.disconnect(y,0,0),k.disconnect(y,0,1)}}},d=(f,m,g,y)=>{const x=new Float32Array(16385),w=new Float32Array(16385),b=new Float32Array(16385),S=new Float32Array(16385),C=Math.floor(16385/2);for(let Y=0;Y<16385;Y+=1)if(Y>C){const z=(Y-C)/(16384-C)*l;x[Y]=Math.cos(z),w[Y]=Math.sin(z),b[Y]=0,S[Y]=1}else{const z=Y/(16384-C)*l;x[Y]=1,w[Y]=0,b[Y]=Math.cos(z),S[Y]=Math.sin(z)}const k=e(f,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),N=t(f,{...u,gain:0}),_=s(f,{...c,curve:x}),E=t(f,{...u,gain:0}),D=s(f,{...c,curve:w}),P=s(f,{...c,curve:a}),F=t(f,{...u,gain:0}),L=s(f,{...c,curve:b}),B=t(f,{...u,gain:0}),W=s(f,{...c,curve:S});return{connectGraph(){m.connect(k),m.connect(P.inputs===void 0?P:P.inputs[0]),k.connect(N,0),k.connect(E,0),k.connect(F,1),k.connect(B,1),P.connect(g),g.connect(_.inputs===void 0?_:_.inputs[0]),g.connect(D.inputs===void 0?D:D.inputs[0]),g.connect(L.inputs===void 0?L:L.inputs[0]),g.connect(W.inputs===void 0?W:W.inputs[0]),_.connect(N.gain),D.connect(E.gain),L.connect(F.gain),W.connect(B.gain),N.connect(y,0,0),F.connect(y,0,0),E.connect(y,0,1),B.connect(y,0,1)},disconnectGraph(){m.disconnect(k),m.disconnect(P.inputs===void 0?P:P.inputs[0]),k.disconnect(N,0),k.disconnect(E,0),k.disconnect(F,1),k.disconnect(B,1),P.disconnect(g),g.disconnect(_.inputs===void 0?_:_.inputs[0]),g.disconnect(D.inputs===void 0?D:D.inputs[0]),g.disconnect(L.inputs===void 0?L:L.inputs[0]),g.disconnect(W.inputs===void 0?W:W.inputs[0]),_.disconnect(N.gain),D.disconnect(E.gain),L.disconnect(F.gain),W.disconnect(B.gain),N.disconnect(y,0,0),F.disconnect(y,0,0),E.disconnect(y,0,1),B.disconnect(y,0,1)}}},p=(f,m,g,y,x)=>{if(m===1)return h(f,g,y,x);if(m===2)return d(f,g,y,x);throw r()};return(f,{channelCount:m,channelCountMode:g,pan:y,...x})=>{if(g==="max")throw r();const w=n(f,{...x,channelCount:1,channelCountMode:g,numberOfInputs:2}),b=t(f,{...x,channelCount:m,channelCountMode:g,gain:1}),S=t(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:C,disconnectGraph:k}=p(f,m,b,S,w);Object.defineProperty(S.gain,"defaultValue",{get:()=>0}),Object.defineProperty(S.gain,"maxValue",{get:()=>1}),Object.defineProperty(S.gain,"minValue",{get:()=>-1});const N={get bufferSize(){},get channelCount(){return b.channelCount},set channelCount(P){b.channelCount!==P&&(_&&k(),{connectGraph:C,disconnectGraph:k}=p(f,P,b,S,w),_&&C()),b.channelCount=P},get channelCountMode(){return b.channelCountMode},set channelCountMode(P){if(P==="clamped-max"||P==="max")throw r();b.channelCountMode=P},get channelInterpretation(){return b.channelInterpretation},set channelInterpretation(P){b.channelInterpretation=P},get context(){return b.context},get inputs(){return[b]},get numberOfInputs(){return b.numberOfInputs},get numberOfOutputs(){return b.numberOfOutputs},get pan(){return S.gain},addEventListener(...P){return b.addEventListener(P[0],P[1],P[2])},dispatchEvent(...P){return b.dispatchEvent(P[0])},removeEventListener(...P){return b.removeEventListener(P[0],P[1],P[2])}};let _=!1;const E=()=>{C(),_=!0},D=()=>{k(),_=!1};return o(mh(N,w),E,D)}},zj=(n,e,t,s,r,o,i)=>(a,l)=>{const u=a.createWaveShaper();if(o!==null&&o.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return t(a,l);Yn(u,l);const c=l.curve===null||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(c!==null&&c.length<2)throw e();sn(u,{curve:c},"curve"),sn(u,l,"oversample");let h=null,d=!1;return i(u,"curve",m=>()=>m.call(u),m=>g=>(m.call(u,g),d&&(s(g)&&h===null?h=n(a,u):!s(g)&&h!==null&&(h(),h=null)),g)),r(u,()=>{d=!0,s(u.curve)&&(h=n(a,u))},()=>{d=!1,h!==null&&(h(),h=null)})},Vj=(n,e,t,s,r)=>(o,{curve:i,oversample:a,...l})=>{const u=o.createWaveShaper(),c=o.createWaveShaper();Yn(u,l),Yn(c,l);const h=t(o,{...l,gain:1}),d=t(o,{...l,gain:-1}),p=t(o,{...l,gain:1}),f=t(o,{...l,gain:-1});let m=null,g=!1,y=null;const x={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(S){h.channelCount=S,d.channelCount=S,u.channelCount=S,p.channelCount=S,c.channelCount=S,f.channelCount=S},get channelCountMode(){return u.channelCountMode},set channelCountMode(S){h.channelCountMode=S,d.channelCountMode=S,u.channelCountMode=S,p.channelCountMode=S,c.channelCountMode=S,f.channelCountMode=S},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(S){h.channelInterpretation=S,d.channelInterpretation=S,u.channelInterpretation=S,p.channelInterpretation=S,c.channelInterpretation=S,f.channelInterpretation=S},get context(){return u.context},get curve(){return y},set curve(S){if(S!==null&&S.length<2)throw e();if(S===null)u.curve=S,c.curve=S;else{const C=S.length,k=new Float32Array(C+2-C%2),N=new Float32Array(C+2-C%2);k[0]=S[0],N[0]=-S[C-1];const _=Math.ceil((C+1)/2),E=(C+1)/2-1;for(let D=1;D<_;D+=1){const P=D/_*E,F=Math.floor(P),L=Math.ceil(P);k[D]=F===L?S[F]:(1-(P-F))*S[F]+(1-(L-P))*S[L],N[D]=F===L?-S[C-1-F]:-((1-(P-F))*S[C-1-F])-(1-(L-P))*S[C-1-L]}k[_]=C%2===1?S[_-1]:(S[_-2]+S[_-1])/2,u.curve=k,c.curve=N}y=S,g&&(s(y)&&m===null?m=n(o,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(S){u.oversample=S,c.oversample=S},addEventListener(...S){return h.addEventListener(S[0],S[1],S[2])},dispatchEvent(...S){return h.dispatchEvent(S[0])},removeEventListener(...S){return h.removeEventListener(S[0],S[1],S[2])}};i!==null&&(x.curve=i instanceof Float32Array?i:new Float32Array(i)),a!==x.oversample&&(x.oversample=a);const w=()=>{h.connect(u).connect(p),h.connect(d).connect(c).connect(f).connect(p),g=!0,s(y)&&(m=n(o,h))},b=()=>{h.disconnect(u),u.disconnect(p),h.disconnect(d),d.disconnect(c),c.disconnect(f),f.disconnect(p),g=!1,m!==null&&(m(),m=null)};return r(mh(x,p),w,b)},Qs=()=>new DOMException("","NotSupportedError"),Bj={numberOfChannels:1},Wj=(n,e,t,s,r)=>class extends n{constructor(i,a,l){let u;if(typeof i=="number"&&a!==void 0&&l!==void 0)u={length:a,numberOfChannels:i,sampleRate:l};else if(typeof i=="object")u=i;else throw new Error("The given parameters are not valid.");const{length:c,numberOfChannels:h,sampleRate:d}={...Bj,...u},p=s(h,c,d);e(Hp,()=>Hp(p))||p.addEventListener("statechange",(()=>{let f=0;const m=g=>{this._state==="running"&&(f>0?(p.removeEventListener("statechange",m),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):f+=1)};return m})()),super(p,h),this._length=c,this._nativeOfflineAudioContext=p,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",r(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,gD(this)}))}_waitForThePromiseToSettle(i){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(i):setTimeout(()=>this._waitForThePromiseToSettle(i))}},Uj={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Gj=(n,e,t,s,r,o,i)=>class extends n{constructor(l,u){const c=r(l),h={...Uj,...u},d=t(c,h),p=o(c),f=p?s():null,m=l.sampleRate/2;super(l,!1,d,f),this._detune=e(this,p,d.detune,153600,-153600),this._frequency=e(this,p,d.frequency,m,-m),this._nativeOscillatorNode=d,this._onended=null,this._oscillatorNodeRenderer=f,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?i(this,l):null;this._nativeOscillatorNode.onended=u;const c=this._nativeOscillatorNode.onended;this._onended=c!==null&&c===u?l:c}get type(){return this._nativeOscillatorNode.type}set type(l){this._nativeOscillatorNode.type=l,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(l){this._nativeOscillatorNode.setPeriodicWave(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=l)}start(l=0){if(this._nativeOscillatorNode.start(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=l),this.context.state!=="closed"){jc(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),Hi(this)&&bf(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(l=0){this._nativeOscillatorNode.stop(l),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=l)}},Hj=(n,e,t,s,r)=>()=>{const o=new WeakMap;let i=null,a=null,l=null;const u=async(c,h)=>{let d=t(c);const p=Ds(d,h);if(!p){const f={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,detune:d.detune.value,frequency:d.frequency.value,periodicWave:i===null?void 0:i,type:d.type};d=e(h,f),a!==null&&d.start(a),l!==null&&d.stop(l)}return o.set(h,d),p?(await n(h,c.detune,d.detune),await n(h,c.frequency,d.frequency)):(await s(h,c.detune,d.detune),await s(h,c.frequency,d.frequency)),await r(c,h,d),d};return{set periodicWave(c){i=c},set start(c){a=c},set stop(c){l=c},render(c,h){const d=o.get(h);return d!==void 0?Promise.resolve(d):u(c,h)}}},jj={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},qj=(n,e,t,s,r,o,i)=>class extends n{constructor(l,u){const c=r(l),h={...jj,...u},d=t(c,h),p=o(c),f=p?s():null;super(l,!1,d,f),this._nativePannerNode=d,this._orientationX=e(this,p,d.orientationX,zs,ir),this._orientationY=e(this,p,d.orientationY,zs,ir),this._orientationZ=e(this,p,d.orientationZ,zs,ir),this._positionX=e(this,p,d.positionX,zs,ir),this._positionY=e(this,p,d.positionY,zs,ir),this._positionZ=e(this,p,d.positionZ,zs,ir),i(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(l){this._nativePannerNode.coneInnerAngle=l}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(l){this._nativePannerNode.coneOuterAngle=l}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(l){this._nativePannerNode.coneOuterGain=l}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(l){this._nativePannerNode.distanceModel=l}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(l){this._nativePannerNode.maxDistance=l}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(l){this._nativePannerNode.panningModel=l}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(l){this._nativePannerNode.refDistance=l}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(l){this._nativePannerNode.rolloffFactor=l}},Kj=(n,e,t,s,r,o,i,a,l,u)=>()=>{const c=new WeakMap;let h=null;const d=async(p,f)=>{let m=null,g=o(p);const y={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},x={...y,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},w=Ds(g,f);if("bufferSize"in g)m=s(f,{...y,gain:1});else if(!w){const b={...x,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=r(f,b)}if(c.set(f,m===null?g:m),m!==null){if(h===null){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const D=new i(6,p.context.length,f.sampleRate),P=e(D,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});P.connect(D.destination),h=(async()=>{const F=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map(async(L,B)=>{const W=t(D,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:B===0?1:0});return await a(D,L,W.offset),W}));for(let L=0;L<6;L+=1)F[L].connect(P,0,L),F[L].start(0);return u(D)})()}const b=await h,S=s(f,{...y,gain:1});await l(p,f,S);const C=[];for(let D=0;D<b.numberOfChannels;D+=1)C.push(b.getChannelData(D));let k=[C[0][0],C[1][0],C[2][0]],N=[C[3][0],C[4][0],C[5][0]],_=s(f,{...y,gain:1}),E=r(f,{...x,orientationX:k[0],orientationY:k[1],orientationZ:k[2],positionX:N[0],positionY:N[1],positionZ:N[2]});S.connect(_).connect(E.inputs[0]),E.connect(m);for(let D=128;D<b.length;D+=128){const P=[C[0][D],C[1][D],C[2][D]],F=[C[3][D],C[4][D],C[5][D]];if(P.some((L,B)=>L!==k[B])||F.some((L,B)=>L!==N[B])){k=P,N=F;const L=D/f.sampleRate;_.gain.setValueAtTime(0,L),_=s(f,{...y,gain:0}),E=r(f,{...x,orientationX:k[0],orientationY:k[1],orientationZ:k[2],positionX:N[0],positionY:N[1],positionZ:N[2]}),_.gain.setValueAtTime(1,L),S.connect(_).connect(E.inputs[0]),E.connect(m)}}return m}return w?(await n(f,p.orientationX,g.orientationX),await n(f,p.orientationY,g.orientationY),await n(f,p.orientationZ,g.orientationZ),await n(f,p.positionX,g.positionX),await n(f,p.positionY,g.positionY),await n(f,p.positionZ,g.positionZ)):(await a(f,p.orientationX,g.orientationX),await a(f,p.orientationY,g.orientationY),await a(f,p.orientationZ,g.orientationZ),await a(f,p.positionX,g.positionX),await a(f,p.positionY,g.positionY),await a(f,p.positionZ,g.positionZ)),fh(g)?await l(p,f,g.inputs[0]):await l(p,f,g),g};return{render(p,f){const m=c.get(f);return m!==void 0?Promise.resolve(m):d(p,f)}}},Xj={disableNormalization:!1},Yj=(n,e,t,s)=>class ND{constructor(o,i){const a=e(o),l=s({...Xj,...i}),u=n(a,l);return t.add(u),u}static[Symbol.hasInstance](o){return o!==null&&typeof o=="object"&&Object.getPrototypeOf(o)===ND.prototype||t.has(o)}},Qj=(n,e)=>(t,s,r)=>(n(s).replay(r),e(s,t,r)),Zj=(n,e,t)=>async(s,r,o)=>{const i=n(s);await Promise.all(i.activeInputs.map((a,l)=>Array.from(a).map(async([u,c])=>{const d=await e(u).render(u,r),p=s.context.destination;!t(u)&&(s!==p||!t(s))&&d.connect(o,c,l)})).reduce((a,l)=>[...a,...l],[]))},Jj=(n,e,t)=>async(s,r,o)=>{const i=e(s);await Promise.all(Array.from(i.activeInputs).map(async([a,l])=>{const c=await n(a).render(a,r);t(a)||c.connect(o,l)}))},e6=(n,e,t,s)=>r=>n(Hp,()=>Hp(r))?Promise.resolve(n(s,s)).then(o=>{if(!o){const i=t(r,512,0,1);r.oncomplete=()=>{i.onaudioprocess=null,i.disconnect()},i.onaudioprocess=()=>r.currentTime,i.connect(r.destination)}return r.startRendering()}):new Promise(o=>{const i=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});r.oncomplete=a=>{i.disconnect(),o(a.renderedBuffer)},i.connect(r.destination),r.startRendering()}),t6=n=>(e,t)=>{n.set(e,t)},n6=n=>(e,t)=>n.set(e,t),s6=(n,e,t,s,r,o,i,a)=>(l,u)=>t(l).render(l,u).then(()=>Promise.all(Array.from(s(u)).map(c=>t(c).render(c,u)))).then(()=>r(u)).then(c=>(typeof c.copyFromChannel!="function"?(i(c),i2(c)):e(o,()=>o(c))||a(c),n.add(c),c)),r6={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},o6=(n,e,t,s,r,o)=>class extends n{constructor(a,l){const u=r(a),c={...r6,...l},h=t(u,c),d=o(u),p=d?s():null;super(a,!1,h,p),this._pan=e(this,d,h.pan)}get pan(){return this._pan}},i6=(n,e,t,s,r)=>()=>{const o=new WeakMap,i=async(a,l)=>{let u=t(a);const c=Ds(u,l);if(!c){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=e(l,h)}return o.set(l,u),c?await n(l,a.pan,u.pan):await s(l,a.pan,u.pan),fh(u)?await r(a,l,u.inputs[0]):await r(a,l,u),u};return{render(a,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):i(a,l)}}},a6=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},l6=(n,e)=>async()=>{if(n===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new e(1,128,44100),r=URL.createObjectURL(t);let o=!1,i=!1;try{await s.audioWorklet.addModule(r);const a=new n(s,"a",{numberOfOutputs:0}),l=s.createOscillator();a.port.onmessage=()=>o=!0,a.onprocessorerror=()=>i=!0,l.connect(a),l.start(0),await s.startRendering(),await new Promise(u=>setTimeout(u))}catch{}finally{URL.revokeObjectURL(r)}return o&&!i},u6=(n,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(r=>{t.oncomplete=()=>{s.disconnect(),r(t.currentTime!==0)},t.startRendering()})},c6=()=>new DOMException("","UnknownError"),h6={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},d6=(n,e,t,s,r,o,i)=>class extends n{constructor(l,u){const c=r(l),h={...h6,...u},d=t(c,h),f=o(c)?s():null;super(l,!0,d,f),this._isCurveNullified=!1,this._nativeWaveShaperNode=d,i(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(l){if(l===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(l.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=l}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(l){this._nativeWaveShaperNode.oversample=l}},p6=(n,e,t)=>()=>{const s=new WeakMap,r=async(o,i)=>{let a=e(o);if(!Ds(a,i)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=n(i,u)}return s.set(i,a),fh(a)?await t(o,i,a.inputs[0]):await t(o,i,a),a};return{render(o,i){const a=s.get(i);return a!==void 0?Promise.resolve(a):r(o,i)}}},f6=()=>typeof window>"u"?null:window,m6=(n,e)=>t=>{t.copyFromChannel=(s,r,o=0)=>{const i=n(o),a=n(r);if(a>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(a),c=s.length;for(let h=i<0?-i:0;h+i<l&&h<c;h+=1)s[h]=u[h+i]},t.copyToChannel=(s,r,o=0)=>{const i=n(o),a=n(r);if(a>=t.numberOfChannels)throw e();const l=t.length,u=t.getChannelData(a),c=s.length;for(let h=i<0?-i:0;h+i<l&&h<c;h+=1)u[h+i]=s[h]}},g6=n=>e=>{e.copyFromChannel=(t=>(s,r,o=0)=>{const i=n(o),a=n(r);if(i<e.length)return t.call(e,s,a,i)})(e.copyFromChannel),e.copyToChannel=(t=>(s,r,o=0)=>{const i=n(o),a=n(r);if(i<e.length)return t.call(e,s,a,i)})(e.copyToChannel)},y6=n=>(e,t)=>{const s=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=s),n(e,"buffer",r=>()=>{const o=r.call(e);return o===s?null:o},r=>o=>r.call(e,o===null?s:o))},x6=(n,e)=>(t,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const r=t.createBufferSource();e(s,()=>{const a=s.numberOfInputs;for(let l=0;l<a;l+=1)r.connect(s,0,l)},()=>r.disconnect(s))},TD=(n,e,t)=>n.copyFromChannel===void 0?n.getChannelData(t)[0]:(n.copyFromChannel(e,t),e[0]),$D=n=>{if(n===null)return!1;const e=n.length;return e%2!==0?n[Math.floor(e/2)]!==0:n[e/2-1]+n[e/2]!==0},Nf=(n,e,t,s)=>{let r=n;for(;!r.hasOwnProperty(e);)r=Object.getPrototypeOf(r);const{get:o,set:i}=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(n,e,{get:t(o),set:s(i)})},w6=n=>({...n,outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),v6=n=>({...n,channelCount:n.numberOfOutputs}),b6=n=>{const{imag:e,real:t}=n;return e===void 0?t===void 0?{...n,imag:[0,0],real:[0,0]}:{...n,imag:Array.from(t,()=>0),real:t}:t===void 0?{...n,imag:e,real:Array.from(e,()=>0)}:{...n,imag:e,real:t}},_D=(n,e,t)=>{try{n.setValueAtTime(e,t)}catch(s){if(s.code!==9)throw s;_D(n,e,t+1e-7)}},S6=n=>{const e=n.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},C6=n=>{const e=n.createBufferSource(),t=n.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},k6=n=>{const e=n.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},h2=n=>{const e=n.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},ED=n=>{const e=n.createBuffer(1,1,44100),t=n.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},d2=n=>{const e=n.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},I6=n=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(n)}finally{e.close(),t.close()}},N6=n=>{n.start=(e=>(t=0,s=0,r)=>{const o=n.buffer,i=o===null?s:Math.min(o.duration,s);o!==null&&i>o.duration-.5/n.context.sampleRate?e.call(n,t,0,0):e.call(n,t,i,r)})(n.start)},RD=(n,e)=>{const t=e.createGain();n.connect(t);const s=(r=>()=>{r.call(n,t),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),mh(n,t),n.stop=(r=>{let o=!1;return(i=0)=>{if(o)try{r.call(n,i)}catch{t.gain.setValueAtTime(0,i)}else r.call(n,i),o=!0}})(n.stop)},gh=(n,e)=>t=>{const s={value:n};return Object.defineProperties(t,{currentTarget:s,target:s}),typeof e=="function"?e.call(n,t):e.handleEvent.call(n,t)},T6=qU(Iu),$6=JU(Iu),_6=hH(ex),AD=new WeakMap,E6=_H(AD),Ko=BG(new Map,new WeakMap),bi=f6(),DD=oj(Ko,Ti),p2=$H(Ws),gs=Zj(Ws,p2,ou),R6=rG(DD,Zt,gs),qt=AH(J0),oa=Aj(bi),Ft=XH(oa),OD=new WeakMap,PD=bH(gh),Tf=uj(bi),f2=HH(Tf),m2=jH(bi),FD=qH(bi),jp=hj(bi),_n=_G(KU(uD),ZU(T6,$6,jy,_6,qy,Ws,E6,vf,Zt,Iu,Hi,ou,cy),Ko,VH(Qb,qy,Ws,Zt,Gp,Hi),Ti,tx,Qs,aH(jy,Qb,Ws,Zt,Gp,qt,Hi,Ft),fH(OD,Ws,zo),PD,qt,f2,m2,FD,Ft,jp),A6=sG(_n,R6,Ti,DD,qt,Ft),g2=new WeakSet,n$=ij(bi),LD=eH(new Uint32Array(1)),y2=m6(LD,Ti),x2=g6(LD),MD=iG(g2,Ko,Qs,n$,oa,a6(n$),y2,x2),nx=eG(gr),zD=Jj(p2,Sf,ou),$i=KG(zD),yh=lj(nx,Ko,S6,C6,k6,h2,ED,d2,N6,y6(Nf),RD),_i=Qj(EH(Sf),zD),D6=uG($i,yh,Zt,_i,gs),Xo=EG(XU(cD),OD,o2,RG,BU,WU,UU,GU,HU,Kb,aD,Tf,_D),O6=lG(_n,D6,Xo,ss,yh,qt,Ft,gh),P6=xG(_n,wG,Ti,ss,cj(gr,Nf),qt,Ft,gs),F6=VG($i,kD,Zt,_i,gs),Nu=n6(AD),L6=zG(_n,Xo,F6,tx,kD,qt,Ft,Nu),al=sj(Iu,m2),M6=x6(ss,al),ll=xj(Tf,M6),z6=GG(ll,Zt,gs),V6=UG(_n,z6,ll,qt,Ft),B6=qG(kf,Zt,gs),W6=jG(_n,B6,kf,qt,Ft,v6),U6=bj(nx,yh,gr,al),xh=vj(nx,Ko,U6,h2,d2),G6=JG($i,xh,Zt,_i,gs),H6=ZG(_n,Xo,G6,xh,qt,Ft,gh),VD=Sj(Qs,Nf),j6=sH(VD,Zt,gs),q6=nH(_n,j6,VD,qt,Ft,Nu),K6=cH($i,ID,Zt,_i,gs),X6=uH(_n,Xo,K6,ID,qt,Ft,Nu),BD=Cj(Qs),Y6=xH($i,BD,Zt,_i,gs),Q6=yH(_n,Xo,Y6,BD,Qs,qt,Ft,Nu),Z6=NH($i,gr,Zt,_i,gs),J6=IH(_n,Xo,Z6,gr,qt,Ft),eq=Tj(tx,ss,If,Qs),sx=e6(Ko,gr,If,u6(gr,oa)),tq=zH(yh,Zt,oa,gs,sx),nq=kj(eq),sq=LH(_n,nq,tq,qt,Ft,Nu),rq=vG(Xo,ll,xh,If,Qs,TD,Ft,Nf),WD=new WeakMap,oq=nj(P6,rq,PD,Ft,WD,gh),UD=Dj(nx,Ko,h2,ED,d2,RD),iq=Hj($i,UD,Zt,_i,gs),aq=Gj(_n,Xo,UD,iq,qt,Ft,gh),GD=YG(yh),lq=Vj(GD,ss,gr,$D,al),rx=zj(GD,ss,lq,$D,al,Tf,Nf),uq=Pj(jy,ss,ll,gr,If,rx,Qs,qy,TD,al),HD=Oj(uq),cq=Kj($i,ll,xh,gr,HD,Zt,oa,_i,gs,sx),hq=qj(_n,Xo,HD,cq,qt,Ft,Nu),dq=Fj(Ti),pq=Yj(dq,qt,new WeakSet,b6),fq=Mj(ll,kf,gr,rx,Qs,al),jD=Lj(fq,Qs),mq=i6($i,jD,Zt,_i,gs),gq=o6(_n,Xo,jD,mq,qt,Ft),yq=p6(rx,Zt,gs),xq=d6(_n,ss,rx,yq,qt,Ft,Nu),qD=YH(bi),w2=SH(bi),KD=new WeakMap,wq=DH(KD,oa),vq=qD?QU(Ko,Qs,vH(bi),w2,CH(jU),qt,wq,Ft,jp,new WeakMap,new WeakMap,l6(jp,oa),bi):void 0,bq=KH(f2,Ft),Sq=iH(g2,Ko,oH,wH,new WeakSet,qt,bq,Gy,Hp,y2,x2),XD=LG(vq,A6,MD,O6,L6,V6,W6,H6,q6,Sq,X6,Q6,J6,sq,oq,aq,hq,pq,gq,xq),Cq=QH(_n,$j,qt,Ft),kq=JH(_n,_j,qt,Ft),Iq=ej(_n,Ej,qt,Ft),Nq=Rj(ss,Ft),Tq=tj(_n,Nq,qt),$q=yG(XD,ss,Qs,c6,Cq,kq,Iq,Tq,Tf),v2=OH(WD),_q=tG(v2),YD=XG(Ti),Eq=dH(v2),QD=mH(Ti),ZD=new WeakMap,Rq=TH(ZD,zo),Aq=yj(YD,Ti,ss,ll,kf,xh,gr,If,Qs,QD,w2,Rq,al),Dq=pj(ss,Aq,gr,Qs,al),Oq=FG($i,YD,yh,ll,kf,xh,gr,Eq,QD,w2,Zt,jp,oa,_i,gs,sx),Pq=RH(KD),Fq=t6(ZD),s$=qD?DG(_q,_n,Xo,Oq,Dq,Ws,Pq,qt,Ft,jp,w6,Fq,I6,gh):void 0,Lq=rH(Qs,oa),Mq=s6(g2,Ko,p2,v2,sx,Gy,y2,x2),zq=Wj(XD,Ko,ss,Lq,Mq),Vq=BH(J0,f2),Bq=WH(r2,m2),Wq=UH(o2,FD),Uq=GH(J0,Ft);function io(n){return n===void 0}function mt(n){return n!==void 0}function Gq(n){return typeof n=="function"}function Ua(n){return typeof n=="number"}function ql(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function Hq(n){return typeof n=="boolean"}function Rr(n){return Array.isArray(n)}function ea(n){return typeof n=="string"}function Pg(n){return ea(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function tt(n,e){if(!n)throw new Error(e)}function Ga(n,e,t=1/0){if(!(e<=n&&n<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${n}`)}function JD(n){!n.isOffline&&n.state!=="running"&&ox('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let e3=!1,r$=!1;function o$(n){e3=n}function jq(n){io(n)&&e3&&!r$&&(r$=!0,ox("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let t3=console;function qq(...n){t3.log(...n)}function ox(...n){t3.warn(...n)}function Kq(n){return new $q(n)}function Xq(n,e,t){return new zq(n,e,t)}const Ir=typeof self=="object"?self:null,Yq=Ir&&(Ir.hasOwnProperty("AudioContext")||Ir.hasOwnProperty("webkitAudioContext"));function Qq(n,e,t){return tt(mt(s$),"AudioWorkletNode only works in a secure context (https or localhost)"),new(n instanceof(Ir==null?void 0:Ir.BaseAudioContext)?Ir==null?void 0:Ir.AudioWorkletNode:s$)(n,e,t)}function Yo(n,e,t,s){var r=arguments.length,o=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(n,e,t,s);else for(var a=n.length-1;a>=0;a--)(i=n[a])&&(o=(r<3?i(o):r>3?i(e,t,o):i(e,t))||o);return r>3&&o&&Object.defineProperty(e,t,o),o}function Pn(n,e,t,s){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function a(c){try{u(s.next(c))}catch(h){i(h)}}function l(c){try{u(s.throw(c))}catch(h){i(h)}}function u(c){c.done?o(c.value):r(c.value).then(a,l)}u((s=s.apply(n,e||[])).next())})}class Zq{constructor(e,t,s,r){this._callback=e,this._type=t,this._minimumUpdateInterval=Math.max(128/(r||44100),.001),this.updateInterval=s,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),s=new Worker(t);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){var t;this._updateInterval=Math.max(e,this._minimumUpdateInterval),this._type==="worker"&&((t=this._worker)===null||t===void 0||t.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function iu(n){return Wq(n)}function Fa(n){return Bq(n)}function hy(n){return Uq(n)}function rc(n){return Vq(n)}function Jq(n){return n instanceof MD}function e5(n,e){return n==="value"||iu(e)||Fa(e)||Jq(e)}function Kl(n,...e){if(!e.length)return n;const t=e.shift();if(ql(n)&&ql(t))for(const s in t)e5(s,t[s])?n[s]=t[s]:ql(t[s])?(n[s]||Object.assign(n,{[s]:{}}),Kl(n[s],t[s])):Object.assign(n,{[s]:t[s]});return Kl(n,...e)}function t5(n,e){return n.length===e.length&&n.every((t,s)=>e[s]===t)}function at(n,e,t=[],s){const r={},o=Array.from(e);if(ql(o[0])&&s&&!Reflect.has(o[0],s)&&(Object.keys(o[0]).some(a=>Reflect.has(n,a))||(Kl(r,{[s]:o[0]}),t.splice(t.indexOf(s),1),o.shift())),o.length===1&&ql(o[0]))Kl(r,o[0]);else for(let i=0;i<t.length;i++)mt(o[i])&&(r[t[i]]=o[i]);return Kl(n,r)}function n5(n){return n.constructor.getDefaults()}function Rc(n,e){return io(n)?e:n}function nS(n,e){return e.forEach(t=>{Reflect.has(n,t)&&delete n[t]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class ia{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||Ir&&this.toString()===Ir.TONE_DEBUG_CLASS)&&qq(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}ia.version=iD;const b2=1e-6;function qc(n,e){return n>e+b2}function sS(n,e){return qc(n,e)||$o(n,e)}function Qy(n,e){return n+b2<e}function $o(n,e){return Math.abs(n-e)<b2}function s5(n,e,t){return Math.max(Math.min(n,t),e)}class ao extends ia{constructor(){super(),this.name="Timeline",this._timeline=[];const e=at(ao.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(tt(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];tt(sS(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const s=this._search(e,t);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const s=this._search(e,t);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const s=this._search(e);return s-1>=0?this._timeline[s-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if($o(this._timeline[t].time,e)){for(let s=t;s>=0&&$o(this._timeline[s].time,e);s--)t=s;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&sS(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let s=0;const r=this._timeline.length;let o=r;if(r>0&&this._timeline[r-1][t]<=e)return r-1;for(;s<o;){let i=Math.floor(s+(o-s)/2);const a=this._timeline[i],l=this._timeline[i+1];if($o(a[t],e)){for(let u=i;u<this._timeline.length;u++){const c=this._timeline[u];if($o(c[t],e))i=u;else break}return i}else{if(Qy(a[t],e)&&qc(l[t],e))return i;qc(a[t],e)?o=i:s=i+1}}return-1}_iterate(e,t=0,s=this._timeline.length-1){this._timeline.slice(t,s+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const s=this._search(e);return s!==-1&&this._iterate(t,0,s),this}forEachAfter(e,t){const s=this._search(e);return this._iterate(t,s+1),this}forEachBetween(e,t,s){let r=this._search(e),o=this._search(t);return r!==-1&&o!==-1?(this._timeline[r].time!==e&&(r+=1),this._timeline[o].time===t&&(o-=1),this._iterate(s,r,o)):r===-1&&this._iterate(s,0,o),this}forEachFrom(e,t){let s=this._search(e);for(;s>=0&&this._timeline[s].time>=e;)s--;return this._iterate(t,s+1),this}forEachAtTime(e,t){const s=this._search(e);if(s!==-1&&$o(this._timeline[s].time,e)){let r=s;for(let o=s;o>=0&&$o(this._timeline[o].time,e);o--)r=o;this._iterate(o=>{t(o)},r,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const n3=[];function ix(n){n3.push(n)}function r5(n){n3.forEach(e=>e(n))}const s3=[];function ax(n){s3.push(n)}function o5(n){s3.forEach(e=>e(n))}class $f extends ia{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(r=>{io(this._events)&&(this._events={}),this._events.hasOwnProperty(r)||(this._events[r]=[]),this._events[r].push(t)}),this}once(e,t){const s=(...r)=>{t(...r),this.off(e,s)};return this.on(e,s),this}off(e,t){return e.split(/\W+/).forEach(r=>{if(io(this._events)&&(this._events={}),this._events.hasOwnProperty(r))if(io(t))this._events[r]=[];else{const o=this._events[r];for(let i=o.length-1;i>=0;i--)o[i]===t&&o.splice(i,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const s=this._events[e].slice(0);for(let r=0,o=s.length;r<o;r++)s[r].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const s=Object.getOwnPropertyDescriptor($f.prototype,t);Object.defineProperty(e.prototype,t,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class r3 extends $f{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Tu extends r3{constructor(){var e,t;super(),this.name="Context",this._constants=new Map,this._timeouts=new ao,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const s=at(Tu.getDefaults(),arguments,["context"]);s.context?(this._context=s.context,this._latencyHint=((e=arguments[0])===null||e===void 0?void 0:e.latencyHint)||""):(this._context=Kq({latencyHint:s.latencyHint}),this._latencyHint=s.latencyHint),this._ticker=new Zq(this.emit.bind(this,"tick"),s.clockSource,s.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((t=arguments[0])===null||t===void 0)&&t.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=s.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(r5(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,s){return this._context.createBuffer(e,t,s)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,s){return this._context.createPeriodicWave(e,t,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return tt(rc(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return tt(rc(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return tt(rc(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){tt(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){tt(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){tt(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){tt(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return Qq(this.rawContext,e,t)}addAudioWorkletModule(e){return Pn(this,void 0,void 0,function*(){tt(mt(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(e)),yield this._workletPromise})}workletsAreReady(){return Pn(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get lookAhead(){return this._lookAhead}set lookAhead(e){this._lookAhead=e,this.updateInterval=e?e/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return rc(this._context)?this._context.resume():Promise.resolve()}close(){return Pn(this,void 0,void 0,function*(){rc(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&o5(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),s=t.getChannelData(0);for(let o=0;o<s.length;o++)s[o]=e;const r=this._context.createBufferSource();return r.channelCount=1,r.channelCountMode="explicit",r.buffer=t,r.loop=!0,r.start(0),this._constants.set(e,r),r}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this.close(),this}_timeoutLoop(){const e=this.now();this._timeouts.forEachBefore(e,t=>{t.callback(),this._timeouts.remove(t)})}setTimeout(e,t){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:s+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const s=++this._timeoutIds,r=()=>{const o=this.now();this._timeouts.add({callback:()=>{e(),r()},id:s,time:o+t})};return r(),s}}class i5 extends r3{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,s){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e){return Pn(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function bn(n,e){Rr(e)?e.forEach(t=>bn(n,t)):Object.defineProperty(n,e,{enumerable:!0,writable:!1})}function o3(n,e){Rr(e)?e.forEach(t=>o3(n,t)):Object.defineProperty(n,e,{writable:!0})}const Dt=()=>{};class tn extends ia{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Dt;const e=at(tn.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,ea(e.url)?this.load(e.url).catch(e.onerror):e.url&&this.set(e.url)}static getDefaults(){return{onerror:Dt,onload:Dt,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Ro().sampleRate}set(e){return e instanceof tn?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return Pn(this,void 0,void 0,function*(){const t=tn.load(e).then(s=>{this.set(s),this.onload(this)});tn.downloads.push(t);try{yield t}finally{const s=tn.downloads.indexOf(t);tn.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=Rr(e)&&e[0].length>0,s=t?e.length:1,r=t?e[0].length:e.length,o=Ro(),i=o.createBuffer(s,r,o.sampleRate),a=!t&&s===1?[e]:e;for(let l=0;l<s;l++)i.copyToChannel(a[l],l);return this._buffer=i,this}toMono(e){if(Ua(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const s=this.numberOfChannels;for(let r=0;r<s;r++){const o=this.toArray(r);for(let i=0;i<o.length;i++)t[i]+=o[i]}t=t.map(r=>r/s),this.fromArray(t)}return this}toArray(e){if(Ua(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let s=0;s<this.numberOfChannels;s++)t[s]=this.getChannelData(s);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){tt(this.loaded,"Buffer is not loaded");const s=Math.floor(e*this.sampleRate),r=Math.floor(t*this.sampleRate);tt(s<r,"The start time must be less than the end time");const o=r-s,i=Ro().createBuffer(this.numberOfChannels,o,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)i.copyToChannel(this.getChannelData(a).subarray(s,r),a);return new tn(i)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new tn().fromArray(e)}static fromUrl(e){return Pn(this,void 0,void 0,function*(){return yield new tn().load(e)})}static load(e){return Pn(this,void 0,void 0,function*(){const t=tn.baseUrl===""||tn.baseUrl.endsWith("/")?tn.baseUrl:tn.baseUrl+"/",s=yield fetch(t+e);if(!s.ok)throw new Error(`could not load url: ${e}`);const r=yield s.arrayBuffer();return yield Ro().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),s=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return Pn(this,void 0,void 0,function*(){for(yield Promise.resolve();tn.downloads.length;)yield tn.downloads[0]})}}tn.baseUrl="";tn.downloads=[];class S2 extends Tu{constructor(){super({clockSource:"offline",context:hy(arguments[0])?arguments[0]:Xq(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:hy(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=hy(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return Pn(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const s=Math.floor(this.sampleRate/128);e&&t%s===0&&(yield new Promise(r=>setTimeout(r,1)))}})}render(){return Pn(this,arguments,void 0,function*(e=!0){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new tn(t)})}close(){return Promise.resolve()}}const i3=new i5;let zl=i3;function Ro(){return zl===i3&&Yq&&C2(new Tu),zl}function C2(n,e=!1){e&&zl.dispose(),rc(n)?zl=new Tu(n):hy(n)?zl=new S2(n):zl=n}function k2(){return zl.resume()}if(Ir&&!Ir.TONE_SILENCE_LOGGING){const e=` * Tone.js v${iD} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function a5(n){return Math.pow(10,n/20)}function l5(n){return 20*(Math.log(n)/Math.LN10)}function a3(n){return Math.pow(2,n/12)}let lx=440;function u5(){return lx}function c5(n){lx=n}function Vl(n){return Math.round(l3(n))}function l3(n){return 69+12*Math.log2(n/lx)}function u3(n){return lx*Math.pow(2,(n-69)/12)}class I2 extends ia{constructor(e,t,s){super(),this.defaultUnits="s",this._val=t,this._units=s,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const s=parseInt(e,10),r=t==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*r:this._beatsToUnits(4/s)*r},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,s)=>{let r=0;return e&&e!=="0"&&(r+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(r+=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(r+=this._beatsToUnits(parseFloat(s)/4)),r},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof I2&&this.fromType(this._val),io(this._val))return this._noArg();if(ea(this._val)&&io(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(ql(this._val)){let e=0;for(const t in this._val)if(mt(this._val[t])){const s=this._val[t],r=new this.constructor(this.context,t).valueOf()*s;e+=r}return e}if(mt(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return ea(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Ao extends I2{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new Ao(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const s=new this.constructor(this.context,e).valueOf(),r=this.valueOf(),a=Math.round(r/s)*s-r;return r+a*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let o=1;o<9;o++){const i=Math.pow(2,o);t.push(i+"n."),t.push(i+"n"),t.push(i+"t")}t.push("0");let s=t[0],r=new Ao(this.context,t[0]).toSeconds();return t.forEach(o=>{const i=new Ao(this.context,o).toSeconds();Math.abs(i-e)<Math.abs(r-e)&&(s=o,r=i)}),s}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const s=Math.floor(t/this._getTimeSignature());let r=t%1*4;t=Math.floor(t)%this._getTimeSignature();const o=r.toString();return o.length>3&&(r=parseFloat(parseFloat(o).toFixed(3))),[s,t,r].join(":")}toTicks(){const e=this._beatsToUnits(1);return this.valueOf()/e*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Vl(this.toFrequency())}_now(){return this.context.now()}}class $r extends Ao{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return u5()}static set A4(e){c5(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:$r.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(e,t){const r=h5[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?r:$r.mtof(r)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,s){let r=1;return e&&e!=="0"&&(r*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(r*=this._beatsToUnits(parseFloat(t))),s&&s!=="0"&&(r*=this._beatsToUnits(parseFloat(s)/4)),r}}})}transpose(e){return new $r(this.context,this.valueOf()*a3(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return Vl(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/$r.A4);let s=Math.round(12*t)+57;const r=Math.floor(s/12);return r<0&&(s+=-12*r),d5[s%12]+r.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return u3(e)}static ftom(e){return Vl(e)}}const h5={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},d5=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class kp extends Ao{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class fr extends ia{constructor(){super();const e=at(fr.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:Ro()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return jq(e),new Ao(this.context,e).toSeconds()}toFrequency(e){return new $r(this.context,e).toFrequency()}toTicks(e){return new kp(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(s=>{io(e[s])&&delete t[s]}),t}get(){const e=n5(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const s=this[t];mt(s)&&mt(s.value)&&mt(s.setValueAtTime)?e[t]=s.value:s instanceof fr?e[t]=s._getPartialProperties(e[t]):Rr(s)||Ua(s)||ea(s)||Hq(s)?e[t]=s:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&mt(this[t])&&(this[t]&&mt(this[t].value)&&mt(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof fr?this[t].set(e[t]):this[t]=e[t])}),this}}class N2 extends ao{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,s){return Ga(t,0),this.add(Object.assign({},s,{state:e,time:t})),this}getLastState(e,t){const s=this._search(t);for(let r=s;r>=0;r--){const o=this._timeline[r];if(o.state===e)return o}}getNextState(e,t){const s=this._search(t);if(s!==-1)for(let r=s;r<this._timeline.length;r++){const o=this._timeline[r];if(o.state===e)return o}}}class un extends fr{constructor(){const e=at(un.getDefaults(),arguments,["param","units","convert"]);for(super(e),this.name="Param",this.overridden=!1,this._minOutput=1e-7,tt(mt(e.param)&&(iu(e.param)||e.param instanceof un),"param must be an AudioParam");!iu(e.param);)e.param=e.param._param;this._swappable=mt(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new ao(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,mt(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(fr.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return mt(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return mt(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return mt(this.maxValue)&&mt(this.minValue)&&Ga(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?a5(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?l5(e):e}setValueAtTime(e,t){const s=this.toSeconds(t),r=this._fromType(e);return tt(isFinite(r)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(r),this.log(this.units,"setValueAtTime",e,s),this._events.add({time:s,type:"setValueAtTime",value:r}),this._param.setValueAtTime(r,s),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),s=this._events.getAfter(t),r=this._events.get(t);let o=this._initialValue;if(r===null)o=this._initialValue;else if(r.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const i=this._events.getBefore(r.time);let a;i===null?a=this._initialValue:a=i.value,r.type==="setTargetAtTime"&&(o=this._exponentialApproach(r.time,a,r.value,r.constant,t))}else if(s===null)o=r.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let i=r.value;if(r.type==="setTargetAtTime"){const a=this._events.getBefore(r.time);a===null?i=this._initialValue:i=a.value}s.type==="linearRampToValueAtTime"?o=this._linearInterpolate(r.time,i,s.time,s.value,t):o=this._exponentialInterpolate(r.time,i,s.time,s.value,t)}else o=r.value;return this._toType(o)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const s=this._fromType(e),r=this.toSeconds(t);return tt(isFinite(s)&&isFinite(r),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this._events.add({time:r,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",e,r),this._param.linearRampToValueAtTime(s,r),this}exponentialRampToValueAtTime(e,t){let s=this._fromType(e);s=$o(s,0)?this._minOutput:s,this._assertRange(s);const r=this.toSeconds(t);return tt(isFinite(s)&&isFinite(r),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:r,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",e,r),this._param.exponentialRampToValueAtTime(s,r),this}exponentialRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(e,s+this.toSeconds(t)),this}linearRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(e,s+this.toSeconds(t)),this}targetRampTo(e,t,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(e,s,t),this}exponentialApproachValueAtTime(e,t,s){t=this.toSeconds(t),s=this.toSeconds(s);const r=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(e,t,r),this.cancelAndHoldAtTime(t+s*.9),this.linearRampToValueAtTime(e,t+s),this}setTargetAtTime(e,t,s){const r=this._fromType(e);tt(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const o=this.toSeconds(t);return this._assertRange(r),tt(isFinite(r)&&isFinite(o),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:s,time:o,type:"setTargetAtTime",value:r}),this.log(this.units,"setTargetAtTime",e,o,s),this._param.setTargetAtTime(r,o,s),this}setValueCurveAtTime(e,t,s,r=1){s=this.toSeconds(s),t=this.toSeconds(t);const o=this._fromType(e[0])*r;this.setValueAtTime(this._toType(o),t);const i=s/(e.length-1);for(let a=1;a<e.length;a++){const l=this._fromType(e[a])*r;this.linearRampToValueAtTime(this._toType(l),t+a*i)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return tt(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),s=this._fromType(this.getValueAtTime(t));tt(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+s);const r=this._events.get(t),o=this._events.getAfter(t);return r&&$o(r.time,t)?o?(this._param.cancelScheduledValues(o.time),this._events.cancel(o.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):o&&(this._param.cancelScheduledValues(o.time),this._events.cancel(o.time),o.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),t):o.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),t)),this._events.add({time:t,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,t),this}rampTo(e,t=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,s):this.linearRampTo(e,t,s),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const s=this._events.get(t);if(s&&s.type==="setTargetAtTime"){const r=this._events.getAfter(s.time),o=r?r.time:t+2,i=(o-t)/10;for(let a=t;a<o;a+=i)e.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,r=>{r.type==="cancelScheduledValues"?e.cancelScheduledValues(r.time):r.type==="setTargetAtTime"?e.setTargetAtTime(r.value,r.time,r.constant):e[r.type](r.value,r.time)}),this}setParam(e){tt(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,s,r,o){return s+(t-s)*Math.exp(-(o-e)/r)}_linearInterpolate(e,t,s,r,o){return t+(r-t)*((o-e)/(s-e))}_exponentialInterpolate(e,t,s,r,o){return t*Math.pow(r/t,(o-e)/(s-e))}}class pt extends fr{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return mt(this.input)?iu(this.input)||this.input instanceof un?1:this.input.numberOfInputs:0}get numberOfOutputs(){return mt(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return mt(e)&&(e instanceof pt||Fa(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(s=>{s.channelCount=e.channelCount,s.channelCountMode=e.channelCountMode,s.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();tt(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,s=0){return wh(this,e,t,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return ox("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,s=0){return p5(this,e,t,s),this}chain(...e){return rS(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),mt(this.input)&&(this.input instanceof pt?this.input.dispose():Fa(this.input)&&this.input.disconnect()),mt(this.output)&&(this.output instanceof pt?this.output.dispose():Fa(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function rS(...n){const e=n.shift();n.reduce((t,s)=>(t instanceof pt?t.connect(s):Fa(t)&&wh(t,s),s),e)}function wh(n,e,t=0,s=0){for(tt(mt(n),"Cannot connect from undefined node"),tt(mt(e),"Cannot connect to undefined node"),(e instanceof pt||Fa(e))&&tt(e.numberOfInputs>0,"Cannot connect to node with no inputs"),tt(n.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof pt||e instanceof un;)mt(e.input)&&(e=e.input);for(;n instanceof pt;)mt(n.output)&&(n=n.output);iu(e)?n.connect(e,t):n.connect(e,t,s)}function p5(n,e,t=0,s=0){if(mt(e))for(;e instanceof pt;)e=e.input;for(;!Fa(n);)mt(n.output)&&(n=n.output);iu(e)?n.disconnect(e,t):Fa(e)?n.disconnect(e,t,s):n.disconnect()}class _s extends pt{constructor(){const e=at(_s.getDefaults(),arguments,["gain","units"]);super(e),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new un({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),bn(this,"gain")}static getDefaults(){return Object.assign(pt.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Kc extends pt{constructor(e){super(e),this.onended=Dt,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new _s({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const s=this.toSeconds(t);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(pt.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Dt})}_startGain(e,t=1){tt(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=e+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+s):this._gainNode.gain.exponentialApproachValueAtTime(t,e,s)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){tt(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.now()),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Dt&&(this.onended(this),this.onended=Dt,!this.context.isOffline)){const e=()=>this.dispose();typeof requestIdleCallback<"u"?requestIdleCallback(e):setTimeout(e,10)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),tt(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Dt,this}}class T2 extends Kc{constructor(){const e=at(T2.getDefaults(),arguments,["offset"]);super(e),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),wh(this._source,this._gainNode),this.offset=new un({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Kc.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class rs extends pt{constructor(){const e=at(rs.getDefaults(),arguments,["value","units"]);super(e),this.name="Signal",this.override=!0,this.output=this._constantSource=new T2({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(pt.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,s=0){return $2(this,e,t,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,s){return this._param.exponentialRampTo(e,t,s),this}linearRampTo(e,t,s){return this._param.linearRampTo(e,t,s),this}targetRampTo(e,t,s){return this._param.targetRampTo(e,t,s),this}exponentialApproachValueAtTime(e,t,s){return this._param.exponentialApproachValueAtTime(e,t,s),this}setTargetAtTime(e,t,s){return this._param.setTargetAtTime(e,t,s),this}setValueCurveAtTime(e,t,s,r){return this._param.setValueCurveAtTime(e,t,s,r),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,s){return this._param.rampTo(e,t,s),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function $2(n,e,t,s){(e instanceof un||iu(e)||e instanceof rs&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof rs&&(e.overridden=!0)),wh(n,e,t,s)}class _2 extends un{constructor(){const e=at(_2.getDefaults(),arguments,["value"]);super(e),this.name="TickParam",this._events=new ao(1/0),this._multiplier=1,this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(un.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,s){t=this.toSeconds(t),this.setRampPoint(t);const r=this._fromType(e),o=this._events.get(t),i=Math.round(Math.max(1/s,1));for(let a=0;a<=i;a++){const l=s*a+t,u=this._exponentialApproach(o.time,o.value,r,s,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}setValueAtTime(e,t){const s=this.toSeconds(t);super.setValueAtTime(e,t);const r=this._events.get(s),o=this._events.previousEvent(r),i=this._getTicksUntilEvent(o,s);return r.ticks=Math.max(i,0),this}linearRampToValueAtTime(e,t){const s=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const r=this._events.get(s),o=this._events.previousEvent(r),i=this._getTicksUntilEvent(o,s);return r.ticks=Math.max(i,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const s=this._fromType(e),r=this._events.get(t),o=Math.round(Math.max((t-r.time)*10,1)),i=(t-r.time)/o;for(let a=0;a<=o;a++){const l=i*a+r.time,u=this._exponentialInterpolate(r.time,r.value,t,s,l);this.linearRampToValueAtTime(this._toType(u),l)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(io(e.ticks)){const i=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(i,e.time)}const s=this._fromType(this.getValueAtTime(e.time));let r=this._fromType(this.getValueAtTime(t));const o=this._events.get(t);return o&&o.time===t&&o.type==="setValueAtTime"&&(r=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(s+r)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),s=this._events.get(t);return Math.max(this._getTicksUntilEvent(s,t),0)}getDurationOfTicks(e,t){const s=this.toSeconds(t),r=this.getTicksAtTime(t);return this.getTimeOfTick(r+e)-s}getTimeOfTick(e){const t=this._events.get(e,"ticks"),s=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&s&&s.type==="linearRampToValueAtTime"&&t.value!==s.value){const r=this._fromType(this.getValueAtTime(t.time)),i=(this._fromType(this.getValueAtTime(s.time))-r)/(s.time-t.time),a=Math.sqrt(Math.pow(r,2)-2*i*(t.ticks-e)),l=(-r+a)/i,u=(-r-a)/i;return(l>0?l:u)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const s=this.toSeconds(t),r=this.toSeconds(e),o=this.getTicksAtTime(s);return this.getTicksAtTime(s+r)-o}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class E2 extends rs{constructor(){const e=at(E2.getDefaults(),arguments,["value"]);super(e),this.name="TickSignal",this.input=this._param=new _2({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(rs.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class R2 extends fr{constructor(){const e=at(R2.getDefaults(),arguments,["frequency"]);super(e),this.name="TickSource",this._state=new N2,this._tickOffset=new ao,this._ticksAtTime=new ao,this._secondsAtTime=new ao,this.frequency=new E2({context:this.context,units:e.units,value:e.frequency}),bn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},fr.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const s=this.toSeconds(e);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),mt(t)&&this.setTicksAtTime(t,s),this._ticksAtTime.cancel(s),this._secondsAtTime.cancel(s)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const s=this._state.get(t);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t)),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),s=this._state.getLastState("stopped",t),r=this._ticksAtTime.get(t),o={state:"paused",time:t};this._state.add(o);let i=r||s,a=r?r.ticks:0,l=null;return this._state.forEachBetween(i.time,t+this.sampleTime,u=>{let c=i.time;const h=this._tickOffset.get(u.time);h&&h.time>=i.time&&(a=h.ticks,c=h.time),i.state==="started"&&u.state!=="started"&&(a+=this.frequency.getTicksAtTime(u.time)-this.frequency.getTicksAtTime(c),u.time!==o.time&&(l={state:u.state,time:u.time,ticks:a})),i=u}),this._state.remove(o),l&&this._ticksAtTime.add(l),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),s=this.frequency.timeToTicks(e,t);this.setTicksAtTime(s,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);const r=this._secondsAtTime.get(e);let o=r||t,i=r?r.seconds:0,a=null;return this._state.forEachBetween(o.time,e+this.sampleTime,l=>{let u=o.time;const c=this._tickOffset.get(l.time);c&&c.time>=o.time&&(i=c.seconds,u=c.time),o.state==="started"&&l.state!=="started"&&(i+=l.time-u,l.time!==s.time&&(a={state:l.state,time:l.time,seconds:i})),o=l}),this._state.remove(s),a&&this._secondsAtTime.add(a),i}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const s=this._tickOffset.get(t),r=this._state.get(t),o=Math.max(s.time,r.time),i=this.frequency.getTicksAtTime(o)+e-s.ticks;return this.frequency.getTimeOfTick(i)}forEachTickBetween(e,t,s){let r=this._state.get(e);this._state.forEachBetween(e,t,i=>{r&&r.state==="started"&&i.state!=="started"&&this.forEachTickBetween(Math.max(r.time,e),i.time-this.sampleTime,s),r=i});let o=null;if(r&&r.state==="started"){const i=Math.max(r.time,e),a=this.frequency.getTicksAtTime(i),l=this.frequency.getTicksAtTime(r.time),u=a-l;let c=Math.ceil(u)-u;c=$o(c,1)?0:c;let h=this.frequency.getTimeOfTick(a+c);for(;h<t;){try{s(h,Math.round(this.getTicksAtTime(h)))}catch(d){o=d;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(o)throw o;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class ux extends fr{constructor(){const e=at(ux.getDefaults(),arguments,["callback","frequency"]);super(e),this.name="Clock",this.callback=Dt,this._lastUpdate=0,this._state=new N2("stopped"),this._boundLoop=this._loop.bind(this),this.callback=e.callback,this._tickSource=new R2({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,bn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(fr.getDefaults(),{callback:Dt,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){JD(this.context);const s=this.toSeconds(e);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,t),s<this._lastUpdate&&this.emit("start",s,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const s=this.toSeconds(t),r=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(r+e,s)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,s=>{switch(s.state){case"started":const r=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,r);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(e,t,(s,r)=>{this.callback(s,r)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}$f.mixin(ux);class vh extends pt{constructor(){const e=at(vh.getDefaults(),arguments,["volume"]);super(e),this.name="Volume",this.input=this.output=new _s({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,bn(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(pt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class A2 extends pt{constructor(){const e=at(A2.getDefaults(),arguments);super(e),this.name="Destination",this.input=new vh({context:this.context}),this.output=new _s({context:this.context}),this.volume=this.input.volume,rS(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(pt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),rS(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}ix(n=>{n.destination=new A2({context:n})});ax(n=>{n.destination.dispose()});class f5 extends pt{constructor(){super(...arguments),this.name="Listener",this.positionX=new un({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new un({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new un({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new un({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new un({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new un({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new un({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new un({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new un({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(pt.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}ix(n=>{n.listener=new f5({context:n})});ax(n=>{n.listener.dispose()});class D2 extends ia{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=at(D2.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const s=e.urls[t];this.add(t,s,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Dt,onload:Dt,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return tt(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,s=Dt,r=Dt){return ea(t)?(this.baseUrl&&t.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(e.toString(),new tn(this.baseUrl+t,s,r))):this._buffers.set(e.toString(),new tn(t,s,r)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class Zy extends $r{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return Vl(super._frequencyToUnits(e))}_ticksToUnits(e){return Vl(super._ticksToUnits(e))}_beatsToUnits(e){return Vl(super._beatsToUnits(e))}_secondsToUnits(e){return Vl(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return u3(this.toMidi())}transpose(e){return new Zy(this.context,this.toMidi()+e)}}class Sc extends kp{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class m5 extends fr{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new ao,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;this._events.forEachBefore(e+this.anticipation,t=>{e-t.time<=this.expiration&&t.callback(),this._events.remove(t)}),this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}ix(n=>{n.draw=new m5({context:n})});ax(n=>{n.draw.dispose()});class g5 extends ia{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){tt(mt(e.time),"Events must have a time property"),tt(mt(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new y5(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const s of t)if(s.event===e){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let s,r=null;if(t>0)if(e.left.right===null)s=e.left,s.right=e.right,r=s;else{for(s=e.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,r=s.parent,s.left=e.left,s.right=e.right)}else if(e.right.left===null)s=e.right,s.left=e.left,r=s;else{for(s=e.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,r=s.parent,s.left=e.left,s.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=s:e.parent.right=s:this._setRoot(s),r&&this._rebalance(r)}e.dispose()}_rotateLeft(e){const t=e.parent,s=e.isLeftChild(),r=e.right;r&&(e.right=r.left,r.left=e),t!==null?s?t.left=r:t.right=r:this._setRoot(r)}_rotateRight(e){const t=e.parent,s=e.isLeftChild(),r=e.left;r&&(e.left=r.right,r.right=e),t!==null?s?t.left=r:t.right=r:this._setRoot(r)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let s=t[0];for(let r=1;r<t.length;r++)t[r].low>s.low&&(s=t[r]);return s.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(s=>t.push(s)),t.forEach(s=>{s.event&&e(s.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const s=[];this._root.search(e,s),s.forEach(r=>{r.event&&t(r.event)})}return this}forEachFrom(e,t){if(this._root!==null){const s=[];this._root.searchAfter(e,s),s.forEach(r=>{r.event&&t(r.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class y5{constructor(e,t,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class x5 extends ia{constructor(e){super(),this.name="TimelineValue",this._timeline=new ao({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class Xc extends pt{constructor(){super(at(Xc.getDefaults(),arguments,["context"]))}connect(e,t=0,s=0){return $2(this,e,t,s),this}}class _f extends Xc{constructor(){const e=at(_f.getDefaults(),arguments,["mapping","length"]);super(e),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,Rr(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):Gq(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(rs.getDefaults(),{length:1024})}setMap(e,t=1024){const s=new Float32Array(t);for(let r=0,o=t;r<o;r++){const i=r/(o-1)*2-1;s[r]=e(i,r)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(s=>s.includes(e));tt(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}let w5=class c3 extends Xc{constructor(){const e=at(c3.getDefaults(),arguments,["value"]);super(e),this.name="Pow",this._exponentScaler=this.input=this.output=new _f({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(Xc.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}};class Ha{constructor(e,t){this.id=Ha._eventId++,this._remainderTime=0;const s=Object.assign(Ha.getDefaults(),t);this.transport=e,this.callback=s.callback,this._once=s.once,this.time=Math.floor(s.time),this._remainderTime=s.time-this.time}static getDefaults(){return{callback:Dt,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(e){if(this.callback){const t=this.transport.bpm.getDurationOfTicks(1,e);this.callback(e+this._remainderTime*t),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Ha._eventId=0;class O2 extends Ha{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(O2.getDefaults(),t);this.duration=s.duration,this._interval=s.interval,this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Ha.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvent(){return Qy(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Sc(this.context,this._nextTick).toSeconds()):-1}_createEvents(e){Qy(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Sc(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const t=this.transport.getTicksAtTime(e);qc(t,this.time)&&(this._nextTick=this.floatTime+Math.ceil((t-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class cx extends fr{constructor(){const e=at(cx.getDefaults(),arguments);super(e),this.name="Transport",this._loop=new x5(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new ao,this._repeatedEvents=new g5,this._syncedSignals=[],this._swingAmount=0,this._ppq=e.ppq,this._clock=new ux({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),bn(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(fr.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const s=t%(this._swingTicks*2)/(this._swingTicks*2),r=Math.sin(s*Math.PI)*this._swingAmount;e+=new Sc(this.context,this._swingTicks*2/3).toSeconds()*r}o$(!0),this._timeline.forEachAtTime(t,s=>s.invoke(e)),o$(!1)}schedule(e,t){const s=new Ha(this,{callback:e,time:new kp(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(e,t,s,r=1/0){const o=new O2(this,{callback:e,duration:new Ao(this.context,r).toTicks(),interval:new Ao(this.context,t).toTicks(),time:new kp(this.context,s).toTicks()});return this._addEvent(o,this._repeatedEvents)}scheduleOnce(e,t){const s=new Ha(this,{callback:e,once:!0,time:new kp(this.context,t).toTicks()});return this._addEvent(s,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(t,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new Sc(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){this.context.resume();let s;return mt(t)&&(s=this.toTicks(t)),this._clock.start(e,s),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){Rr(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new Ao(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new Ao(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new Sc(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new Sc(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),s=this._clock.frequency.timeToTicks(e,t);this.ticks=s}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(t),r=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,t),o=t+r;this.emit("stop",o),this._clock.setTicksAtTime(e,o),this.emit("start",o,this._clock.getSecondsAtTime(o))}else this.emit("ticks",t),this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return this._clock.getTicksAtTime(e)}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),s=this.getTicksAtTime(t),r=e-s%e;return this._clock.nextTickTime(r,t)}}syncSignal(e,t){const s=this.now();let r=this.bpm,o=1/(60/r.getValueAtTime(s)/this.PPQ),i=[];if(e.units==="time"){const l=.015625/o,u=new _s(l),c=new w5(-1),h=new _s(l);r.chain(u,c,h),r=h,o=1/o,i=[u,c,h]}t||(e.getValueAtTime(s)!==0?t=e.getValueAtTime(s)/o:t=0);const a=new _s(t);return r.connect(a),a.connect(e._param),i.push(a),this._syncedSignals.push({initial:e.value,nodes:i,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const s=this._syncedSignals[t];s.signal===e&&(s.nodes.forEach(r=>r.dispose()),s.signal.value=s.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),o3(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}$f.mixin(cx);ix(n=>{n.transport=new cx({context:n})});ax(n=>{n.transport.dispose()});class Or extends pt{constructor(e){super(e),this.input=void 0,this._state=new N2("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Dt,this._syncedStop=Dt,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new vh({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,bn(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(pt.getDefaults(),{mute:!1,onstop:Dt,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,s){let r=io(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(r=this._clampToCurrentTime(r),!this._synced&&this._state.getValueAtTime(r)==="started")tt(qc(r,this._state.get(r).time),"Start time must be strictly greater than previous start time"),this._state.cancel(r),this._state.setStateAtTime("started",r),this.log("restart",r),this.restart(r,t,s);else if(this.log("start",r),this._state.setStateAtTime("started",r),this._synced){const o=this._state.get(r);o&&(o.offset=this.toSeconds(Rc(t,0)),o.duration=s?this.toSeconds(s):void 0);const i=this.context.transport.schedule(a=>{this._start(a,t,s)},r);this._scheduled.push(i),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>r&&this._syncedStart(this.now(),this.context.transport.seconds)}else JD(this.context),this._start(r,t,s);return this}stop(e){let t=io(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||mt(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const s=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(s)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,s){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(qc(t,0)){const s=this._state.get(t);if(s&&s.state==="started"&&s.time!==t){const r=t-this.toSeconds(s.time);let o;s.duration&&(o=this.toSeconds(s.duration)-r),this._start(e,this.toSeconds(s.offset)+r,o)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Dt,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class hx extends Kc{constructor(){const e=at(hx.getDefaults(),arguments,["url","onload"]);super(e),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,wh(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new un({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new tn(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Kc.getDefaults(),{url:new tn,loop:!1,loopEnd:0,loopStart:0,onload:Dt,onerror:Dt,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,s,r=1){tt(this.buffer.loaded,"buffer is either not set or not loaded");const o=this.toSeconds(e);this._startGain(o,r),this.loop?t=Rc(t,this.loopStart):t=Rc(t,0);let i=Math.max(this.toSeconds(t),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,l=this.toSeconds(this.loopStart),u=a-l;sS(i,a)&&(i=(i-l)%u+l),$o(i,this.buffer.duration)&&(i=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Qy(i,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(o,i)),mt(s)){let a=this.toSeconds(s);a=Math.max(a,0),this.stop(o+a)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function $u(n,e){return Pn(this,void 0,void 0,function*(){const t=e/n.context.sampleRate,s=new S2(1,t,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/t,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class P2 extends Kc{constructor(){const e=at(P2.getDefaults(),arguments,["frequency","type"]);super(e),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],wh(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new un({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new un({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),bn(this,["frequency","detune"])}static getDefaults(){return Object.assign(Kc.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class Dn extends Or{constructor(){const e=at(Dn.getDefaults(),arguments,["frequency","type"]);super(e),this.name="Oscillator",this._oscillator=null,this.frequency=new rs({context:this.context,units:"frequency",value:e.frequency}),bn(this,"frequency"),this.detune=new rs({context:this.context,units:"cents",value:e.detune}),bn(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Or.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),s=new P2({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return Dn._periodicWaveCache.find(t=>t.phase===this._phase&&t5(t.partials,this._partials));{const e=Dn._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const s=this._getCachedPeriodicWave();if(mt(s)){const{partials:r,wave:o}=s;this._wave=o,this._partials=r,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[r,o]=this._getRealImaginary(e,this._phase),i=this.context.createPeriodicWave(r,o);this._wave=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),Dn._periodicWaveCache.push({imag:o,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:r,type:this._type,wave:this._wave}),Dn._periodicWaveCache.length>100&&Dn._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){Ga(e,0);let t=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(t=s[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const r=new Float32Array(e);this._partials.forEach((o,i)=>r[i]=o),this._partials=Array.from(r),this.type=this._type}}_getRealImaginary(e,t){let r=2048;const o=new Float32Array(r),i=new Float32Array(r);let a=1;if(e==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,r=a,this._partials.length===0)return[o,i]}else{const l=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);l?(a=parseInt(l[2],10)+1,this._partialCount=parseInt(l[2],10),e=l[1],a=Math.max(a,2),r=a):this._partialCount=0,this._partials=[]}for(let l=1;l<r;++l){const u=2/(l*Math.PI);let c;switch(e){case"sine":c=l<=a?1:0,this._partials[l-1]=c;break;case"square":c=l&1?2*u:0,this._partials[l-1]=c;break;case"sawtooth":c=u*(l&1?1:-1),this._partials[l-1]=c;break;case"triangle":l&1?c=2*(u*u)*(l-1>>1&1?-1:1):c=0,this._partials[l-1]=c;break;case"custom":c=this._partials[l-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}c!==0?(o[l]=-c*Math.sin(t*l),i[l]=c*Math.cos(t*l)):(o[l]=0,i[l]=0)}return[o,i]}_inverseFFT(e,t,s){let r=0;const o=e.length;for(let i=0;i<o;i++)r+=e[i]*Math.cos(i*s)+t[i]*Math.sin(i*s);return r}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let s=0;const r=Math.PI*2,o=32;for(let i=0;i<o;i++)s=Math.max(this._inverseFFT(e,t,i/o*r),s);return s5(-this._inverseFFT(e,t,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}Dn._periodicWaveCache=[];class v5 extends Xc{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new _f({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}let Jy=class h3 extends rs{constructor(){const e=at(h3.getDefaults(),arguments,["value"]);super(e),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new _s({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(rs.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}};class dx extends Or{constructor(){const e=at(dx.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="AMOscillator",this._modulationScale=new v5({context:this.context}),this._modulationNode=new _s({context:this.context}),this._carrier=new Dn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new Dn({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Jy({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),bn(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Dn.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class px extends Or{constructor(){const e=at(px.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="FMOscillator",this._modulationNode=new _s({context:this.context,gain:0}),this._carrier=new Dn({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new rs({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new Dn({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Jy({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Jy({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),bn(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(Dn.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ef extends Or{constructor(){const e=at(Ef.getDefaults(),arguments,["frequency","width"]);super(e),this.name="PulseOscillator",this._widthGate=new _s({context:this.context,gain:0}),this._thresh=new _f({context:this.context,mapping:t=>t<=0?-1:1}),this.width=new rs({context:this.context,units:"audioRange",value:e.width}),this._triangle=new Dn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),bn(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Or.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class fx extends Or{constructor(){const e=at(fx.getDefaults(),arguments,["frequency","type","spread"]);super(e),this.name="FatOscillator",this._oscillators=[],this.frequency=new rs({context:this.context,units:"frequency",value:e.frequency}),this.detune=new rs({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,bn(this,["frequency","detune"])}static getDefaults(){return Object.assign(Dn.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,s=e/(this._oscillators.length-1);this._forEach((r,o)=>r.detune.value=t+s*o)}}get count(){return this._oscillators.length}set count(e){if(Ga(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const s=new Dn({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):Dt});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[t]=s}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,s)=>t.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class mx extends Or{constructor(){const e=at(mx.getDefaults(),arguments,["frequency","modulationFrequency"]);super(e),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Jy({context:this.context,value:2}),this._pulse=new Ef({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new Dn({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),bn(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Or.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const i$={am:dx,fat:fx,fm:px,oscillator:Dn,pulse:Ef,pwm:mx};class e0 extends Or{constructor(){const e=at(e0.getDefaults(),arguments,["frequency","type"]);super(e),this.name="OmniOscillator",this.frequency=new rs({context:this.context,units:"frequency",value:e.frequency}),this.detune=new rs({context:this.context,units:"cents",value:e.detune}),bn(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(Dn.getDefaults(),px.getDefaults(),dx.getDefaults(),fx.getDefaults(),Ef.getDefaults(),mx.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=i$[e],s=this.now();if(this._oscillator){const r=this._oscillator;r.stop(s),this.context.setTimeout(()=>r.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof i$[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&Ua(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&Ua(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&ea(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return Pn(this,arguments,void 0,function*(e=1024){return $u(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function d3(n,e=1/0){const t=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(o){Ga(o,n,e),t.set(this,o)}})}}function aa(n,e=1/0){const t=new WeakMap;return function(s,r){Reflect.defineProperty(s,r,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(o){Ga(this.toSeconds(o),n,e),t.set(this,o)}})}}class gx extends Or{constructor(){const e=at(gx.getDefaults(),arguments,["url","onload"]);super(e),this.name="Player",this._activeSources=new Set,this._buffer=new tn({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Or.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Dt,onerror:Dt,playbackRate:1,reverse:!1})}load(e){return Pn(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=Dt){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,s){return super.start(e,t,s),this}_start(e,t,s){this._loop?t=Rc(t,this._loopStart):t=Rc(t,0);const r=this.toSeconds(t),o=s;s=Rc(s,Math.max(this._buffer.duration-r,0));let i=this.toSeconds(s);i=i/this._playbackRate,e=this.toSeconds(e);const a=new hx({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+i),this._state.setStateAtTime("stopped",e+i,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&io(o)?a.start(e,r):a.start(e,r,i-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(s=>s.stop(t))}restart(e,t,s){return super.restart(e,t,s),this}_restart(e,t,s){var r;(r=[...this._activeSources].pop())===null||r===void 0||r.stop(e),this._start(e,t,s)}seek(e,t){const s=this.toSeconds(t);if(this._state.getValueAtTime(s)==="started"){const r=this.toSeconds(e);this._stop(s),this._start(s,r)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&Ga(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&Ga(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),s=this._state.getNextState("stopped",t);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(r=>r.cancelStop())),this._activeSources.forEach(r=>{r.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Yo([aa(0)],gx.prototype,"fadeIn",void 0);Yo([aa(0)],gx.prototype,"fadeOut",void 0);class ul extends pt{constructor(){const e=at(ul.getDefaults(),arguments,["attack","decay","sustain","release"]);super(e),this.name="Envelope",this._sig=new rs({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(pt.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(ea(e))return e;{let s;for(s in Fg)if(Fg[s][t]===e)return s;return e}}_setCurve(e,t,s){if(ea(s)&&Reflect.has(Fg,s)){const r=Fg[s];ql(r)?e!=="_decayCurve"&&(this[e]=r[t]):this[e]=r}else if(Rr(s)&&e!=="_decayCurve")this[e]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(e){this._setCurve("_decayCurve","Out",e)}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let r=this.toSeconds(this.attack);const o=this.toSeconds(this.decay),i=this.getValueAtTime(e);if(i>0){const a=1/r;r=(1-i)/a}if(r<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,r,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,r,e);else{this._sig.cancelAndHoldAtTime(e);let a=this._attackCurve;for(let l=1;l<a.length;l++)if(a[l-1]<=i&&i<=a[l]){a=this._attackCurve.slice(l),a[0]=i;break}this._sig.setValueCurveAtTime(a,e,r,t)}if(o&&this.sustain<1){const a=t*this.sustain,l=e+r;this.log("decay",l),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,o+l):this._sig.exponentialApproachValueAtTime(a,l,o)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,e):(tt(Rr(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,s,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,s=1){return t=this.toSeconds(t),this.triggerAttack(t,s),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,s=0){return $2(this,e,t,s),this}asArray(){return Pn(this,arguments,void 0,function*(e=1024){const t=e/this.context.sampleRate,s=new S2(1,t,this.context.sampleRate),r=this.toSeconds(this.attack)+this.toSeconds(this.decay),o=r+this.toSeconds(this.release),i=o*.1,a=o+i,l=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/a,decay:t*this.toSeconds(this.decay)/a,release:t*this.toSeconds(this.release)/a,context:s}));return l._sig.toDestination(),l.triggerAttackRelease(t*(r+i)/a,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Yo([aa(0)],ul.prototype,"attack",void 0);Yo([aa(0)],ul.prototype,"decay",void 0);Yo([d3(0,1)],ul.prototype,"sustain",void 0);Yo([aa(0)],ul.prototype,"release",void 0);const Fg=(()=>{let e,t;const s=[];for(e=0;e<128;e++)s[e]=Math.sin(e/(128-1)*(Math.PI/2));const r=[],o=6.4;for(e=0;e<128-1;e++){t=e/(128-1);const d=Math.sin(t*(Math.PI*2)*o-Math.PI/2)+1;r[e]=d/10+t*.83}r[128-1]=1;const i=[],a=5;for(e=0;e<128;e++)i[e]=Math.ceil(e/(128-1)*a)/a;const l=[];for(e=0;e<128;e++)t=e/(128-1),l[e]=.5*(1-Math.cos(Math.PI*t));const u=[];for(e=0;e<128;e++){t=e/(128-1);const d=Math.pow(t,3)*4+.2,p=Math.cos(d*Math.PI*2*t);u[e]=Math.abs(p*(1-t))}function c(d){const p=new Array(d.length);for(let f=0;f<d.length;f++)p[f]=1-d[f];return p}function h(d){return d.slice(0).reverse()}return{bounce:{In:c(u),Out:u},cosine:{In:s,Out:h(s)},exponential:"exponential",linear:"linear",ripple:{In:r,Out:c(r)},sine:{In:l,Out:c(l)},step:{In:i,Out:c(i)}}})();class ja extends pt{constructor(){const e=at(ja.getDefaults(),arguments);super(e),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=t=>this._original_triggerRelease(t),this._volume=this.output=new vh({context:this.context,volume:e.volume}),this.volume=this._volume.volume,bn(this,"volume")}static getDefaults(){return Object.assign(pt.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const s=this["_original_"+e]=this[e];this[e]=(...r)=>{const o=r[t],i=this.context.transport.schedule(a=>{r[t]=a,s.apply(this,r)},o);this._scheduledEvents.push(i)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(e,t,s,r){const o=this.toSeconds(s),i=this.toSeconds(t);return this.triggerAttack(e,o,r),this.triggerRelease(o+i),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class au extends ja{constructor(){const e=at(au.getDefaults(),arguments);super(e),this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(ja.getDefaults(),{detune:0,onsilence:Dt,portamento:0})}triggerAttack(e,t,s=1){this.log("triggerAttack",e,t,s);const r=this.toSeconds(t);return this._triggerEnvelopeAttack(r,s),this.setNote(e,r),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const s=this.toSeconds(t),r=e instanceof $r?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const o=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(r,o,s)}else this.frequency.setValueAtTime(r,s);return this}}Yo([aa(0)],au.prototype,"portamento",void 0);class F2 extends ul{constructor(){super(at(F2.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new _s({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class La extends au{constructor(){const e=at(La.getDefaults(),arguments);super(e),this.name="Synth",this.oscillator=new e0(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new F2(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),bn(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(au.getDefaults(),{envelope:Object.assign(nS(ul.getDefaults(),Object.keys(pt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(nS(e0.getDefaults(),[...Object.keys(Or.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),r=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+s+r)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class yx extends La{constructor(){const e=at(yx.getDefaults(),arguments);super(e),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,bn(this,["oscillator","envelope"])}static getDefaults(){return Kl(au.getDefaults(),La.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const s=this.toSeconds(t),r=this.toFrequency(e instanceof $r?e.toFrequency():e),o=r*this.octaves;return this.oscillator.frequency.setValueAtTime(o,s),this.oscillator.frequency.exponentialRampToValueAtTime(r,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Yo([d3(0)],yx.prototype,"octaves",void 0);Yo([aa(0)],yx.prototype,"pitchDecay",void 0);const p3=new Set;function L2(n){p3.add(n)}function f3(n,e){const t=`registerProcessor("${n}", ${e})`;p3.add(t)}const b5=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;L2(b5);const S5=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;L2(S5);const C5=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;L2(C5);const k5="feedback-comb-filter",I5=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;f3(k5,I5);class t0 extends ja{constructor(){const e=at(t0.getDefaults(),arguments,["voice","options"]);super(e),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=r=>this.releaseAll(r),tt(!Ua(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(ja.getDefaults(),{maxPolyphony:32,options:{},voice:La})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(s=>s.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return tt(e instanceof au,"Voice must extend Monophonic class"),e.connect(this.output),this._voices.push(e),e}else ox("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,s){e.forEach(r=>{const o=new Zy(this.context,r).toMidi(),i=this._getNextAvailableVoice();i&&(i.triggerAttack(r,t,s),this._activeVoices.push({midi:o,voice:i,released:!1}),this.log("triggerAttack",r,t))})}_triggerRelease(e,t){e.forEach(s=>{const r=new Zy(this.context,s).toMidi(),o=this._activeVoices.find(({midi:i,released:a})=>i===r&&!a);o&&(o.voice.triggerRelease(t),o.released=!0,this.log("triggerRelease",s,t))})}_scheduleEvent(e,t,s,r){tt(!this.disposed,"Synth was already disposed"),s<=this.now()?e==="attack"?this._triggerAttack(t,s,r):this._triggerRelease(t,s):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(e,t,s,r)},s-this.now())}triggerAttack(e,t,s){Array.isArray(e)||(e=[e]);const r=this.toSeconds(t);return this._scheduleEvent("attack",e,r,s),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const s=this.toSeconds(t);return this._scheduleEvent("release",e,s),this}triggerAttackRelease(e,t,s,r){const o=this.toSeconds(s);if(this.triggerAttack(e,o,r),Rr(t)){tt(Rr(e),"If the duration is an array, the notes must also be an array"),e=e;for(let i=0;i<e.length;i++){const a=t[Math.min(i,t.length-1)],l=this.toSeconds(a);tt(l>0,"The duration must be greater than 0"),this.triggerRelease(e[i],o+l)}}else{const i=this.toSeconds(t);tt(i>0,"The duration must be greater than 0"),this.triggerRelease(e,o+i)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(e){const t=nS(e,["onsilence","context"]);return this.options=Kl(this.options,t),this._voices.forEach(s=>s.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:s})=>{s.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class xx extends ja{constructor(){const e=at(xx.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(e),this.name="Sampler",this._activeSources=new Map;const t={};Object.keys(e.urls).forEach(s=>{const r=parseInt(s,10);if(tt(Pg(s)||Ua(r)&&isFinite(r),`url key is neither a note or midi pitch: ${s}`),Pg(s)){const o=new $r(this.context,s).toMidi();t[o]=e.urls[s]}else Ua(r)&&isFinite(r)&&(t[r]=e.urls[r])}),this._buffers=new D2({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(ja.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Dt,onerror:Dt,release:.1,urls:{}})}_findClosest(e){let s=0;for(;s<96;){if(this._buffers.has(e+s))return-s;if(this._buffers.has(e-s))return s;s++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,s=1){return this.log("triggerAttack",e,t,s),Array.isArray(e)||(e=[e]),e.forEach(r=>{const o=l3(new $r(this.context,r).toFrequency()),i=Math.round(o),a=o-i,l=this._findClosest(i),u=i-l,c=this._buffers.get(u),h=a3(l+a),d=new hx({url:c,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);d.start(t,0,c.duration/h,s),Rr(this._activeSources.get(i))||this._activeSources.set(i,[]),this._activeSources.get(i).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(i)){const p=this._activeSources.get(i),f=p.indexOf(d);f!==-1&&p.splice(f,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(s=>{const r=new $r(this.context,s).toMidi();if(this._activeSources.has(r)&&this._activeSources.get(r).length){const o=this._activeSources.get(r);t=this.toSeconds(t),o.forEach(i=>{i.stop(t)}),this._activeSources.set(r,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,s,r=1){const o=this.toSeconds(s);return this.triggerAttack(e,o,r),Rr(t)?(tt(Rr(e),"notes must be an array when duration is array"),e.forEach((i,a)=>{const l=t[Math.min(a,t.length-1)];this.triggerRelease(i,o+this.toSeconds(l))})):this.triggerRelease(e,o+this.toSeconds(t)),this}add(e,t,s){if(tt(Pg(e)||isFinite(e),`note must be a pitch or midi: ${e}`),Pg(e)){const r=new $r(this.context,e).toMidi();this._buffers.add(r,t,s)}else this._buffers.add(e,t,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}Yo([aa(0)],xx.prototype,"attack",void 0);Yo([aa(0)],xx.prototype,"release",void 0);class M2 extends pt{constructor(){const e=at(M2.getDefaults(),arguments,["pan"]);super(e),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new un({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",bn(this,"pan")}static getDefaults(){return Object.assign(pt.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const N5="bit-crusher",T5=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;f3(N5,T5);class Rn extends pt{constructor(){const e=at(Rn.getDefaults(),arguments,["solo"]);super(e),this.name="Solo",this.input=this.output=new _s({context:this.context}),Rn._allSolos.has(this.context)||Rn._allSolos.set(this.context,new Set),Rn._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(pt.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),Rn._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Rn._soloed.has(this.context)||Rn._soloed.set(this.context,new Set),Rn._soloed.get(this.context).add(this)}_removeSolo(){Rn._soloed.has(this.context)&&Rn._soloed.get(this.context).delete(this)}_isSoloed(){return Rn._soloed.has(this.context)&&Rn._soloed.get(this.context).has(this)}_noSolos(){return!Rn._soloed.has(this.context)||Rn._soloed.has(this.context)&&Rn._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Rn._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Rn._allSolos=new Map;Rn._soloed=new Map;class z2 extends pt{constructor(){const e=at(z2.getDefaults(),arguments,["pan","volume"]);super(e),this.name="PanVol",this._panner=this.input=new M2({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new vh({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,bn(this,["pan","volume"])}static getDefaults(){return Object.assign(pt.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Cc extends pt{constructor(){const e=at(Cc.getDefaults(),arguments,["volume","pan"]);super(e),this.name="Channel",this._solo=this.input=new Rn({solo:e.solo,context:this.context}),this._panVol=this.output=new z2({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),bn(this,["pan","volume"])}static getDefaults(){return Object.assign(pt.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return Cc.buses.has(e)||Cc.buses.set(e,new _s({context:this.context})),Cc.buses.get(e)}send(e,t=0){const s=this._getBus(e),r=new _s({context:this.context,units:"decibels",gain:t});return this.connect(r),r.connect(s),r}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Cc.buses=new Map;Ro().transport;Ro().destination;Ro().destination;Ro().listener;Ro().draw;const Io=Ro();var m3={exports:{}};(function(n,e){(function(s,r){n.exports=r(He)})(Do,function(t){return function(s){var r={};function o(i){if(r[i])return r[i].exports;var a=r[i]={i,l:!1,exports:{}};return s[i].call(a.exports,a,a.exports,o),a.l=!0,a.exports}return o.m=s,o.c=r,o.d=function(i,a,l){o.o(i,a)||Object.defineProperty(i,a,{enumerable:!0,get:l})},o.r=function(i){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},o.t=function(i,a){if(a&1&&(i=o(i)),a&8||a&4&&typeof i=="object"&&i&&i.__esModule)return i;var l=Object.create(null);if(o.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:i}),a&2&&typeof i!="string")for(var u in i)o.d(l,u,(function(c){return i[c]}).bind(null,u));return l},o.n=function(i){var a=i&&i.__esModule?function(){return i.default}:function(){return i};return o.d(a,"a",a),a},o.o=function(i,a){return Object.prototype.hasOwnProperty.call(i,a)},o.p="",o(o.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(s,r,o){o.r(r);var i=o("react"),a=function(){var d=function(p,f){return d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(m,g){m.__proto__=g}||function(m,g){for(var y in g)g.hasOwnProperty(y)&&(m[y]=g[y])},d(p,f)};return function(p,f){d(p,f);function m(){this.constructor=p}p.prototype=f===null?Object.create(f):(m.prototype=f.prototype,new m)}}(),l=function(){return l=Object.assign||function(d){for(var p,f=1,m=arguments.length;f<m;f++){p=arguments[f];for(var g in p)Object.prototype.hasOwnProperty.call(p,g)&&(d[g]=p[g])}return d},l.apply(this,arguments)},u=function(d,p){var f={};for(var m in d)Object.prototype.hasOwnProperty.call(d,m)&&p.indexOf(m)<0&&(f[m]=d[m]);if(d!=null&&typeof Object.getOwnPropertySymbols=="function")for(var g=0,m=Object.getOwnPropertySymbols(d);g<m.length;g++)p.indexOf(m[g])<0&&Object.prototype.propertyIsEnumerable.call(d,m[g])&&(f[m[g]]=d[m[g]]);return f};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(p){var f=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return f?new Promise(function(m,g){f.call(navigator,p,m,g)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function c(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var h=function(d){a(p,d);function p(f){var m=d.call(this,f)||this;return m.canvas=null,m.ctx=null,m.requestUserMediaId=0,m.unmounted=!1,m.state={hasUserMedia:!1},m}return p.prototype.componentDidMount=function(){var f=this,m=f.state,g=f.props;if(this.unmounted=!1,!c()){g.onUserMediaError("getUserMedia not supported");return}m.hasUserMedia||this.requestUserMedia(),g.children&&typeof g.children!="function"&&console.warn("children must be a function")},p.prototype.componentDidUpdate=function(f){var m=this.props;if(!c()){m.onUserMediaError("getUserMedia not supported");return}var g=JSON.stringify(f.audioConstraints)!==JSON.stringify(m.audioConstraints),y=JSON.stringify(f.videoConstraints)!==JSON.stringify(m.videoConstraints),x=f.minScreenshotWidth!==m.minScreenshotWidth,w=f.minScreenshotHeight!==m.minScreenshotHeight;(y||x||w)&&(this.canvas=null,this.ctx=null),(g||y)&&(this.stopAndCleanup(),this.requestUserMedia())},p.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},p.stopMediaStream=function(f){f&&(f.getVideoTracks&&f.getAudioTracks?(f.getVideoTracks().map(function(m){f.removeTrack(m),m.stop()}),f.getAudioTracks().map(function(m){f.removeTrack(m),m.stop()})):f.stop())},p.prototype.stopAndCleanup=function(){var f=this.state;f.hasUserMedia&&(p.stopMediaStream(this.stream),f.src&&window.URL.revokeObjectURL(f.src))},p.prototype.getScreenshot=function(f){var m=this,g=m.state,y=m.props;if(!g.hasUserMedia)return null;var x=this.getCanvas(f);return x&&x.toDataURL(y.screenshotFormat,y.screenshotQuality)},p.prototype.getCanvas=function(f){var m=this,g=m.state,y=m.props;if(!this.video||!g.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var x=this.video.videoWidth,w=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var b=x/w;x=y.minScreenshotWidth||this.video.clientWidth,w=x/b,y.minScreenshotHeight&&w<y.minScreenshotHeight&&(w=y.minScreenshotHeight,x=w*b)}this.canvas=document.createElement("canvas"),this.canvas.width=(f==null?void 0:f.width)||x,this.canvas.height=(f==null?void 0:f.height)||w,this.ctx=this.canvas.getContext("2d")}var S=this,C=S.ctx,k=S.canvas;return C&&k&&(k.width=(f==null?void 0:f.width)||k.width,k.height=(f==null?void 0:f.height)||k.height,y.mirrored&&(C.translate(k.width,0),C.scale(-1,1)),C.imageSmoothingEnabled=y.imageSmoothing,C.drawImage(this.video,0,0,(f==null?void 0:f.width)||k.width,(f==null?void 0:f.height)||k.height),y.mirrored&&(C.scale(-1,1),C.translate(-k.width,0))),k},p.prototype.requestUserMedia=function(){var f=this,m=this.props,g=function(w,b){var S={video:typeof b<"u"?b:!0};m.audio&&(S.audio=typeof w<"u"?w:!0),f.requestUserMediaId++;var C=f.requestUserMediaId;navigator.mediaDevices.getUserMedia(S).then(function(k){f.unmounted||C!==f.requestUserMediaId?p.stopMediaStream(k):f.handleUserMedia(null,k)}).catch(function(k){f.handleUserMedia(k)})};if("mediaDevices"in navigator)g(m.audioConstraints,m.videoConstraints);else{var y=function(w){return{optional:[{sourceId:w}]}},x=function(w){var b=w.deviceId;return typeof b=="string"?b:Array.isArray(b)&&b.length>0?b[0]:typeof b=="object"&&b.ideal?b.ideal:null};MediaStreamTrack.getSources(function(w){var b=null,S=null;w.forEach(function(N){N.kind==="audio"?b=N.id:N.kind==="video"&&(S=N.id)});var C=x(m.audioConstraints);C&&(b=C);var k=x(m.videoConstraints);k&&(S=k),g(y(b),y(S))})}},p.prototype.handleUserMedia=function(f,m){var g=this.props;if(f||!m){this.setState({hasUserMedia:!1}),g.onUserMediaError(f);return}this.stream=m;try{this.video&&(this.video.srcObject=m),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(m)})}g.onUserMedia(m)},p.prototype.render=function(){var f=this,m=this,g=m.state,y=m.props,x=y.audio;y.forceScreenshotSourceSize;var w=y.disablePictureInPicture;y.onUserMedia,y.onUserMediaError,y.screenshotFormat,y.screenshotQuality,y.minScreenshotWidth,y.minScreenshotHeight,y.audioConstraints,y.videoConstraints,y.imageSmoothing;var b=y.mirrored,S=y.style,C=S===void 0?{}:S,k=y.children,N=u(y,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),_=b?l(l({},C),{transform:(C.transform||"")+" scaleX(-1)"}):C,E={getScreenshot:this.getScreenshot.bind(this)};return i.createElement(i.Fragment,null,i.createElement("video",l({autoPlay:!0,disablePictureInPicture:w,src:g.src,muted:!x,playsInline:!0,ref:function(D){f.video=D},style:_},N)),k&&k(E))},p.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},p}(i.Component);r.default=h},react:function(s,r){s.exports=t}}).default})})(m3);var $5=m3.exports;const _5=lC($5);const E5=n=>n.replace(/_/g," ").split(" ").map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join(" "),g3=He.forwardRef(({poses:n},e)=>{const t=He.useRef(null),s=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768,r={width:s?480:640,height:s?360:480,facingMode:"user",frameRate:s?{ideal:15,max:30}:{ideal:30,max:60}};return He.useEffect(()=>{if(n&&n.length>0&&t.current){const o=t.current,i=o.getContext("2d");if(!i)return;i.clearRect(0,0,o.width,o.height);const a=[["left_shoulder","right_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["left_shoulder","left_hip"],["right_shoulder","right_hip"],["left_hip","right_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["right_hip","right_knee"],["right_knee","right_ankle"]],l=n[0],u=getComputedStyle(document.documentElement).getPropertyValue("--accent-color"),c=getComputedStyle(document.documentElement).getPropertyValue("--text-primary"),h=getComputedStyle(document.documentElement).getPropertyValue("--bg-secondary"),d=s;i.strokeStyle=u,i.globalAlpha=.6,i.lineWidth=d?2:3,a.forEach(([p,f])=>{const m=l.keypoints.find(x=>x.name===p),g=l.keypoints.find(x=>x.name===f),y=d?.2:.3;if((m==null?void 0:m.score)>y&&(g==null?void 0:g.score)>y){const x=(1-m.x)*o.width,w=m.y*o.height,b=(1-g.x)*o.width,S=g.y*o.height;i.beginPath(),i.moveTo(x,w),i.lineTo(b,S),i.stroke()}}),i.globalAlpha=1,l.keypoints.forEach(p=>{var m,g,y,x;const f=d?.2:.3;if(p.score>f){const w=(1-p.x)*o.width,b=p.y*o.height;i.fillStyle=u,i.beginPath(),i.arc(w,b,d?6:8,0,2*Math.PI),i.fill(),i.strokeStyle=c,i.lineWidth=d?1:2,i.stroke();const S=!d||((m=p.name)==null?void 0:m.includes("wrist"))||((g=p.name)==null?void 0:g.includes("shoulder"))||((y=p.name)==null?void 0:y.includes("face"))||((x=p.name)==null?void 0:x.includes("hip"));if(p.name&&S){const C=d?12:14;i.font=`bold ${C}px Inter, system-ui, sans-serif`;const k=E5(p.name),_=i.measureText(k).width,E=C+2,D=d?4:6,P=4,F=w+(d?10:15),L=b-(d?8:10);i.fillStyle=h,i.globalAlpha=.9,i.beginPath(),i.roundRect?i.roundRect(F-D,L-E+2,_+D*2,E+D,P):i.rect(F-D,L-E+2,_+D*2,E+D),i.fill(),i.globalAlpha=1,i.fillStyle=c,i.fillText(k,F,L)}}})}},[n,s]),ue.jsxs("div",{className:"webcam-container",children:[ue.jsx(_5,{ref:e,audio:!1,videoConstraints:r,mirrored:!0,className:"webcam-video"}),ue.jsx("canvas",{ref:t,width:640,height:480,className:"webcam-canvas"})]})});g3.displayName="WebcamCapture";const R5={nose:["nose"],leftEye:["left_eye","leftEye"],rightEye:["right_eye","rightEye"],leftEar:["left_ear","leftEar"],rightEar:["right_ear","rightEar"],leftShoulder:["left_shoulder","leftShoulder"],rightShoulder:["right_shoulder","rightShoulder"],leftElbow:["left_elbow","leftElbow"],rightElbow:["right_elbow","rightElbow"],leftWrist:["left_wrist","leftWrist"],rightWrist:["right_wrist","rightWrist"],leftHip:["left_hip","leftHip"],rightHip:["right_hip","rightHip"],leftKnee:["left_knee","leftKnee"],rightKnee:["right_knee","rightKnee"],leftAnkle:["left_ankle","leftAnkle"],rightAnkle:["right_ankle","rightAnkle"]},a$=()=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768,l$=(n,e)=>{window.dispatchEvent&&window.dispatchEvent(new CustomEvent("performanceUpdate",{detail:{type:n,value:e}}))},u$={pentatonic:["C","D","E","G","A"],major:["C","D","E","F","G","A","B"]},c$=[["C3","E3","G3"],["F3","A3","C4"],["G3","B3","D4"],["A3","C4","E4"]];function y3(){const n=He.useRef(null),[e,t]=He.useState("piano"),s=He.useRef(!1),r=He.useRef(0),o=He.useRef(0),i=He.useRef(0),a=He.useRef({}),l=He.useRef(a$()),u=He.useRef(l.current?200:100),c=He.useRef(0),h=He.useCallback(async()=>{if(s.current&&n.current)return;console.log("Initializing simple harmonious synth...");const g=a$();console.log("Detected platform:",g?"mobile":"desktop");try{try{Io.state!=="running"&&(console.log("Starting Tone.js context from initializeSynth"),await k2())}catch(y){console.warn("Error while starting Tone context:",y);try{await Io.resume()}catch(x){console.error("Failed to resume context:",x)}}if(n.current){console.log("Synth already exists, reusing");return}try{console.log("Creating synth with basic settings"),n.current=new t0(La).toDestination();const y={oscillator:{type:"triangle"},envelope:{attack:g?.1:.2,decay:g?.2:.3,sustain:.4,release:g?1:1.5}};try{console.log("Applying advanced synth settings"),n.current.set(y);try{n.current.options.maxPolyphony=g?4:8}catch(x){console.warn("Could not set maxPolyphony, might be unsupported:",x)}n.current.volume.value=g?-6:-8}catch(x){console.warn("Could not apply advanced settings:",x)}}catch(y){console.error("Failed to create PolySynth, trying fallback:",y);try{n.current=new La().toDestination()}catch(x){throw console.error("Even fallback synth failed:",x),new Error("Could not initialize audio synthesizer")}}s.current=!0,console.log("Synth initialized successfully")}catch(y){throw console.error("Failed to initialize synth:",y),y}},[]);He.useEffect(()=>{const y=setInterval(()=>{try{if(Io&&Io.state==="running"){const x={sampleRate:Io.sampleRate,baseLatency:Io.baseLatency||0,outputLatency:Io.outputLatency||0,lookAhead:Io.lookAhead||0};console.log("Audio context performance:",x);const w=(x.baseLatency+x.outputLatency)*1e3;l$("audioLatency",w)}}catch(x){console.warn("Could not check audio performance:",x)}},5e3);return()=>clearInterval(y)},[]),He.useEffect(()=>{const g=y=>{const x=y.detail;x.type==="detectionLatency"&&l.current&&x.value>100&&(u.current=Math.min(300,x.value))};return window.addEventListener("performanceUpdate",g),()=>window.removeEventListener("performanceUpdate",g)},[]);const d=He.useCallback(async(g,y)=>{if(!g||g.length===0||y.length===0)return;if(await h(),!n.current){console.log("Synth not ready");return}const x=Date.now(),w=l.current;if(w&&x-c.current<u.current)return;c.current=x;const b=performance.now(),S=g[0];(w&&y.length>3?y.slice(0,3):y).forEach(N=>{const _=R5[N]||[N],E=S.keypoints.find(P=>_.includes(P.name||"")),D=w?.4:.3;if(E&&E.score&&E.score>D){const P={x:E.x,y:E.y},F=a.current[N];if(F){const L=P.x-F.x,B=P.y-F.y,W=Math.sqrt(L*L+B*B);if(W>(w?.03:.02)){const z=w?200:150;if(x-r.current>z){const H=w?u$.pentatonic.slice(0,3):u$.pentatonic,Z=Math.floor((1-E.y)*2)+4,te=Math.floor(E.x*H.length),re=H[Math.max(0,Math.min(H.length-1,te))]+Z,le=Math.min(.7,W*3);n.current.triggerAttackRelease(re,w?"16n":"8n",void 0,le),r.current=x;const he=w?3e3:2e3;if(x-o.current>he){const ie=c$[i.current];n.current.triggerAttackRelease(ie,w?"1n":"2n",void 0,.3),i.current=(i.current+1)%c$.length,o.current=x}}}}a.current[N]=P}});const k=performance.now()-b;l$("musicGenerationTime",k),w&&k>50&&(u.current=Math.min(300,k*2))},[h]),p=He.useCallback(()=>{n.current&&n.current.releaseAll(),a.current={}},[]),f=He.useCallback(g=>{console.log("Selecting preset:",g),t(g);const y=l.current;n.current&&(g==="piano"?n.current.set({oscillator:{type:"triangle"},envelope:{attack:y?.01:.02,decay:y?.2:.3,sustain:.4,release:y?.8:1.5}}):g==="synth"?n.current.set({oscillator:{type:y?"triangle":"sawtooth"},envelope:{attack:y?.05:.1,decay:y?.1:.2,sustain:y?.5:.6,release:y?.4:.8}}):g==="mobile-optimized"&&(n.current.set({oscillator:{type:"sine"},envelope:{attack:.01,decay:.1,sustain:.3,release:.3}}),n.current.options.maxPolyphony=2))},[]),m=He.useCallback(async()=>{console.log("Playing test sound...");try{await h(),n.current||(console.log("Creating temporary test synth"),n.current=new t0(La).toDestination());const g=l.current;if(n.current)try{g?n.current.triggerAttackRelease(["C4","E4","G4"],"4n"):(["C4","E4","G4","C5"].forEach((x,w)=>{var b;(b=n.current)==null||b.triggerAttackRelease(x,"8n",`+${w*.2}`)}),n.current.triggerAttackRelease(["C3","E3","G3"],"1n","+1"))}catch(y){console.error("Error playing test sequence:",y);try{n.current.triggerAttackRelease("C4","8n")}catch(x){throw console.error("Even simple note failed:",x),new Error("Audio system not working properly")}}else throw new Error("Could not initialize synthesizer")}catch(g){throw console.error("Test sound initialization error:",g),g}},[h]);return He.useEffect(()=>()=>{n.current&&(n.current.releaseAll(),n.current.dispose())},[]),{generateMusic:d,stopMusic:p,selectPreset:f,currentPreset:e,testSound:m,isMobile:l.current}}function A5({isActive:n,poses:e,selectedBodyParts:t}){var p;const[s,r]=He.useState(""),{generateMusic:o,selectPreset:i,currentPreset:a,testSound:l,isMobile:u}=y3(),c=[{name:"piano",label:"Piano",description:"Classic piano sounds"},{name:"synth",label:"Synthesizer",description:"Electronic sounds"}],h=u?[...c,{name:"mobile-optimized",label:"Mobile",description:"Optimized for mobile performance"}]:[...c,{name:"drums",label:"Drums",description:"Percussion kit"}];He.useEffect(()=>{u&&i("mobile-optimized")},[u,i]);const d=async()=>{r("Testing...");try{try{C2(new Tu({latencyHint:u?"interactive":"balanced",lookAhead:u?.1:.2,updateInterval:u?.03:.05}))}catch{console.warn("Could not create custom audio context, using default")}try{Io.state!=="running"&&await k2()}catch(f){console.warn("Error starting Tone context:",f),await Io.resume()}await l(),r("Success"),setTimeout(()=>r(""),1e3)}catch(f){console.error("Test sound error:",f),r("Error - Try again"),setTimeout(()=>r(""),3e3)}};return ue.jsxs("div",{className:"music-generator",children:[ue.jsxs("div",{className:"preset-selection",children:[ue.jsx("h4",{children:"Sound Preset"}),ue.jsx("div",{className:"preset-buttons",children:h.map(f=>ue.jsx("button",{onClick:()=>i(f.name),className:`preset-button ${a===f.name?"active":""}`,title:f.description,children:f.label},f.name))})]}),ue.jsxs("div",{className:`status ${n?"active":""}`,children:[ue.jsx("span",{className:"status-icon"}),n?"Generating Music":"Ready"]}),ue.jsx("div",{className:"test-controls",children:ue.jsx("button",{onClick:d,className:"test-button",children:"Test Sound"})}),s&&ue.jsx("div",{className:"test-status",children:s}),ue.jsx("div",{className:"visualization",children:n&&ue.jsx("div",{style:{width:"100%",height:"100%",display:"flex",alignItems:"center",justifyContent:"center",gap:"4px"},children:[...Array(12)].map((f,m)=>ue.jsx("div",{className:"visualization-bar",style:{height:`${20+Math.random()*40}px`,animationDelay:`${m*.1}s`}},m))})}),ue.jsx("div",{className:"preset-info",children:ue.jsx("p",{children:(p=h.find(f=>f.name===a))==null?void 0:p.description})})]})}var D5={};(function(){var n;function e(v){var I=0;return function(){return I<v.length?{done:!1,value:v[I++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(v,I,$){return v==Array.prototype||v==Object.prototype||(v[I]=$.value),v};function s(v){v=[typeof globalThis=="object"&&globalThis,v,typeof window=="object"&&window,typeof self=="object"&&self,typeof Do=="object"&&Do];for(var I=0;I<v.length;++I){var $=v[I];if($&&$.Math==Math)return $}throw Error("Cannot find global object")}var r=s(this);function o(v,I){if(I)e:{var $=r;v=v.split(".");for(var R=0;R<v.length-1;R++){var M=v[R];if(!(M in $))break e;$=$[M]}v=v[v.length-1],R=$[v],I=I(R),I!=R&&I!=null&&t($,v,{configurable:!0,writable:!0,value:I})}}o("Symbol",function(v){function I(U){if(this instanceof I)throw new TypeError("Symbol is not a constructor");return new $(R+(U||"")+"_"+M++,U)}function $(U,V){this.h=U,t(this,"description",{configurable:!0,writable:!0,value:V})}if(v)return v;$.prototype.toString=function(){return this.h};var R="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",M=0;return I}),o("Symbol.iterator",function(v){if(v)return v;v=Symbol("Symbol.iterator");for(var I="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),$=0;$<I.length;$++){var R=r[I[$]];typeof R=="function"&&typeof R.prototype[v]!="function"&&t(R.prototype,v,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return v});function i(v){return v={next:v},v[Symbol.iterator]=function(){return this},v}function a(v){var I=typeof Symbol<"u"&&Symbol.iterator&&v[Symbol.iterator];return I?I.call(v):{next:e(v)}}function l(v){if(!(v instanceof Array)){v=a(v);for(var I,$=[];!(I=v.next()).done;)$.push(I.value);v=$}return v}var u=typeof Object.assign=="function"?Object.assign:function(v,I){for(var $=1;$<arguments.length;$++){var R=arguments[$];if(R)for(var M in R)Object.prototype.hasOwnProperty.call(R,M)&&(v[M]=R[M])}return v};o("Object.assign",function(v){return v||u});var c=typeof Object.create=="function"?Object.create:function(v){function I(){}return I.prototype=v,new I},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var p={a:!0},f={};try{f.__proto__=p,d=f.a;break e}catch{}d=!1}h=d?function(v,I){if(v.__proto__=I,v.__proto__!==I)throw new TypeError(v+" is not extensible");return v}:null}var m=h;function g(v,I){if(v.prototype=c(I.prototype),v.prototype.constructor=v,m)m(v,I);else for(var $ in I)if($!="prototype")if(Object.defineProperties){var R=Object.getOwnPropertyDescriptor(I,$);R&&Object.defineProperty(v,$,R)}else v[$]=I[$];v.za=I.prototype}function y(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function x(v){if(v.m)throw new TypeError("Generator is already running");v.m=!0}y.prototype.u=function(v){this.i=v};function w(v,I){v.l={ma:I,na:!0},v.h=v.s||v.v}y.prototype.return=function(v){this.l={return:v},this.h=this.v};function b(v,I,$){return v.h=$,{value:I}}function S(v){this.h=new y,this.i=v}function C(v,I){x(v.h);var $=v.h.j;return $?k(v,"return"in $?$.return:function(R){return{value:R,done:!0}},I,v.h.return):(v.h.return(I),N(v))}function k(v,I,$,R){try{var M=I.call(v.h.j,$);if(!(M instanceof Object))throw new TypeError("Iterator result "+M+" is not an object");if(!M.done)return v.h.m=!1,M;var U=M.value}catch(V){return v.h.j=null,w(v.h,V),N(v)}return v.h.j=null,R.call(v.h,U),N(v)}function N(v){for(;v.h.h;)try{var I=v.i(v.h);if(I)return v.h.m=!1,{value:I.value,done:!1}}catch($){v.h.i=void 0,w(v.h,$)}if(v.h.m=!1,v.h.l){if(I=v.h.l,v.h.l=null,I.na)throw I.ma;return{value:I.return,done:!0}}return{value:void 0,done:!0}}function _(v){this.next=function(I){return x(v.h),v.h.j?I=k(v,v.h.j.next,I,v.h.u):(v.h.u(I),I=N(v)),I},this.throw=function(I){return x(v.h),v.h.j?I=k(v,v.h.j.throw,I,v.h.u):(w(v.h,I),I=N(v)),I},this.return=function(I){return C(v,I)},this[Symbol.iterator]=function(){return this}}function E(v){function I(R){return v.next(R)}function $(R){return v.throw(R)}return new Promise(function(R,M){function U(V){V.done?R(V.value):Promise.resolve(V.value).then(I,$).then(U,M)}U(v.next())})}function D(v){return E(new _(new S(v)))}o("Promise",function(v){function I(V){this.i=0,this.j=void 0,this.h=[],this.u=!1;var Q=this.l();try{V(Q.resolve,Q.reject)}catch(se){Q.reject(se)}}function $(){this.h=null}function R(V){return V instanceof I?V:new I(function(Q){Q(V)})}if(v)return v;$.prototype.i=function(V){if(this.h==null){this.h=[];var Q=this;this.j(function(){Q.m()})}this.h.push(V)};var M=r.setTimeout;$.prototype.j=function(V){M(V,0)},$.prototype.m=function(){for(;this.h&&this.h.length;){var V=this.h;this.h=[];for(var Q=0;Q<V.length;++Q){var se=V[Q];V[Q]=null;try{se()}catch(me){this.l(me)}}}this.h=null},$.prototype.l=function(V){this.j(function(){throw V})},I.prototype.l=function(){function V(me){return function(Ce){se||(se=!0,me.call(Q,Ce))}}var Q=this,se=!1;return{resolve:V(this.I),reject:V(this.m)}},I.prototype.I=function(V){if(V===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(V instanceof I)this.L(V);else{e:switch(typeof V){case"object":var Q=V!=null;break e;case"function":Q=!0;break e;default:Q=!1}Q?this.F(V):this.s(V)}},I.prototype.F=function(V){var Q=void 0;try{Q=V.then}catch(se){this.m(se);return}typeof Q=="function"?this.M(Q,V):this.s(V)},I.prototype.m=function(V){this.v(2,V)},I.prototype.s=function(V){this.v(1,V)},I.prototype.v=function(V,Q){if(this.i!=0)throw Error("Cannot settle("+V+", "+Q+"): Promise already settled in state"+this.i);this.i=V,this.j=Q,this.i===2&&this.K(),this.H()},I.prototype.K=function(){var V=this;M(function(){if(V.D()){var Q=r.console;typeof Q<"u"&&Q.error(V.j)}},1)},I.prototype.D=function(){if(this.u)return!1;var V=r.CustomEvent,Q=r.Event,se=r.dispatchEvent;return typeof se>"u"?!0:(typeof V=="function"?V=new V("unhandledrejection",{cancelable:!0}):typeof Q=="function"?V=new Q("unhandledrejection",{cancelable:!0}):(V=r.document.createEvent("CustomEvent"),V.initCustomEvent("unhandledrejection",!1,!0,V)),V.promise=this,V.reason=this.j,se(V))},I.prototype.H=function(){if(this.h!=null){for(var V=0;V<this.h.length;++V)U.i(this.h[V]);this.h=null}};var U=new $;return I.prototype.L=function(V){var Q=this.l();V.T(Q.resolve,Q.reject)},I.prototype.M=function(V,Q){var se=this.l();try{V.call(Q,se.resolve,se.reject)}catch(me){se.reject(me)}},I.prototype.then=function(V,Q){function se(ze,Ee){return typeof ze=="function"?function(Qe){try{me(ze(Qe))}catch(ht){Ce(ht)}}:Ee}var me,Ce,Ye=new I(function(ze,Ee){me=ze,Ce=Ee});return this.T(se(V,me),se(Q,Ce)),Ye},I.prototype.catch=function(V){return this.then(void 0,V)},I.prototype.T=function(V,Q){function se(){switch(me.i){case 1:V(me.j);break;case 2:Q(me.j);break;default:throw Error("Unexpected state: "+me.i)}}var me=this;this.h==null?U.i(se):this.h.push(se),this.u=!0},I.resolve=R,I.reject=function(V){return new I(function(Q,se){se(V)})},I.race=function(V){return new I(function(Q,se){for(var me=a(V),Ce=me.next();!Ce.done;Ce=me.next())R(Ce.value).T(Q,se)})},I.all=function(V){var Q=a(V),se=Q.next();return se.done?R([]):new I(function(me,Ce){function Ye(Qe){return function(ht){ze[Qe]=ht,Ee--,Ee==0&&me(ze)}}var ze=[],Ee=0;do ze.push(void 0),Ee++,R(se.value).T(Ye(ze.length-1),Ce),se=Q.next();while(!se.done)})},I});function P(v,I){v instanceof String&&(v+="");var $=0,R=!1,M={next:function(){if(!R&&$<v.length){var U=$++;return{value:I(U,v[U]),done:!1}}return R=!0,{done:!0,value:void 0}}};return M[Symbol.iterator]=function(){return M},M}o("Array.prototype.keys",function(v){return v||function(){return P(this,function(I){return I})}}),o("Array.prototype.fill",function(v){return v||function(I,$,R){var M=this.length||0;for(0>$&&($=Math.max(0,M+$)),(R==null||R>M)&&(R=M),R=Number(R),0>R&&(R=Math.max(0,M+R)),$=Number($||0);$<R;$++)this[$]=I;return this}});function F(v){return v||Array.prototype.fill}o("Int8Array.prototype.fill",F),o("Uint8Array.prototype.fill",F),o("Uint8ClampedArray.prototype.fill",F),o("Int16Array.prototype.fill",F),o("Uint16Array.prototype.fill",F),o("Int32Array.prototype.fill",F),o("Uint32Array.prototype.fill",F),o("Float32Array.prototype.fill",F),o("Float64Array.prototype.fill",F),o("Object.is",function(v){return v||function(I,$){return I===$?I!==0||1/I===1/$:I!==I&&$!==$}}),o("Array.prototype.includes",function(v){return v||function(I,$){var R=this;R instanceof String&&(R=String(R));var M=R.length;for($=$||0,0>$&&($=Math.max($+M,0));$<M;$++){var U=R[$];if(U===I||Object.is(U,I))return!0}return!1}}),o("String.prototype.includes",function(v){return v||function(I,$){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(I instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(I,$||0)!==-1}});var L=this||self;function B(v,I){v=v.split(".");var $=L;v[0]in $||typeof $.execScript>"u"||$.execScript("var "+v[0]);for(var R;v.length&&(R=v.shift());)v.length||I===void 0?$[R]&&$[R]!==Object.prototype[R]?$=$[R]:$=$[R]={}:$[R]=I}function W(v){var I;e:{if((I=L.navigator)&&(I=I.userAgent))break e;I=""}return I.indexOf(v)!=-1}var Y=Array.prototype.map?function(v,I){return Array.prototype.map.call(v,I,void 0)}:function(v,I){for(var $=v.length,R=Array($),M=typeof v=="string"?v.split(""):v,U=0;U<$;U++)U in M&&(R[U]=I.call(void 0,M[U],U,v));return R},z={},H=null;function Z(v){var I=v.length,$=3*I/4;$%3?$=Math.floor($):"=.".indexOf(v[I-1])!=-1&&($="=.".indexOf(v[I-2])!=-1?$-2:$-1);var R=new Uint8Array($),M=0;return te(v,function(U){R[M++]=U}),M!==$?R.subarray(0,M):R}function te(v,I){function $(se){for(;R<v.length;){var me=v.charAt(R++),Ce=H[me];if(Ce!=null)return Ce;if(!/^[\s\xa0]*$/.test(me))throw Error("Unknown base64 encoding at char: "+me)}return se}re();for(var R=0;;){var M=$(-1),U=$(0),V=$(64),Q=$(64);if(Q===64&&M===-1)break;I(M<<2|U>>4),V!=64&&(I(U<<4&240|V>>2),Q!=64&&I(V<<6&192|Q))}}function re(){if(!H){H={};for(var v="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),I=["+/=","+/","-_=","-_.","-_"],$=0;5>$;$++){var R=v.concat(I[$].split(""));z[$]=R;for(var M=0;M<R.length;M++){var U=R[M];H[U]===void 0&&(H[U]=M)}}}}var le=typeof Uint8Array<"u",he=!(W("Trident")||W("MSIE"))&&typeof L.btoa=="function";function ie(v){if(!he){var I;I===void 0&&(I=0),re(),I=z[I];for(var $=Array(Math.floor(v.length/3)),R=I[64]||"",M=0,U=0;M<v.length-2;M+=3){var V=v[M],Q=v[M+1],se=v[M+2],me=I[V>>2];V=I[(V&3)<<4|Q>>4],Q=I[(Q&15)<<2|se>>6],se=I[se&63],$[U++]=me+V+Q+se}switch(me=0,se=R,v.length-M){case 2:me=v[M+1],se=I[(me&15)<<2]||R;case 1:v=v[M],$[U]=I[v>>2]+I[(v&3)<<4|me>>4]+se+R}return $.join("")}for(I="";10240<v.length;)I+=String.fromCharCode.apply(null,v.subarray(0,10240)),v=v.subarray(10240);return I+=String.fromCharCode.apply(null,v),btoa(I)}var de=RegExp("[-_.]","g");function be(v){switch(v){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function ce(v){if(!he)return Z(v);de.test(v)&&(v=v.replace(de,be)),v=atob(v);for(var I=new Uint8Array(v.length),$=0;$<v.length;$++)I[$]=v.charCodeAt($);return I}var Pe;function Be(){return Pe||(Pe=new Uint8Array(0))}var We={},ct=typeof Uint8Array.prototype.slice=="function",Xe=0,lt=0;function fe(v){var I=0>v;v=Math.abs(v);var $=v>>>0;v=Math.floor((v-$)/4294967296),I&&($=a(Je($,v)),I=$.next().value,v=$.next().value,$=I),Xe=$>>>0,lt=v>>>0}var Ie=typeof BigInt=="function";function Je(v,I){return I=~I,v?v=~v+1:I+=1,[v,I]}function Ge(v,I){this.i=v>>>0,this.h=I>>>0}function nt(v){if(!v)return st||(st=new Ge(0,0));if(!/^-?\d+$/.test(v))return null;if(16>v.length)fe(Number(v));else if(Ie)v=BigInt(v),Xe=Number(v&BigInt(4294967295))>>>0,lt=Number(v>>BigInt(32)&BigInt(4294967295));else{var I=+(v[0]==="-");lt=Xe=0;for(var $=v.length,R=I,M=($-I)%6+I;M<=$;R=M,M+=6)R=Number(v.slice(R,M)),lt*=1e6,Xe=1e6*Xe+R,4294967296<=Xe&&(lt+=Xe/4294967296|0,Xe%=4294967296);I&&(I=a(Je(Xe,lt)),v=I.next().value,I=I.next().value,Xe=v,lt=I)}return new Ge(Xe,lt)}var st;function en(v,I){return Error("Invalid wire type: "+v+" (at position "+I+")")}function Bt(){return Error("Failed to read varint, encoding is invalid.")}function vs(v,I){return Error("Tried to read past the end of the data "+I+" > "+v)}function ln(){throw Error("Invalid UTF8")}function Js(v,I){return I=String.fromCharCode.apply(null,I),v==null?I:v+I}var Fs=void 0,Ur,ti=typeof TextDecoder<"u",da,Fd=typeof TextEncoder<"u",Ku;function sg(v){if(v!==We)throw Error("illegal external caller")}function ni(v,I){if(sg(I),this.V=v,v!=null&&v.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ld(){return Ku||(Ku=new ni(null,We))}function rg(v){sg(We);var I=v.V;return I=I==null||le&&I!=null&&I instanceof Uint8Array?I:typeof I=="string"?ce(I):null,I==null?I:v.V=I}function gB(v){if(typeof v=="string")return{buffer:ce(v),C:!1};if(Array.isArray(v))return{buffer:new Uint8Array(v),C:!1};if(v.constructor===Uint8Array)return{buffer:v,C:!1};if(v.constructor===ArrayBuffer)return{buffer:new Uint8Array(v),C:!1};if(v.constructor===ni)return{buffer:rg(v)||Be(),C:!0};if(v instanceof Uint8Array)return{buffer:new Uint8Array(v.buffer,v.byteOffset,v.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function YI(v,I){this.i=null,this.m=!1,this.h=this.j=this.l=0,Aw(this,v,I)}function Aw(v,I,$){$=$===void 0?{}:$,v.S=$.S===void 0?!1:$.S,I&&(I=gB(I),v.i=I.buffer,v.m=I.C,v.l=0,v.j=v.i.length,v.h=v.l)}YI.prototype.reset=function(){this.h=this.l};function bl(v,I){if(v.h=I,I>v.j)throw vs(v.j,I)}function Md(v){var I=v.i,$=v.h,R=I[$++],M=R&127;if(R&128&&(R=I[$++],M|=(R&127)<<7,R&128&&(R=I[$++],M|=(R&127)<<14,R&128&&(R=I[$++],M|=(R&127)<<21,R&128&&(R=I[$++],M|=R<<28,R&128&&I[$++]&128&&I[$++]&128&&I[$++]&128&&I[$++]&128&&I[$++]&128)))))throw Bt();return bl(v,$),M}function QI(v,I){if(0>I)throw Error("Tried to read a negative byte length: "+I);var $=v.h,R=$+I;if(R>v.j)throw vs(I,v.j-$);return v.h=R,$}var ZI=[];function Dw(){this.h=[]}Dw.prototype.length=function(){return this.h.length},Dw.prototype.end=function(){var v=this.h;return this.h=[],v};function JI(v,I,$){for(;0<$||127<I;)v.h.push(I&127|128),I=(I>>>7|$<<25)>>>0,$>>>=7;v.h.push(I)}function Sl(v,I){for(;127<I;)v.h.push(I&127|128),I>>>=7;v.h.push(I)}function Ow(v,I){if(ZI.length){var $=ZI.pop();Aw($,v,I),v=$}else v=new YI(v,I);this.h=v,this.j=this.h.h,this.i=this.l=-1,this.setOptions(I)}Ow.prototype.setOptions=function(v){v=v===void 0?{}:v,this.ca=v.ca===void 0?!1:v.ca},Ow.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function eN(v){var I=v.h;if(I.h==I.j)return!1;v.j=v.h.h;var $=Md(v.h)>>>0;if(I=$>>>3,$&=7,!(0<=$&&5>=$))throw en($,v.j);if(1>I)throw Error("Invalid field number: "+I+" (at position "+v.j+")");return v.l=I,v.i=$,!0}function og(v){switch(v.i){case 0:if(v.i!=0)og(v);else e:{v=v.h;for(var I=v.h,$=I+10,R=v.i;I<$;)if(!(R[I++]&128)){bl(v,I);break e}throw Bt()}break;case 1:v=v.h,bl(v,v.h+8);break;case 2:v.i!=2?og(v):(I=Md(v.h)>>>0,v=v.h,bl(v,v.h+I));break;case 5:v=v.h,bl(v,v.h+4);break;case 3:I=v.l;do{if(!eN(v))throw Error("Unmatched start-group tag: stream EOF");if(v.i==4){if(v.l!=I)throw Error("Unmatched end-group tag");break}og(v)}while(1);break;default:throw en(v.i,v.j)}}var ig=[];function yB(){this.j=[],this.i=0,this.h=new Dw}function Xu(v,I){I.length!==0&&(v.j.push(I),v.i+=I.length)}function xB(v,I){if(I=I.R){Xu(v,v.h.end());for(var $=0;$<I.length;$++)Xu(v,rg(I[$])||Be())}}var Oi=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Cl(v,I){return Oi?v[Oi]|=I:v.A!==void 0?v.A|=I:(Object.defineProperties(v,{A:{value:I,configurable:!0,writable:!0,enumerable:!1}}),I)}function tN(v,I){Oi?v[Oi]&&(v[Oi]&=~I):v.A!==void 0&&(v.A&=~I)}function In(v){var I;return Oi?I=v[Oi]:I=v.A,I??0}function si(v,I){Oi?v[Oi]=I:v.A!==void 0?v.A=I:Object.defineProperties(v,{A:{value:I,configurable:!0,writable:!0,enumerable:!1}})}function Pw(v){return Cl(v,1),v}function wB(v,I){si(I,(v|0)&-51)}function ag(v,I){si(I,(v|18)&-41)}var Fw={};function lg(v){return v!==null&&typeof v=="object"&&!Array.isArray(v)&&v.constructor===Object}var zd,nN=[];si(nN,23),zd=Object.freeze(nN);function Lw(v){if(In(v.o)&2)throw Error("Cannot mutate an immutable Message")}function Mw(v){var I=v.length;(I=I?v[I-1]:void 0)&&lg(I)?I.g=1:(I={},v.push((I.g=1,I)))}function sN(v){var I=v.i+v.G;return v.B||(v.B=v.o[I]={})}function wo(v,I){return I===-1?null:I>=v.i?v.B?v.B[I]:void 0:v.o[I+v.G]}function ri(v,I,$,R){Lw(v),Vd(v,I,$,R)}function Vd(v,I,$,R){v.j&&(v.j=void 0),I>=v.i||R?sN(v)[I]=$:(v.o[I+v.G]=$,(v=v.B)&&I in v&&delete v[I])}function zw(v,I,$,R){var M=wo(v,I);Array.isArray(M)||(M=zd);var U=In(M);if(U&1||Pw(M),R)U&2||Cl(M,2),$&1||Object.freeze(M);else{R=!($&2);var V=U&2;$&1||!V?R&&U&16&&!V&&tN(M,16):(M=Pw(Array.prototype.slice.call(M)),Vd(v,I,M))}return M}function Vw(v,I){var $=wo(v,I),R=$==null?$:typeof $=="number"||$==="NaN"||$==="Infinity"||$==="-Infinity"?Number($):void 0;return R!=null&&R!==$&&Vd(v,I,R),R}function rN(v,I,$,R,M){v.h||(v.h={});var U=v.h[$],V=zw(v,$,3,M);if(!U){var Q=V;U=[];var se=!!(In(v.o)&16);V=!!(In(Q)&2);var me=Q;!M&&V&&(Q=Array.prototype.slice.call(Q));for(var Ce=V,Ye=0;Ye<Q.length;Ye++){var ze=Q[Ye],Ee=I,Qe=!1;if(Qe=Qe===void 0?!1:Qe,ze=Array.isArray(ze)?new Ee(ze):Qe?new Ee:void 0,ze!==void 0){Ee=ze.o;var ht=Qe=In(Ee);V&&(ht|=2),se&&(ht|=16),ht!=Qe&&si(Ee,ht),Ee=ht,Ce=Ce||!!(2&Ee),U.push(ze)}}return v.h[$]=U,se=In(Q),I=se|33,I=Ce?I&-9:I|8,se!=I&&(Ce=Q,Object.isFrozen(Ce)&&(Ce=Array.prototype.slice.call(Ce)),si(Ce,I),Q=Ce),me!==Q&&Vd(v,$,Q),(M||R&&V)&&Cl(U,2),R&&Object.freeze(U),U}return M||(M=Object.isFrozen(U),R&&!M?Object.freeze(U):!R&&M&&(U=Array.prototype.slice.call(U),v.h[$]=U)),U}function Bw(v,I,$){var R=!!(In(v.o)&2);if(I=rN(v,I,$,R,R),v=zw(v,$,3,R),!(R||In(v)&8)){for(R=0;R<I.length;R++){if($=I[R],In($.o)&2){var M=cN($,!1);M.j=$}else M=$;$!==M&&(I[R]=M,v[R]=M.o)}Cl(v,8)}return I}function oi(v,I,$){if($!=null&&typeof $!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof $+": "+$);ri(v,I,$)}function oN(v,I,$,R,M){Lw(v);var U=rN(v,$,I,!1,!1);return $=R??new $,v=zw(v,I,2,!1),M!=null?(U.splice(M,0,$),v.splice(M,0,$.o)):(U.push($),v.push($.o)),$.C()&&tN(v,8),$}function ug(v,I){return v??I}function ii(v,I,$){return $=$===void 0?0:$,ug(Vw(v,I),$)}var cg;function vB(v){switch(typeof v){case"number":return isFinite(v)?v:String(v);case"object":if(v)if(Array.isArray(v)){if(In(v)&128)return v=Array.prototype.slice.call(v),Mw(v),v}else{if(le&&v!=null&&v instanceof Uint8Array)return ie(v);if(v instanceof ni){var I=v.V;return I==null?"":typeof I=="string"?I:v.V=ie(I)}}}return v}function iN(v,I,$,R){if(v!=null){if(Array.isArray(v))v=Ww(v,I,$,R!==void 0);else if(lg(v)){var M={},U;for(U in v)M[U]=iN(v[U],I,$,R);v=M}else v=I(v,R);return v}}function Ww(v,I,$,R){var M=In(v);R=R?!!(M&16):void 0,v=Array.prototype.slice.call(v);for(var U=0;U<v.length;U++)v[U]=iN(v[U],I,$,R);return $(M,v),v}function bB(v){return v.ja===Fw?v.toJSON():vB(v)}function SB(v,I){v&128&&Mw(I)}function aN(v,I,$){if($=$===void 0?ag:$,v!=null){if(le&&v instanceof Uint8Array)return v.length?new ni(new Uint8Array(v),We):Ld();if(Array.isArray(v)){var R=In(v);return R&2?v:I&&!(R&32)&&(R&16||R===0)?(si(v,R|2),v):(v=Ww(v,aN,R&4?ag:$,!0),I=In(v),I&4&&I&2&&Object.freeze(v),v)}return v.ja===Fw?uN(v):v}}function lN(v,I,$,R,M,U,V){if(v=v.h&&v.h[$]){if(R=In(v),R&2?R=v:(U=Y(v,uN),ag(R,U),Object.freeze(U),R=U),Lw(I),V=R==null?zd:Pw([]),R!=null){for(U=!!R.length,v=0;v<R.length;v++){var Q=R[v];U=U&&!(In(Q.o)&2),V[v]=Q.o}U=(U?8:0)|1,v=In(V),(v&U)!==U&&(Object.isFrozen(V)&&(V=Array.prototype.slice.call(V)),si(V,v|U)),I.h||(I.h={}),I.h[$]=R}else I.h&&(I.h[$]=void 0);Vd(I,$,V,M)}else ri(I,$,aN(R,U,V),M)}function uN(v){return In(v.o)&2||(v=cN(v,!0),Cl(v.o,2)),v}function cN(v,I){var $=v.o,R=[];Cl(R,16);var M=v.constructor.h;if(M&&R.push(M),M=v.B,M){R.length=$.length,R.fill(void 0,R.length,$.length);var U={};R[R.length-1]=U}In($)&128&&Mw(R),I=I||v.C()?ag:wB,U=v.constructor,cg=R,R=new U(R),cg=void 0,v.R&&(R.R=v.R.slice()),U=!!(In($)&16);for(var V=M?$.length-1:$.length,Q=0;Q<V;Q++)lN(v,R,Q-v.G,$[Q],!1,U,I);if(M)for(var se in M)lN(v,R,+se,M[se],!0,U,I);return R}function er(v,I,$){v==null&&(v=cg),cg=void 0;var R=this.constructor.i||0,M=0<R,U=this.constructor.h,V=!1;if(v==null){v=U?[U]:[];var Q=48,se=!0;M&&(R=0,Q|=128),si(v,Q)}else{if(!Array.isArray(v)||U&&U!==v[0])throw Error();var me=Q=Cl(v,0);if((se=(16&me)!==0)&&((V=(32&me)!==0)||(me|=32)),M){if(128&me)R=0;else if(0<v.length){var Ce=v[v.length-1];if(lg(Ce)&&"g"in Ce){R=0,me|=128,delete Ce.g;var Ye=!0,ze;for(ze in Ce){Ye=!1;break}Ye&&v.pop()}}}else if(128&me)throw Error();Q!==me&&si(v,me)}this.G=(U?0:-1)-R,this.h=void 0,this.o=v;e:{if(U=this.o.length,R=U-1,U&&(U=this.o[R],lg(U))){this.B=U,this.i=R-this.G;break e}I!==void 0&&-1<I?(this.i=Math.max(I,R+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!M&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if($){I=se&&!V&&!0,M=this.i;var Ee;for(se=0;se<$.length;se++)V=$[se],V<M?(V+=this.G,(R=v[V])?hN(R,I):v[V]=zd):(Ee||(Ee=sN(this)),(R=Ee[V])?hN(R,I):Ee[V]=zd)}}er.prototype.toJSON=function(){return Ww(this.o,bB,SB)},er.prototype.C=function(){return!!(In(this.o)&2)};function hN(v,I){if(Array.isArray(v)){var $=In(v),R=1;!I||$&2||(R|=16),($&R)!==R&&si(v,$|R)}}er.prototype.ja=Fw,er.prototype.toString=function(){return this.o.toString()};function dN(v,I,$){if($){var R={},M;for(M in $){var U=$[M],V=U.ra;V||(R.J=U.xa||U.oa.W,U.ia?(R.aa=yN(U.ia),V=function(Q){return function(se,me,Ce){return Q.J(se,me,Ce,Q.aa)}}(R)):U.ka?(R.Z=xN(U.da.P,U.ka),V=function(Q){return function(se,me,Ce){return Q.J(se,me,Ce,Q.Z)}}(R)):V=R.J,U.ra=V),V(I,v,U.da),R={J:R.J,aa:R.aa,Z:R.Z}}}xB(I,v)}var hg=Symbol();function pN(v,I,$){return v[hg]||(v[hg]=function(R,M){return I(R,M,$)})}function fN(v){var I=v[hg];if(!I){var $=Gw(v);I=function(R,M){return wN(R,M,$)},v[hg]=I}return I}function CB(v){var I=v.ia;if(I)return fN(I);if(I=v.wa)return pN(v.da.P,I,v.ka)}function kB(v){var I=CB(v),$=v.da,R=v.oa.U;return I?function(M,U){return R(M,U,$,I)}:function(M,U){return R(M,U,$)}}function mN(v,I){var $=v[I];return typeof $=="function"&&$.length===0&&($=$(),v[I]=$),Array.isArray($)&&(Wd in $||Bd in $||0<$.length&&typeof $[0]=="function")?$:void 0}function gN(v,I,$,R,M,U){I.P=v[0];var V=1;if(v.length>V&&typeof v[V]!="number"){var Q=v[V++];$(I,Q)}for(;V<v.length;){$=v[V++];for(var se=V+1;se<v.length&&typeof v[se]!="number";)se++;switch(Q=v[V++],se-=V,se){case 0:R(I,$,Q);break;case 1:(se=mN(v,V))?(V++,M(I,$,Q,se)):R(I,$,Q,v[V++]);break;case 2:se=V++,se=mN(v,se),M(I,$,Q,se,v[V++]);break;case 3:U(I,$,Q,v[V++],v[V++],v[V++]);break;case 4:U(I,$,Q,v[V++],v[V++],v[V++],v[V++]);break;default:throw Error("unexpected number of binary field arguments: "+se)}}return I}var dg=Symbol();function yN(v){var I=v[dg];if(!I){var $=Uw(v);I=function(R,M){return vN(R,M,$)},v[dg]=I}return I}function xN(v,I){var $=v[dg];return $||($=function(R,M){return dN(R,M,I)},v[dg]=$),$}var Bd=Symbol();function IB(v,I){v.push(I)}function NB(v,I,$){v.push(I,$.W)}function TB(v,I,$,R){var M=yN(R),U=Uw(R).P,V=$.W;v.push(I,function(Q,se,me){return V(Q,se,me,U,M)})}function $B(v,I,$,R,M,U){var V=xN(R,U),Q=$.W;v.push(I,function(se,me,Ce){return Q(se,me,Ce,R,V)})}function Uw(v){var I=v[Bd];return I||(I=gN(v,v[Bd]=[],IB,NB,TB,$B),Wd in v&&Bd in v&&(v.length=0),I)}var Wd=Symbol();function _B(v,I){v[0]=I}function EB(v,I,$,R){var M=$.U;v[I]=R?function(U,V,Q){return M(U,V,Q,R)}:M}function RB(v,I,$,R,M){var U=$.U,V=fN(R),Q=Gw(R).P;v[I]=function(se,me,Ce){return U(se,me,Ce,Q,V,M)}}function AB(v,I,$,R,M,U,V){var Q=$.U,se=pN(R,M,U);v[I]=function(me,Ce,Ye){return Q(me,Ce,Ye,R,se,V)}}function Gw(v){var I=v[Wd];return I||(I=gN(v,v[Wd]={},_B,EB,RB,AB),Wd in v&&Bd in v&&(v.length=0),I)}function wN(v,I,$){for(;eN(I)&&I.i!=4;){var R=I.l,M=$[R];if(!M){var U=$[0];U&&(U=U[R])&&(M=$[R]=kB(U))}if(!M||!M(I,v,R)){M=I,R=v,U=M.j,og(M);var V=M;if(!V.ca){if(M=V.h.h-U,V.h.h=U,V=V.h,M==0)M=Ld();else{if(U=QI(V,M),V.S&&V.m)M=V.i.subarray(U,U+M);else{V=V.i;var Q=U;M=U+M,M=Q===M?Be():ct?V.slice(Q,M):new Uint8Array(V.subarray(Q,M))}M=M.length==0?Ld():new ni(M,We)}(U=R.R)?U.push(M):R.R=[M]}}}return v}function vN(v,I,$){for(var R=$.length,M=R%2==1,U=M?1:0;U<R;U+=2)(0,$[U+1])(I,v,$[U]);dN(v,I,M?$[0]:void 0)}function Ud(v,I){return{U:v,W:I}}var vo=Ud(function(v,I,$){if(v.i!==5)return!1;v=v.h;var R=v.i,M=v.h,U=R[M],V=R[M+1],Q=R[M+2];return R=R[M+3],bl(v,v.h+4),V=(U<<0|V<<8|Q<<16|R<<24)>>>0,v=2*(V>>31)+1,U=V>>>23&255,V&=8388607,ri(I,$,U==255?V?NaN:1/0*v:U==0?v*Math.pow(2,-149)*V:v*Math.pow(2,U-150)*(V+Math.pow(2,23))),!0},function(v,I,$){if(I=Vw(I,$),I!=null){Sl(v.h,8*$+5),v=v.h;var R=+I;R===0?0<1/R?Xe=lt=0:(lt=0,Xe=2147483648):isNaN(R)?(lt=0,Xe=2147483647):(R=($=0>R?-2147483648:0)?-R:R,34028234663852886e22<R?(lt=0,Xe=($|2139095040)>>>0):11754943508222875e-54>R?(R=Math.round(R/Math.pow(2,-149)),lt=0,Xe=($|R)>>>0):(I=Math.floor(Math.log(R)/Math.LN2),R*=Math.pow(2,-I),R=Math.round(8388608*R),16777216<=R&&++I,lt=0,Xe=($|I+127<<23|R&8388607)>>>0)),$=Xe,v.h.push($>>>0&255),v.h.push($>>>8&255),v.h.push($>>>16&255),v.h.push($>>>24&255)}}),DB=Ud(function(v,I,$){if(v.i!==0)return!1;var R=v.h,M=0,U=v=0,V=R.i,Q=R.h;do{var se=V[Q++];M|=(se&127)<<U,U+=7}while(32>U&&se&128);for(32<U&&(v|=(se&127)>>4),U=3;32>U&&se&128;U+=7)se=V[Q++],v|=(se&127)<<U;if(bl(R,Q),128>se)R=M>>>0,se=v>>>0,(v=se&2147483648)&&(R=~R+1>>>0,se=~se>>>0,R==0&&(se=se+1>>>0)),R=4294967296*se+(R>>>0);else throw Bt();return ri(I,$,v?-R:R),!0},function(v,I,$){I=wo(I,$),I!=null&&(typeof I=="string"&&nt(I),I!=null&&(Sl(v.h,8*$),typeof I=="number"?(v=v.h,fe(I),JI(v,Xe,lt)):($=nt(I),JI(v.h,$.i,$.h))))}),OB=Ud(function(v,I,$){return v.i!==0?!1:(ri(I,$,Md(v.h)),!0)},function(v,I,$){if(I=wo(I,$),I!=null&&I!=null)if(Sl(v.h,8*$),v=v.h,$=I,0<=$)Sl(v,$);else{for(I=0;9>I;I++)v.h.push($&127|128),$>>=7;v.h.push(1)}}),bN=Ud(function(v,I,$){if(v.i!==2)return!1;var R=Md(v.h)>>>0;v=v.h;var M=QI(v,R);if(v=v.i,ti){var U=v,V;(V=Ur)||(V=Ur=new TextDecoder("utf-8",{fatal:!0})),v=M+R,U=M===0&&v===U.length?U:U.subarray(M,v);try{var Q=V.decode(U)}catch(Ye){if(Fs===void 0){try{V.decode(new Uint8Array([128]))}catch{}try{V.decode(new Uint8Array([97])),Fs=!0}catch{Fs=!1}}throw!Fs&&(Ur=void 0),Ye}}else{Q=M,R=Q+R,M=[];for(var se=null,me,Ce;Q<R;)me=v[Q++],128>me?M.push(me):224>me?Q>=R?ln():(Ce=v[Q++],194>me||(Ce&192)!==128?(Q--,ln()):M.push((me&31)<<6|Ce&63)):240>me?Q>=R-1?ln():(Ce=v[Q++],(Ce&192)!==128||me===224&&160>Ce||me===237&&160<=Ce||((U=v[Q++])&192)!==128?(Q--,ln()):M.push((me&15)<<12|(Ce&63)<<6|U&63)):244>=me?Q>=R-2?ln():(Ce=v[Q++],(Ce&192)!==128||(me<<28)+(Ce-144)>>30||((U=v[Q++])&192)!==128||((V=v[Q++])&192)!==128?(Q--,ln()):(me=(me&7)<<18|(Ce&63)<<12|(U&63)<<6|V&63,me-=65536,M.push((me>>10&1023)+55296,(me&1023)+56320))):ln(),8192<=M.length&&(se=Js(se,M),M.length=0);Q=Js(se,M)}return ri(I,$,Q),!0},function(v,I,$){if(I=wo(I,$),I!=null){var R=!1;if(R=R===void 0?!1:R,Fd){if(R&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(I))throw Error("Found an unpaired surrogate");I=(da||(da=new TextEncoder)).encode(I)}else{for(var M=0,U=new Uint8Array(3*I.length),V=0;V<I.length;V++){var Q=I.charCodeAt(V);if(128>Q)U[M++]=Q;else{if(2048>Q)U[M++]=Q>>6|192;else{if(55296<=Q&&57343>=Q){if(56319>=Q&&V<I.length){var se=I.charCodeAt(++V);if(56320<=se&&57343>=se){Q=1024*(Q-55296)+se-56320+65536,U[M++]=Q>>18|240,U[M++]=Q>>12&63|128,U[M++]=Q>>6&63|128,U[M++]=Q&63|128;continue}else V--}if(R)throw Error("Found an unpaired surrogate");Q=65533}U[M++]=Q>>12|224,U[M++]=Q>>6&63|128}U[M++]=Q&63|128}}I=M===U.length?U:U.subarray(0,M)}Sl(v.h,8*$+2),Sl(v.h,I.length),Xu(v,v.h.end()),Xu(v,I)}}),SN=Ud(function(v,I,$,R,M){if(v.i!==2)return!1;I=oN(I,$,R),$=v.h.j,R=Md(v.h)>>>0;var U=v.h.h+R,V=U-$;if(0>=V&&(v.h.j=U,M(I,v,void 0,void 0,void 0),V=U-v.h.h),V)throw Error("Message parsing ended unexpectedly. Expected to read "+(R+" bytes, instead read "+(R-V)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return v.h.h=U,v.h.j=$,!0},function(v,I,$,R,M){if(I=Bw(I,R,$),I!=null)for(R=0;R<I.length;R++){var U=v;Sl(U.h,8*$+2);var V=U.h.end();Xu(U,V),V.push(U.i),U=V,M(I[R],v),V=v;var Q=U.pop();for(Q=V.i+V.h.length()-Q;127<Q;)U.push(Q&127|128),Q>>>=7,V.i++;U.push(Q),V.i++}});function Hw(v){return function(I,$){e:{if(ig.length){var R=ig.pop();R.setOptions($),Aw(R.h,I,$),I=R}else I=new Ow(I,$);try{var M=Gw(v),U=wN(new M.P,I,M);break e}finally{M=I.h,M.i=null,M.m=!1,M.l=0,M.j=0,M.h=0,M.S=!1,I.l=-1,I.i=-1,100>ig.length&&ig.push(I)}U=void 0}return U}}function jw(v){return function(){var I=new yB;vN(this,I,Uw(v)),Xu(I,I.h.end());for(var $=new Uint8Array(I.i),R=I.j,M=R.length,U=0,V=0;V<M;V++){var Q=R[V];$.set(Q,U),U+=Q.length}return I.j=[$],$}}function Yu(v){er.call(this,v)}g(Yu,er);var CN=[Yu,1,OB,2,vo,3,bN,4,bN];Yu.prototype.l=jw(CN);function qw(v){er.call(this,v,-1,PB)}g(qw,er),qw.prototype.addClassification=function(v,I){return oN(this,1,Yu,v,I),this};var PB=[1],FB=Hw([qw,1,SN,CN]);function Gd(v){er.call(this,v)}g(Gd,er);var kN=[Gd,1,vo,2,vo,3,vo,4,vo,5,vo];Gd.prototype.l=jw(kN);function IN(v){er.call(this,v,-1,LB)}g(IN,er);var LB=[1],MB=Hw([IN,1,SN,kN]);function pg(v){er.call(this,v)}g(pg,er);var NN=[pg,1,vo,2,vo,3,vo,4,vo,5,vo,6,DB],zB=Hw(NN);pg.prototype.l=jw(NN);function TN(v,I,$){if($=v.createShader($===0?v.VERTEX_SHADER:v.FRAGMENT_SHADER),v.shaderSource($,I),v.compileShader($),!v.getShaderParameter($,v.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+v.getShaderInfoLog($));return $}function VB(v){return Bw(v,Yu,1).map(function(I){var $=wo(I,1);return{index:$??0,qa:ii(I,2),label:wo(I,3)!=null?ug(wo(I,3),""):void 0,displayName:wo(I,4)!=null?ug(wo(I,4),""):void 0}})}function BB(v){return{x:ii(v,1),y:ii(v,2),z:ii(v,3),visibility:Vw(v,4)!=null?ii(v,4):void 0}}function Kw(v){return Bw(MB(v),Gd,1).map(BB)}function Xw(v,I){this.i=v,this.h=I,this.m=0}function $N(v,I,$){return WB(v,I),typeof v.h.canvas.transferToImageBitmap=="function"?Promise.resolve(v.h.canvas.transferToImageBitmap()):$?Promise.resolve(v.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(v.h.canvas):(v.j===void 0&&(v.j=document.createElement("canvas")),new Promise(function(R){v.j.height=v.h.canvas.height,v.j.width=v.h.canvas.width,v.j.getContext("2d",{}).drawImage(v.h.canvas,0,0,v.h.canvas.width,v.h.canvas.height),R(v.j)}))}function WB(v,I){var $=v.h;if(v.s===void 0){var R=TN($,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),M=TN($,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),U=$.createProgram();if($.attachShader(U,R),$.attachShader(U,M),$.linkProgram(U),!$.getProgramParameter(U,$.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+$.getProgramInfoLog(U));R=v.s=U,$.useProgram(R),M=$.getUniformLocation(R,"sampler0"),v.l={O:$.getAttribLocation(R,"aVertex"),N:$.getAttribLocation(R,"aTex"),ya:M},v.v=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,v.v),$.enableVertexAttribArray(v.l.O),$.vertexAttribPointer(v.l.O,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),v.u=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,v.u),$.enableVertexAttribArray(v.l.N),$.vertexAttribPointer(v.l.N,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),$.uniform1i(M,0)}R=v.l,$.useProgram(v.s),$.canvas.width=I.width,$.canvas.height=I.height,$.viewport(0,0,I.width,I.height),$.activeTexture($.TEXTURE0),v.i.bindTexture2d(I.glName),$.enableVertexAttribArray(R.O),$.bindBuffer($.ARRAY_BUFFER,v.v),$.vertexAttribPointer(R.O,2,$.FLOAT,!1,0,0),$.enableVertexAttribArray(R.N),$.bindBuffer($.ARRAY_BUFFER,v.u),$.vertexAttribPointer(R.N,2,$.FLOAT,!1,0,0),$.bindFramebuffer($.DRAW_FRAMEBUFFER?$.DRAW_FRAMEBUFFER:$.FRAMEBUFFER,null),$.clearColor(0,0,0,0),$.clear($.COLOR_BUFFER_BIT),$.colorMask(!0,!0,!0,!0),$.drawArrays($.TRIANGLE_FAN,0,4),$.disableVertexAttribArray(R.O),$.disableVertexAttribArray(R.N),$.bindBuffer($.ARRAY_BUFFER,null),v.i.bindTexture2d(0)}function UB(v){this.h=v}var GB=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function HB(v,I){return I+v}function _N(v,I){window[v]=I}function jB(v){var I=document.createElement("script");return I.setAttribute("src",v),I.setAttribute("crossorigin","anonymous"),new Promise(function($){I.addEventListener("load",function(){$()},!1),I.addEventListener("error",function(){$()},!1),document.body.appendChild(I)})}function qB(){return D(function(v){switch(v.h){case 1:return v.s=2,b(v,WebAssembly.instantiate(GB),4);case 4:v.h=3,v.s=0;break;case 2:return v.s=0,v.l=null,v.return(!1);case 3:return v.return(!0)}})}function Yw(v){if(this.h=v,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=v&&v.locateFile||HB,typeof window=="object")var I=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")I=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=I,v.options){I=a(Object.keys(v.options));for(var $=I.next();!$.done;$=I.next()){$=$.value;var R=v.options[$].default;R!==void 0&&(this.l[$]=typeof R=="function"?R():R)}}}n=Yw.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function KB(v){var I,$,R,M,U,V,Q,se,me,Ce,Ye;return D(function(ze){switch(ze.h){case 1:return v.ga?(I=v.h.files===void 0?[]:typeof v.h.files=="function"?v.h.files(v.l):v.h.files,b(ze,qB(),2)):ze.return();case 2:if($=ze.i,typeof window=="object")return _N("createMediapipeSolutionsWasm",{locateFile:v.locateFile}),_N("createMediapipeSolutionsPackedAssets",{locateFile:v.locateFile}),V=I.filter(function(Ee){return Ee.data!==void 0}),Q=I.filter(function(Ee){return Ee.data===void 0}),se=Promise.all(V.map(function(Ee){var Qe=fg(v,Ee.url);if(Ee.path!==void 0){var ht=Ee.path;Qe=Qe.then(function(Kt){return v.overrideFile(ht,Kt),Promise.resolve(Kt)})}return Qe})),me=Promise.all(Q.map(function(Ee){return Ee.simd===void 0||Ee.simd&&$||!Ee.simd&&!$?jB(v.locateFile(Ee.url,v.ha)):Promise.resolve()})).then(function(){var Ee,Qe,ht;return D(function(Kt){if(Kt.h==1)return Ee=window.createMediapipeSolutionsWasm,Qe=window.createMediapipeSolutionsPackedAssets,ht=v,b(Kt,Ee(Qe),2);ht.i=Kt.i,Kt.h=0})}),Ce=function(){return D(function(Ee){return v.h.graph&&v.h.graph.url?Ee=b(Ee,fg(v,v.h.graph.url),0):(Ee.h=0,Ee=void 0),Ee})}(),b(ze,Promise.all([me,se,Ce]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return R=I.filter(function(Ee){return Ee.simd===void 0||Ee.simd&&$||!Ee.simd&&!$}).map(function(Ee){return v.locateFile(Ee.url,v.ha)}),importScripts.apply(null,l(R)),M=v,b(ze,createMediapipeSolutionsWasm(Module),6);case 6:M.i=ze.i,v.m=new OffscreenCanvas(1,1),v.i.canvas=v.m,U=v.i.GL.createContext(v.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),v.i.GL.makeContextCurrent(U),ze.h=4;break;case 7:if(v.m=document.createElement("canvas"),Ye=v.m.getContext("webgl2",{}),!Ye&&(Ye=v.m.getContext("webgl",{}),!Ye))return alert("Failed to create WebGL canvas context when passing video frame."),ze.return();v.K=Ye,v.i.canvas=v.m,v.i.createContext(v.m,!0,!0,{});case 4:v.j=new v.i.SolutionWasm,v.ga=!1,ze.h=0}})}function XB(v){var I,$,R,M,U,V,Q,se;return D(function(me){if(me.h==1){if(v.h.graph&&v.h.graph.url&&v.fa===v.h.graph.url)return me.return();if(v.u=!0,!v.h.graph||!v.h.graph.url){me.h=2;return}return v.fa=v.h.graph.url,b(me,fg(v,v.h.graph.url),3)}for(me.h!=2&&(I=me.i,v.j.loadGraph(I)),$=a(Object.keys(v.D)),R=$.next();!R.done;R=$.next())M=R.value,v.j.overrideFile(M,v.D[M]);if(v.D={},v.h.listeners)for(U=a(v.h.listeners),V=U.next();!V.done;V=U.next())Q=V.value,JB(v,Q);se=v.l,v.l={},v.setOptions(se),me.h=0})}n.reset=function(){var v=this;return D(function(I){v.j&&(v.j.reset(),v.s={},v.v={}),I.h=0})},n.setOptions=function(v,I){var $=this;if(I=I||this.h.options){for(var R=[],M=[],U={},V=a(Object.keys(v)),Q=V.next();!Q.done;U={X:U.X,Y:U.Y},Q=V.next())if(Q=Q.value,!(Q in this.l&&this.l[Q]===v[Q])){this.l[Q]=v[Q];var se=I[Q];se!==void 0&&(se.onChange&&(U.X=se.onChange,U.Y=v[Q],R.push(function(me){return function(){var Ce;return D(function(Ye){if(Ye.h==1)return b(Ye,me.X(me.Y),2);Ce=Ye.i,Ce===!0&&($.u=!0),Ye.h=0})}}(U))),se.graphOptionXref&&(Q=Object.assign({},{calculatorName:"",calculatorIndex:0},se.graphOptionXref,{valueNumber:se.type===1?v[Q]:0,valueBoolean:se.type===0?v[Q]:!1,valueString:se.type===2?v[Q]:""}),M.push(Q)))}(R.length!==0||M.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(M),this.F=(this.F===void 0?[]:this.F).concat(R))}};function YB(v){var I,$,R,M,U,V,Q;return D(function(se){switch(se.h){case 1:if(!v.u)return se.return();if(!v.F){se.h=2;break}I=a(v.F),$=I.next();case 3:if($.done){se.h=5;break}return R=$.value,b(se,R(),4);case 4:$=I.next(),se.h=3;break;case 5:v.F=void 0;case 2:if(v.H){for(M=new v.i.GraphOptionChangeRequestList,U=a(v.H),V=U.next();!V.done;V=U.next())Q=V.value,M.push_back(Q);v.j.changeOptions(M),M.delete(),v.H=void 0}v.u=!1,se.h=0}})}n.initialize=function(){var v=this;return D(function(I){return I.h==1?b(I,KB(v),2):I.h!=3?b(I,XB(v),3):b(I,YB(v),0)})};function fg(v,I){var $,R;return D(function(M){return I in v.L?M.return(v.L[I]):($=v.locateFile(I,""),R=fetch($).then(function(U){return U.arrayBuffer()}),v.L[I]=R,M.return(R))})}n.overrideFile=function(v,I){this.j?this.j.overrideFile(v,I):this.D[v]=I},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(v,I){var $=this,R,M,U,V,Q,se,me,Ce,Ye;return D(function(ze){switch(ze.h){case 1:return $.h.inputs?(R=1e3*(I??performance.now()),b(ze,$.I,2)):ze.return();case 2:return b(ze,$.initialize(),3);case 3:for(M=new $.i.PacketDataList,U=a(Object.keys(v)),V=U.next();!V.done;V=U.next())if(Q=V.value,se=$.h.inputs[Q]){e:{var Ee=v[Q];switch(se.type){case"video":var Qe=$.s[se.stream];if(Qe||(Qe=new Xw($.i,$.K),$.s[se.stream]=Qe),Qe.m===0&&(Qe.m=Qe.i.createTexture()),typeof HTMLVideoElement<"u"&&Ee instanceof HTMLVideoElement)var ht=Ee.videoWidth,Kt=Ee.videoHeight;else typeof HTMLImageElement<"u"&&Ee instanceof HTMLImageElement?(ht=Ee.naturalWidth,Kt=Ee.naturalHeight):(ht=Ee.width,Kt=Ee.height);Kt={glName:Qe.m,width:ht,height:Kt},ht=Qe.h,ht.canvas.width=Kt.width,ht.canvas.height=Kt.height,ht.activeTexture(ht.TEXTURE0),Qe.i.bindTexture2d(Qe.m),ht.texImage2D(ht.TEXTURE_2D,0,ht.RGBA,ht.RGBA,ht.UNSIGNED_BYTE,Ee),Qe.i.bindTexture2d(0),Qe=Kt;break e;case"detections":for(Qe=$.s[se.stream],Qe||(Qe=new UB($.i),$.s[se.stream]=Qe),Qe.data||(Qe.data=new Qe.h.DetectionListData),Qe.data.reset(Ee.length),Kt=0;Kt<Ee.length;++Kt){ht=Ee[Kt];var Wt=Qe.data,us=Wt.setBoundingBox,Gr=Kt,tr=ht.la,It=new pg;if(oi(It,1,tr.sa),oi(It,2,tr.ta),oi(It,3,tr.height),oi(It,4,tr.width),oi(It,5,tr.rotation),ri(It,6,tr.pa),tr=It.l(),us.call(Wt,Gr,tr),ht.ea)for(Wt=0;Wt<ht.ea.length;++Wt){It=ht.ea[Wt],us=Qe.data,Gr=us.addNormalizedLandmark,tr=Kt,It=Object.assign({},It,{visibility:It.visibility?It.visibility:0});var cs=new Gd;oi(cs,1,It.x),oi(cs,2,It.y),oi(cs,3,It.z),It.visibility&&oi(cs,4,It.visibility),It=cs.l(),Gr.call(us,tr,It)}if(ht.ba)for(Wt=0;Wt<ht.ba.length;++Wt)us=Qe.data,Gr=us.addClassification,tr=Kt,It=ht.ba[Wt],cs=new Yu,oi(cs,2,It.qa),It.index&&ri(cs,1,It.index),It.label&&ri(cs,3,It.label),It.displayName&&ri(cs,4,It.displayName),It=cs.l(),Gr.call(us,tr,It)}Qe=Qe.data;break e;default:Qe={}}}switch(me=Qe,Ce=se.stream,se.type){case"video":M.pushTexture2d(Object.assign({},me,{stream:Ce,timestamp:R}));break;case"detections":Ye=me,Ye.stream=Ce,Ye.timestamp=R,M.pushDetectionList(Ye);break;default:throw Error("Unknown input config type: '"+se.type+"'")}}return $.j.send(M),b(ze,$.I,4);case 4:M.delete(),ze.h=0}})};function QB(v,I,$){var R,M,U,V,Q,se,me,Ce,Ye,ze,Ee,Qe,ht,Kt;return D(function(Wt){switch(Wt.h){case 1:if(!$)return Wt.return(I);for(R={},M=0,U=a(Object.keys($)),V=U.next();!V.done;V=U.next())Q=V.value,se=$[Q],typeof se!="string"&&se.type==="texture"&&I[se.stream]!==void 0&&++M;1<M&&(v.M=!1),me=a(Object.keys($)),V=me.next();case 2:if(V.done){Wt.h=4;break}if(Ce=V.value,Ye=$[Ce],typeof Ye=="string")return ht=R,Kt=Ce,b(Wt,ZB(v,Ce,I[Ye]),14);if(ze=I[Ye.stream],Ye.type==="detection_list"){if(ze){for(var us=ze.getRectList(),Gr=ze.getLandmarksList(),tr=ze.getClassificationsList(),It=[],cs=0;cs<us.size();++cs){var pa=zB(us.get(cs)),e4=ii(pa,1),t4=ii(pa,2),n4=ii(pa,3),s4=ii(pa,4),r4=ii(pa,5,0),mg=void 0;mg=mg===void 0?0:mg,pa={la:{sa:e4,ta:t4,height:n4,width:s4,rotation:r4,pa:ug(wo(pa,6),mg)},ea:Kw(Gr.get(cs)),ba:VB(FB(tr.get(cs)))},It.push(pa)}us=It}else us=[];R[Ce]=us,Wt.h=7;break}if(Ye.type==="proto_list"){if(ze){for(us=Array(ze.size()),Gr=0;Gr<ze.size();Gr++)us[Gr]=ze.get(Gr);ze.delete()}else us=[];R[Ce]=us,Wt.h=7;break}if(ze===void 0){Wt.h=3;break}if(Ye.type==="float_list"){R[Ce]=ze,Wt.h=7;break}if(Ye.type==="proto"){R[Ce]=ze,Wt.h=7;break}if(Ye.type!=="texture")throw Error("Unknown output config type: '"+Ye.type+"'");return Ee=v.v[Ce],Ee||(Ee=new Xw(v.i,v.K),v.v[Ce]=Ee),b(Wt,$N(Ee,ze,v.M),13);case 13:Qe=Wt.i,R[Ce]=Qe;case 7:Ye.transform&&R[Ce]&&(R[Ce]=Ye.transform(R[Ce])),Wt.h=3;break;case 14:ht[Kt]=Wt.i;case 3:V=me.next(),Wt.h=2;break;case 4:return Wt.return(R)}})}function ZB(v,I,$){var R;return D(function(M){return typeof $=="number"||$ instanceof Uint8Array||$ instanceof v.i.Uint8BlobList?M.return($):$ instanceof v.i.Texture2dDataOut?(R=v.v[I],R||(R=new Xw(v.i,v.K),v.v[I]=R),M.return($N(R,$,v.M))):M.return(void 0)})}function JB(v,I){for(var $=I.name||"$",R=[].concat(l(I.wants)),M=new v.i.StringList,U=a(I.wants),V=U.next();!V.done;V=U.next())M.push_back(V.value);U=v.i.PacketListener.implement({onResults:function(Q){for(var se={},me=0;me<I.wants.length;++me)se[R[me]]=Q.get(me);var Ce=v.listeners[$];Ce&&(v.I=QB(v,se,I.outs).then(function(Ye){Ye=Ce(Ye);for(var ze=0;ze<I.wants.length;++ze){var Ee=se[R[ze]];typeof Ee=="object"&&Ee.hasOwnProperty&&Ee.hasOwnProperty("delete")&&Ee.delete()}Ye&&(v.I=Ye)}))}}),v.j.attachMultiListener(M,U),M.delete()}n.onResults=function(v,I){this.listeners[I||"$"]=v},B("Solution",Yw),B("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function EN(v){switch(v===void 0&&(v=0),v){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function RN(v){var I=this;v=v||{},this.h=new Yw({locateFile:v.locateFile,files:function($){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:EN($.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Kw},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Kw},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function($){var R,M,U;return D(function(V){return V.h==1?(R=EN($),M="third_party/mediapipe/modules/pose_landmark/"+R,b(V,fg(I.h,R),2)):(U=V.i,I.h.overrideFile(M,U),V.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=RN.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(v){this.h.onResults(v)},n.initialize=function(){var v=this;return D(function(I){return b(I,v.h.initialize(),0)})},n.send=function(v,I){var $=this;return D(function(R){return b(R,$.h.send(v,I),0)})},n.setOptions=function(v){this.h.setOptions(v)},B("Pose",RN),B("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),B("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),B("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),B("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),B("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),B("VERSION","0.5.1675469404")}).call(Do);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=1e-7,P5=1e-4;class V2{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class wx{refCount(e){return nr("refCount")}incRef(e){return nr("incRef")}timerAvailable(){return!0}time(e){return nr("time")}read(e){return nr("read")}readSync(e){return nr("readSync")}readToGPU(e,t){return nr("readToGPU")}numDataIds(){return nr("numDataIds")}disposeData(e,t){return nr("disposeData")}write(e,t,s){return nr("write")}move(e,t,s,r,o){return nr("move")}createTensorFromGPUData(e,t,s){return nr("createTensorFromGPUData")}memory(){return nr("memory")}floatPrecision(){return nr("floatPrecision")}epsilon(){return this.floatPrecision()===32?O5:P5}dispose(){return nr("dispose")}}function nr(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,oc(n,e,t)}function lu(n,e,t){return Math.max(n,Math.min(e,t))}function B2(n){return n%2===0?n:n+1}function oc(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function x3(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function A(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Zs(n,e,t=""){A(ot(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function bh(n){A(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function J(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function h$(n){return n.length===0}function L5(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function ot(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Yc(n){return n%1===0}function oS(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Ac(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function d$(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const l=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function W2(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function et(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),A(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),A(n.every(s=>Yc(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function cl(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:et(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Bn(n,e){return dn(n,e)}function dn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function M5(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function z5(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function U2(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function n0(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function V5(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Sh(n){return typeof n=="string"||n instanceof String}function B5(n){return typeof n=="boolean"}function iS(n){return typeof n=="number"}function _u(n){return Array.isArray(n)?_u(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":iS(n)?"float32":Sh(n)?"string":B5(n)?"bool":"float32"}function aS(n){return!!(n&&n.constructor&&n.call&&n.apply)}function lS(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Le(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function w3(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<o;l++)r[l]=w3(n+l*a,i,t,s)}return r}function lo(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return w3(0,n,e,t)}function dy(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function G2(n,e){const t=os(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function os(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function v3(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return lo(n,new Float32Array(t));if(e==="int32")return lo(n,new Int32Array(t));if(e==="bool")return lo(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function zr(n){n.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function yi(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Ch(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function uu(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p$="tfjsflags";class W5{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=U5,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(ne().getBool("IS_TEST")||ne().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];ne().getBool("IS_TEST")||ne().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(uu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);p$ in e&&e[p$].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=H5(r,o)})}}function U5(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(G5(e,s[0],s[1]),s.join("="))),e}function G5(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function H5(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function ne(){return b3}let b3=null;function j5(n){b3=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Iv;function S3(){if(Iv==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Iv=n}return Iv}function q5(){const n=S3();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function H2(n,e){const t=q5();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Rf="Abs",kh="Acos",Ih="Acosh",Eu="Add",Af="AddN",vx="All",bx="Any",Df="ArgMax",Of="ArgMin",Nh="Asin",Th="Asinh",$h="Atan",_h="Atanh",Eh="Atan2",Pf="AvgPool",Sx="AvgPoolGrad",Ff="AvgPool3D",Cx="AvgPool3DGrad",Lf="BatchMatMul",Mf="BatchToSpaceND",kx="Bincount",Ix="BitwiseAnd",K5="BroadcastTo",Nx="BroadcastArgs",Rh="Cast",Ah="Ceil",Dh="ClipByValue",Tx="Complex",zf="ComplexAbs",Vf="Concat",Bf="Conv2D",$x="Conv2DBackpropFilter",Wf="Conv2DBackpropInput",Uf="Conv3D",_x="Conv3DBackpropFilterV2",Ex="Conv3DBackpropInputV2",Oh="Cos",Ph="Cosh",Rx="Cumprod",Gf="Cumsum",Ax="CropAndResize",Dx="DenseBincount",Ox="DepthToSpace",Hf="DepthwiseConv2dNative",Px="DepthwiseConv2dNativeBackpropFilter",Fx="DepthwiseConv2dNativeBackpropInput",Lx="Diag",jf="Dilation2D",s0="Dilation2DBackpropInput",r0="Dilation2DBackpropFilter",j2="Draw",Fh="RealDiv",Mx="Einsum",Lh="Elu",zx="EluGrad",Mh="Erf",qf="Equal",zh="Exp",Kf="ExpandDims",Vh="Expm1",Vx="FFT",Bx="Fill",Wx="FlipLeftRight",Bh="Floor",Wh="FloorDiv",Xf="FusedBatchNorm",Yf="GatherV2",Ux="GatherNd",Qf="Greater",Uh="GreaterEqual",Gh="Identity",Gx="IFFT",Hx="Imag",Hh="IsFinite",jh="IsInf",qh="IsNan",Zf="LeakyRelu",Jf="Less",em="LessEqual",jx="LinSpace",Kh="Log",Xh="Log1p",tm="LogicalAnd",nm="LogicalNot",sm="LogicalOr",X5="LogSoftmax",rm="LRN",qx="LRNGrad",om="Max",Yh="Maximum",im="MaxPool",Kx="MaxPoolGrad",am="MaxPool3D",Xx="MaxPool3DGrad",Yx="MaxPoolWithArgmax",lm="Mean",um="Min",Qh="Minimum",cm="MirrorPad",Zh="Mod",Qx="Multinomial",Jh="Multiply",hm="Neg",dm="NotEqual",Zx="NonMaxSuppressionV3",q2="NonMaxSuppressionV4",Jx="NonMaxSuppressionV5",pm="OnesLike",fm="OneHot",mm="Pack",gm="PadV2",ed="Pow",ym="Prelu",xm="Prod",K2="RaggedGather",X2="RaggedRange",Y2="RaggedTensorToTensor",e1="Range",t1="Real",td="Reciprocal",nd="Relu",wm="Reshape",vm="ResizeNearestNeighbor",n1="ResizeNearestNeighborGrad",bm="ResizeBilinear",s1="ResizeBilinearGrad",sd="Relu6",Sm="Reverse",rd="Round",od="Rsqrt",r1="ScatterNd",o1="TensorScatterUpdate",i1="SearchSorted",Cm="Select",id="Selu",km="Slice",ad="Sin",ld="Sinh",ud="Sign",cd="Sigmoid",hd="Softplus",dd="Sqrt",Im="Sum",Nm="SpaceToBatchND",Tm="SplitV",$m="Softmax",Q2="SparseFillEmptyRows",Z2="SparseReshape",a1="SparseSegmentMean",l1="SparseSegmentSum",u1="SparseToDense",pd="SquaredDifference",c1="Square",h1="StaticRegexReplace",d1="StridedSlice",p1="StringNGrams",J2="StringSplit",ek="StringToHashBucketFast",fd="Sub",md="Tan",gd="Tanh",yd="Tile",f1="TopK",m1="Transform",Xl="Transpose",tk="Unique",_m="Unpack",Em="UnsortedSegmentSum",Rm="ZerosLike",xd="Step",o0="FromPixels",g1="RotateWithOffset",qp="_FusedMatMul",Kp="FusedConv2D",Xp="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(...n){ne().getBool("IS_TEST")||ne().getBool("PROD")||console.warn(...n)}function Y5(...n){ne().getBool("IS_TEST")||ne().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0=H2("kernelRegistry",()=>new Map),uS=H2("gradRegistry",()=>new Map);function a0(n,e){const t=C3(n,e);return i0.get(t)}function f$(n){return uS.get(n)}function m$(n){const e=i0.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}function nk(n){const{kernelName:e,backendName:t}=n,s=C3(e,t);i0.has(s)&&Nr(`The kernel '${e}' for backend '${t}' is already registered`),i0.set(s,n)}function Q5(n){const{kernelName:e}=n;uS.has(e)&&ne().getBool("DEBUG")&&Nr(`Overriding the gradient for '${e}'`),uS.set(e,n)}function C3(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var I3=Gt,Jr=null;try{Jr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Gt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Gt.prototype.__isLong__;Object.defineProperty(Gt.prototype,"__isLong__",{value:!0});function br(n){return(n&&n.__isLong__)===!0}Gt.isLong=br;var g$={},y$={};function Ru(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=y$[n],s)?s:(t=Ht(n,(n|0)<0?-1:0,!0),r&&(y$[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=g$[n],s)?s:(t=Ht(n,n<0?-1:0,!1),r&&(g$[n]=t),t))}Gt.fromInt=Ru;function eo(n,e){if(isNaN(n))return e?Bl:to;if(e){if(n<0)return Bl;if(n>=N3)return _3}else{if(n<=-w$)return ur;if(n+1>=w$)return $3}return n<0?eo(-n,e).neg():Ht(n%Qc|0,n/Qc|0,e)}Gt.fromNumber=eo;function Ht(n,e,t){return new Gt(n,e,t)}Gt.fromBits=Ht;var l0=Math.pow;function sk(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return to;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return sk(n.substring(1),e,t).neg();for(var r=eo(l0(t,8)),o=to,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),l=parseInt(n.substring(i,i+a),t);if(a<8){var u=eo(l0(t,a));o=o.mul(u).add(eo(l))}else o=o.mul(r),o=o.add(eo(l))}return o.unsigned=e,o}Gt.fromString=sk;function Qo(n,e){return typeof n=="number"?eo(n,e):typeof n=="string"?sk(n,e):Ht(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Gt.fromValue=Qo;var x$=65536,Z5=1<<24,Qc=x$*x$,N3=Qc*Qc,w$=N3/2,v$=Ru(Z5),to=Ru(0);Gt.ZERO=to;var Bl=Ru(0,!0);Gt.UZERO=Bl;var kc=Ru(1);Gt.ONE=kc;var T3=Ru(1,!0);Gt.UONE=T3;var cS=Ru(-1);Gt.NEG_ONE=cS;var $3=Ht(-1,2147483647,!1);Gt.MAX_VALUE=$3;var _3=Ht(-1,-1,!0);Gt.MAX_UNSIGNED_VALUE=_3;var ur=Ht(0,-2147483648,!1);Gt.MIN_VALUE=ur;var ke=Gt.prototype;ke.toInt=function(){return this.unsigned?this.low>>>0:this.low};ke.toNumber=function(){return this.unsigned?(this.high>>>0)*Qc+(this.low>>>0):this.high*Qc+(this.low>>>0)};ke.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(ur)){var t=eo(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=eo(l0(e,6),this.unsigned),i=this,a="";;){var l=i.div(o),u=i.sub(l.mul(o)).toInt()>>>0,c=u.toString(e);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ke.getHighBits=function(){return this.high};ke.getHighBitsUnsigned=function(){return this.high>>>0};ke.getLowBits=function(){return this.low};ke.getLowBitsUnsigned=function(){return this.low>>>0};ke.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ur)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};ke.isZero=function(){return this.high===0&&this.low===0};ke.eqz=ke.isZero;ke.isNegative=function(){return!this.unsigned&&this.high<0};ke.isPositive=function(){return this.unsigned||this.high>=0};ke.isOdd=function(){return(this.low&1)===1};ke.isEven=function(){return(this.low&1)===0};ke.equals=function(e){return br(e)||(e=Qo(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ke.eq=ke.equals;ke.notEquals=function(e){return!this.eq(e)};ke.neq=ke.notEquals;ke.ne=ke.notEquals;ke.lessThan=function(e){return this.comp(e)<0};ke.lt=ke.lessThan;ke.lessThanOrEqual=function(e){return this.comp(e)<=0};ke.lte=ke.lessThanOrEqual;ke.le=ke.lessThanOrEqual;ke.greaterThan=function(e){return this.comp(e)>0};ke.gt=ke.greaterThan;ke.greaterThanOrEqual=function(e){return this.comp(e)>=0};ke.gte=ke.greaterThanOrEqual;ke.ge=ke.greaterThanOrEqual;ke.compare=function(e){if(br(e)||(e=Qo(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ke.comp=ke.compare;ke.negate=function(){return!this.unsigned&&this.eq(ur)?ur:this.not().add(kc)};ke.neg=ke.negate;ke.add=function(e){br(e)||(e=Qo(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,p=0;return p+=o+u,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=s+a,c+=h>>>16,h&=65535,c+=t+i,c&=65535,Ht(d<<16|p,c<<16|h,this.unsigned)};ke.subtract=function(e){return br(e)||(e=Qo(e)),this.add(e.neg())};ke.sub=ke.subtract;ke.multiply=function(e){if(this.isZero())return to;if(br(e)||(e=Qo(e)),Jr){var t=Jr.mul(this.low,this.high,e.low,e.high);return Ht(t,Jr.get_high(),this.unsigned)}if(e.isZero())return to;if(this.eq(ur))return e.isOdd()?ur:to;if(e.eq(ur))return this.isOdd()?ur:to;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(v$)&&e.lt(v$))return eo(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,f=0;return f+=i*c,p+=f>>>16,f&=65535,p+=o*c,d+=p>>>16,p&=65535,p+=i*u,d+=p>>>16,p&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,h+=s*c+r*u+o*l+i*a,h&=65535,Ht(p<<16|f,h<<16|d,this.unsigned)};ke.mul=ke.multiply;ke.divide=function(e){if(br(e)||(e=Qo(e)),e.isZero())throw Error("division by zero");if(Jr){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Jr.div_u:Jr.div_s)(this.low,this.high,e.low,e.high);return Ht(t,Jr.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Bl:to;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Bl;if(e.gt(this.shru(1)))return T3;o=Bl}else{if(this.eq(ur)){if(e.eq(kc)||e.eq(cS))return ur;if(e.eq(ur))return kc;var i=this.shr(1);return s=i.div(e).shl(1),s.eq(to)?e.isNegative()?kc:cS:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(ur))return this.unsigned?Bl:to;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=to}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),l=a<=48?1:l0(2,a-48),u=eo(s),c=u.mul(e);c.isNegative()||c.gt(r);)s-=l,u=eo(s,this.unsigned),c=u.mul(e);u.isZero()&&(u=kc),o=o.add(u),r=r.sub(c)}return o};ke.div=ke.divide;ke.modulo=function(e){if(br(e)||(e=Qo(e)),Jr){var t=(this.unsigned?Jr.rem_u:Jr.rem_s)(this.low,this.high,e.low,e.high);return Ht(t,Jr.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ke.mod=ke.modulo;ke.rem=ke.modulo;ke.not=function(){return Ht(~this.low,~this.high,this.unsigned)};ke.and=function(e){return br(e)||(e=Qo(e)),Ht(this.low&e.low,this.high&e.high,this.unsigned)};ke.or=function(e){return br(e)||(e=Qo(e)),Ht(this.low|e.low,this.high|e.high,this.unsigned)};ke.xor=function(e){return br(e)||(e=Qo(e)),Ht(this.low^e.low,this.high^e.high,this.unsigned)};ke.shiftLeft=function(e){return br(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ht(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ht(0,this.low<<e-32,this.unsigned)};ke.shl=ke.shiftLeft;ke.shiftRight=function(e){return br(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ht(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ht(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ke.shr=ke.shiftRight;ke.shiftRightUnsigned=function(e){if(br(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return Ht(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ht(t,0,this.unsigned):Ht(t>>>e-32,0,this.unsigned)};ke.shru=ke.shiftRightUnsigned;ke.shr_u=ke.shiftRightUnsigned;ke.toSigned=function(){return this.unsigned?Ht(this.low,this.high,!1):this};ke.toUnsigned=function(){return this.unsigned?this:Ht(this.low,this.high,!0)};ke.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ke.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ke.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Gt.fromBytes=function(e,t,s){return s?Gt.fromBytesLE(e,t):Gt.fromBytesBE(e,t)};Gt.fromBytesLE=function(e,t){return new Gt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Gt.fromBytesBE=function(e,t){return new Gt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const E3=lC(I3),J5=o4({__proto__:null,default:E3},[I3]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rl=E3||J5;function y1(n){return Rl.fromString(n,!0,16)}const R3=y1("c3a5c85c97cb3127"),_l=y1("b492b66fbe98f273"),Ts=y1("9ae16a3b2f90404f");function hS(n){return n.xor(n.shru(47))}function A3(n,e,t){const s=n.slice(e,e+t);return Rl.fromBytes(Array.from(s),!0,!0)}function Lt(n,e){return A3(n,e,8)}function b$(n,e){return A3(n,e,4)}function jn(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Ma(n,e,t=y1("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function e8(n,e,t,s,r,o){r=r.add(n),o=jn(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(jn(r,44)),[r.add(s),o.add(i)]}function Lg(n,e,t,s){return e8(Lt(n,e),Lt(n,e+8),Lt(n,e+16),Lt(n,e+24),t,s)}function t8(n,e=n.length){if(e>=8){const t=Ts.add(e*2),s=Lt(n,0).add(Ts),r=Lt(n,e-8),o=jn(r,37).mul(t).add(s),i=jn(s,25).add(r).mul(t);return Ma(o,i,t)}if(e>=4){const t=Ts.add(e*2),s=b$(n,0);return Ma(s.shl(3).add(e),b$(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return hS(Ts.mul(o).xor(R3.mul(i))).mul(Ts)}return Ts}function n8(n,e=n.length){const t=Ts.add(e*2),s=Lt(n,0).mul(_l),r=Lt(n,8),o=Lt(n,e-8).mul(t),i=Lt(n,e-16).mul(Ts);return Ma(jn(s.add(r),43).add(jn(o,30)).add(i),s.add(jn(r.add(Ts),18)).add(o),t)}function s8(n,e=n.length){const t=Ts.add(e*2),s=Lt(n,0).mul(Ts),r=Lt(n,8),o=Lt(n,e-8).mul(t),i=Lt(n,e-16).mul(Ts),a=jn(s.add(r),43).add(jn(o,30)).add(i),l=Ma(a,s.add(jn(r.add(Ts),18)).add(o),t),u=Lt(n,16).mul(t),c=Lt(n,24),h=a.add(Lt(n,e-32)).mul(t),d=l.add(Lt(n,e-24)).mul(t);return Ma(jn(u.add(c),43).add(jn(h,30)).add(d),u.add(jn(c.add(s),18)).add(h),t)}function r8(n,e=n.length){const t=Rl.fromNumber(81,!0);if(e<=32)return e<=16?t8(n,e):n8(n,e);if(e<=64)return s8(n,e);let s=t,r=t.mul(_l).add(113),o=hS(r.mul(Ts).add(113)).mul(Ts),i=[Rl.UZERO,Rl.UZERO],a=[Rl.UZERO,Rl.UZERO];s=s.mul(Ts).add(Lt(n,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do s=jn(s.add(r).add(i[0]).add(Lt(n,l+8)),37).mul(_l),r=jn(r.add(i[1]).add(Lt(n,l+48)),42).mul(_l),s=s.xor(a[1]),r=r.add(i[0]).add(Lt(n,l+40)),o=jn(o.add(a[0]),33).mul(_l),i=Lg(n,l,i[1].mul(_l),s.add(a[0])),a=Lg(n,l+32,o.add(a[1]),r.add(Lt(n,l+16))),[o,s]=[s,o],l+=64;while(l!==u);const h=_l.add(o.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=jn(s.add(r).add(i[0]).add(Lt(n,l+8)),37).mul(h),r=jn(r.add(i[1]).add(Lt(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(Lt(n,l+40))),o=jn(o.add(a[0]),33).mul(h),i=Lg(n,l,i[1].mul(h),s.add(a[0])),a=Lg(n,l+32,o.add(a[1]),r.add(Lt(n,l+16))),[o,s]=[s,o],Ma(Ma(i[0],a[0],h).add(hS(r).mul(R3)).add(o),Ma(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(n,e){return e==="string"?ji(n):Au([n],e)}function o8(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Au(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ta(n)),ne().getBool("DEBUG")&&M5(n,e),o8(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Ms(){return ne().platform.now()}function ji(n,e="utf-8"){return e=e||"utf-8",ne().platform.encode(n,e)}function Vo(n,e="utf-8"){return e=e||"utf-8",ne().platform.decode(n,e)}function fo(n){return ne().platform.isTypedArray!=null?ne().platform.isTypedArray(n):k3(n)}function ta(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||uu(n)||n==null||fo(n)&&t)e.push(n);else if(Array.isArray(n)||fo(n))for(let s=0;s<n.length;++s)ta(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)ta(n[r],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i8{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new l8)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let i;const a=Ms();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();i=Promise.resolve({kernelMs:Ms()-a})}if(ne().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const c=r[u];c.data().then(h=>{a8(h,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],o,l[2])})})}}function a8(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class l8{logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?Ac(`${r}ms`,9):r.error,l=Ac(e,25),u=t.rank,c=t.size,h=Ac(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${h}	%c${c}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,i[u.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&i[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}function c8(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const u=n[l.id];u!=null?i.push(u):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!ot(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S$=20,Jd=3,Nv=7;function h8(n,e,t,s){const r=Le(e),o=d8(n,e,t,r),i=e.length,a=py(n,e,t,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function d8(n,e,t,s){const r=J(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=t==="complex64"?up(n):n;if(a>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)i[h]=Math.max(i[h],lp(l[c+h],0,t).length)}return i}function lp(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Nv))} + ${parseFloat(n[1].toFixed(Nv))}j`:Sh(n)?s=`'${n}'`:t==="bool"?s=D3(n):s=parseFloat(n.toFixed(Nv)).toString(),Ac(s,e)}function D3(n){return n===0?"false":"true"}function py(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const m=up(n);return[lp(m[0],0,t)]}return t==="bool"?[D3(n[0])]:[n[0].toString()]}if(l===1){if(a>S$){const g=Jd*i;let y=Array.from(n.slice(0,g)),x=Array.from(n.slice((a-Jd)*i,a*i));return t==="complex64"&&(y=up(y),x=up(x)),["["+y.map((w,b)=>lp(w,r[b],t)).join(", ")+", ..., "+x.map((w,b)=>lp(w,r[a-Jd+b],t)).join(", ")+"]"]}return["["+(t==="complex64"?up(n):Array.from(n)).map((g,y)=>lp(g,r[y],t)).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(a>S$){for(let m=0;m<Jd;m++){const g=m*h,y=g+h;d.push(...py(n.slice(g,y),u,t,c,r,!1))}d.push("...");for(let m=a-Jd;m<a;m++){const g=m*h,y=g+h;d.push(...py(n.slice(g,y),u,t,c,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,y=g+h;d.push(...py(n.slice(g,y),u,t,c,r,m===a-1))}const p=l===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function up(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=J(e),s!=null){const r=s.length;A(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||dn(t,this.size),this.strides=Le(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return _o().makeTensor(this.values,this.shape,this.dtype)}}let _o=null,ic=null;function p8(n){_o=n}function f8(n){ic=n}class Nt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=J(e),this.strides=Le(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ic.buffer(this.shape,this.dtype,e)}bufferSync(){return ic.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return lo(this.shape,e,this.dtype==="complex64")}arraySync(){return lo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=_o().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Vo(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),_o().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=_o().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Vo(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await _o().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),_o().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ic.print(this,e)}clone(){return this.throwIfDisposed(),ic.clone(this)}toString(e=!1){const t=this.dataSync();return h8(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ic.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),_o().makeVariable(this,e,t,s)}}Object.defineProperty(Nt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function oe(){return H2("Tensor",()=>Nt)}oe();class u0 extends Nt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ot(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);_o().disposeTensor(this),this.dataId=e.dataId,_o().incRef(this,null)}dispose(){_o().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(u0,Symbol.hasInstance,{value:n=>n instanceof Nt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var C$;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(C$||(C$={}));var dS;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(dS||(dS={}));var pS;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(pS||(pS={}));var fS;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(fS||(fS={}));var mS;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(mS||(mS={}));const m8={float32:fS,int32:dS,bool:pS,complex64:mS};function Qn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return m8[n][e]}function x1(n){return Qn(n,"int32")}function O3(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function P3(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(n,e){if(n.dtype===e.dtype)return[n,e];const t=Qn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function g8(n,e){A(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function F3(n){const e=[];return L3(n,e,new Set),e}function L3(n,e,t){if(n==null)return;if(n instanceof Nt){e.push(n);return}if(!y8(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),L3(o,e,t))}}function y8(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(n){return n.kernelName!=null}class k${constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Zc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new k$}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Nr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new i8(this.backendInstance),!0}setupRegisteredKernels(){m$(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){m$(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof wx)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Nr(`Initialization of backend ${e} failed`),Nr(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Nr(`Initialization of backend ${e} failed`),Nr(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Zc.nextTensorId++}nextVariableId(){return Zc.nextVariableId++}clone(e){const t=q.runKernel(Gh,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},u={dtype:a};return q.runKernel(Rh,l,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(a0(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=Tv(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Tv(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=a0(f,this.backendName);A(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const x=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,w);const b=w.map(S=>S.rank!=null?S:this.makeTensorFromTensorInfo(S));if(r){const S=this.getTensorsForGradient(f,m,b);s=this.saveTensorsForBackwardMode(S)}return b}}else{const{forwardFunc:f}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};a=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,y),y}}const{inputs:c,attrs:h}=e,d=Tv(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(u,c,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=f$(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=o.map(u=>t[u]);const l=s.filter((u,c)=>i[c]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Sh(e[0])&&(o=e.map(l=>ji(l)));const i=r.write(o,t,s),a=new Nt(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),u=V5(o);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new Nt(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new u0(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*n0(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof u0||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*n0(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},l=f$(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=s[h],p=os(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(u.length>1?u:u[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=F3(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(o instanceof Nt,()=>"The result y returned by f() must be a tensor.");const i=u8(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??x8(o.shape),c8(a,i,u=>this.tidy(u),w8);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return A(aS(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(a=>a instanceof Nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...t,l),A(s.value instanceof Nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(aS(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const u=s.gradFunc(a,l),c=Array.isArray(u)?u:[u];A(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(c.every(d=>d instanceof Nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ms(),s=await this.backend.time(e);return s.wallMs=Ms()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new k$;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Zc.nextTensorId=0;Zc.nextVariableId=0;function x8(n){const e=G2(J(n),"float32");return q.makeTensor(e,n,"float32")}function M3(){const n=S3();if(n._tfengine==null){const e=new W5(n);n._tfengine=new Zc(e)}return j5(n._tfengine.ENV),p8(()=>n._tfengine),n._tfengine}const q=M3();function w8(n,e){const t={a:n,b:e};return q.runKernel(Eu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(){return typeof navigator<"u"&&navigator!=null}function z3(n){if(n||v8()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function V3(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js=ne();js.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});js.registerFlag("IS_BROWSER",()=>V3());js.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");js.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));js.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));js.registerFlag("PROD",()=>!1);js.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>js.getBool("DEBUG"));js.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);js.registerFlag("IS_TEST",()=>!1);js.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>js.getBool("DEBUG"));js.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);js.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);js.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n,e){let t=n;if(fo(n))return e==="string"?[]:[n.length];if(O3(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(P3(n))return[n.buffer.size/(e==null?4:n0(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||fo(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&ne().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&B3(n,s,[]),s}function B3(n,e,t){if(t=t||[],!Array.isArray(n)&&!fo(n)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),A(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)B3(n[r],s,t.concat(r))}function I$(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function O(n,e,t,s="numeric"){if(n instanceof oe())return I$(s,n.dtype,e,t),n;let r=_u(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),I$(s,r,e,t),n==null||!fo(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const o=dl(n,r);!fo(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?Au(n,r):ta(n,[],!0);return q.makeTensor(a,o,r)}function c0(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>O(o,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3="__op";function j(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+W3;const r=(...o)=>{q.startScope(t);try{const i=s(...o);return uu(i)&&console.error("Cannot return a Promise inside of tidy."),q.endScope(i),i}catch(i){throw q.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n,e){const t=O(n,"real","complex"),s=O(e,"imag","complex");Zs(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return q.runKernel(Tx,r)}const qa=j({complex_:b8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(n,e,t,s){if(s==null)s=_u(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(P3(n)||O3(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return q.backend.createTensorFromGPUData(n,e||t,s)}if(!fo(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){zr(e);const r=J(e),o=J(t);A(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==J(e.slice(i)):!0;A(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!fo(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Au(n,s):ta(n,[],!0),q.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(n,e,t){const s=dl(n,t);return pl(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Zo{static join(e){return new Zo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>fo(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let l=s;l<this.shards.length;l++){const u=this.shards[l],h=e+a-u.start,d=a,f=Math.min(t,u.end)-u.start,m=new Uint8Array(u.buffer,h,f-h);if(i.set(m,d),a+=m.length,t<u.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=S8(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function S8(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(){return q}function gS(){return q.memory()}function ee(n,e){return q.tidy(n,e)}function Ve(n){F3(n).forEach(t=>t.dispose())}function Kn(n){return q.keep(n)}function N$(n){return q.setBackend(n)}function C8(){return q.ready()}function Jc(){return q.backendName}function rk(n,e,t=1){return q.registerBackend(n,e,t)}function hu(){return q.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka=4;async function yS(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,y)=>g+y.length,0)+Ka*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=Ka,f.set(y,m),m+=y.length}h(f)});s.push(c)}else s.push(l.data());e!=null&&(u.group=e),t.push(u)}const o=await Promise.all(s);return{data:N8(o),specs:t}}function U3(n,e){const t=new Zo(n),s={};let r=0;for(const o of e){const i=k8(o,(a,l)=>t.slice(r+a,r+l));s[o.name]=G3(o,t.slice(r,r+i)),r+=i}return s}function k8(n,e){const t=J(n.shape);let s;if("quantization"in n){const r=n.quantization;s=cu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Ka+new Uint32Array(e(r,r+Ka))[0];return r}else s=cu[n.dtype];return t*s}async function I8(n,e){const t=J(n.shape);let s;if("quantization"in n){const r=n.quantization;s=cu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=Ka+new Uint32Array(await e(r,r+Ka))[0];return r}else s=cu[n.dtype];return t*s}function G3(n,e){const t=n.name,s=n.dtype,r=n.shape,o=J(r);let i,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=cu[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=d*l.scale+l.min}}else if(l.dtype==="float16")i=A8()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];i[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*u}else if(s==="string"){const l=J(n.shape);i=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(a,a+Ka))[0];a+=Ka;const h=new Uint8Array(e.slice(a,a+c));i.push(h),a+=c}}else{const l=cu[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<u.length;f++)u[f]=i[f*2],c[f]=i[f*2+1];const h=Fo(u,r,"float32"),d=Fo(c,r,"float32"),p=qa(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*l}return Fo(i,r,s)}async function T$(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(s.length+o.byteLength);i.set(s,0),i.set(new Uint8Array(o),s.length),s=i}return s.buffer}async function H3(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const i=await I8(o,async(u,c)=>(r=await T$(s,r,c),r.slice(u,c)));r=await T$(s,r,i);const a=r.slice(0,i);r=r.slice(i);const l=G3(o,a);if(t[o.name]=l,Jc()==="webgpu"){const u=hu();"uploadToGPU"in u&&J(l.shape)>=ne().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function N8(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const ok=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function $$(n){return ok?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function T8(n){if(ok)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function $8(n){if(ok){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function j3(n){return Zo.join(n)}function _$(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function q3(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function K3(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function ik(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),K3(n,t,s)}function Am(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:$$(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:$$(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Zo(n.weightData).byteLength}}function xS(n){const e=[];for(const t of n)e.push(...t.weights);return e}function _8(){const n=t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function E8(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function R8(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function A8(){const n=_8(),e=E8(),t=R8();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return nn.instance==null&&(nn.instance=new nn),nn.instance}static registerSaveRouter(e){nn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){nn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return nn.getHandlers(e,"save")}static getLoadHandlers(e,t){return nn.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?nn.getInstance().loadRouters:nn.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const D8=n=>nn.registerSaveRouter(n),O8=n=>nn.registerLoadRouter(n),X3=n=>nn.getSaveHandlers(n),P8=(n,e)=>nn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS="tensorflowjs",vS=1,Wl="models_store",ka="model_info_store";function Y3(){if(!ne().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function bS(n){const e=n.result;e.createObjectStore(Wl,{keyPath:"modelPath"}),e.createObjectStore(ka,{keyPath:"modelPath"})}class du{constructor(e){if(this.indexedDB=Y3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(wS,vS);o.onupgradeneeded=()=>bS(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(Wl,"readonly"),u=a.objectStore(Wl).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=c=>(i.close(),r(u.error)),a.oncomplete=()=>i.close()}else{t.weightData=Zo.join(t.weightData);const a=Am(t),l=i.transaction(ka,"readwrite");let u=l.objectStore(ka),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return r(d)}let h;c.onsuccess=()=>{h=i.transaction(Wl,"readwrite");const d=h.objectStore(Wl);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{u=l.objectStore(ka);const m=u.delete(this.modelPath);m.onsuccess=()=>(i.close(),r(p.error)),m.onerror=g=>(i.close(),r(p.error))}},c.onerror=d=>(i.close(),r(c.error)),l.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}du.URL_SCHEME="indexeddb://";const Q3=n=>ne().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(du.URL_SCHEME)?F8(n.slice(du.URL_SCHEME.length)):null;nn.registerSaveRouter(Q3);nn.registerLoadRouter(Q3);function F8(n){return new du(n)}function L8(n){return n.startsWith(du.URL_SCHEME)?n.slice(du.URL_SCHEME.length):n}class M8{constructor(){this.indexedDB=Y3()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(wS,vS);s.onupgradeneeded=()=>bS(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(ka,"readonly"),a=o.objectStore(ka).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=L8(e),new Promise((t,s)=>{const r=this.indexedDB.open(wS,vS);r.onupgradeneeded=()=>bS(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(ka,"readwrite"),a=i.objectStore(ka),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{u=o.transaction(Wl,"readwrite");const p=u.objectStore(Wl).delete(e);p.onsuccess=()=>t(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};c.onsuccess=h,c.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=c=>(o.close(),s(l.error)),i.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi="/",ac="tensorflowjs_models",Z3="info",z8="model_topology",V8="weight_specs",B8="weight_data",W8="model_metadata";function J3(n){return{info:[ac,n,Z3].join(Bi),topology:[ac,n,z8].join(Bi),weightSpecs:[ac,n,V8].join(Bi),weightData:[ac,n,B8].join(Bi),modelMetadata:[ac,n,W8].join(Bi)}}function eO(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function U8(n){const e=n.split(Bi);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Bi)}function G8(n){return n.startsWith(pu.URL_SCHEME)?n.slice(pu.URL_SCHEME.length):n}class pu{constructor(e){if(!ne().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=J3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Am(e),o=Zo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,T8(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw eO(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=$8(i),t}}pu.URL_SCHEME="localstorage://";const tO=n=>ne().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(pu.URL_SCHEME)?H8(n.slice(pu.URL_SCHEME.length)):null;nn.registerSaveRouter(tO);nn.registerLoadRouter(tO);function H8(n){return new pu(n)}class j8{constructor(){A(ne().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ac+Bi,s=Bi+Z3;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=U8(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=G8(e);const t=J3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return eO(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dc="://";class Is{constructor(){this.managers={}}static getInstance(){return Is.instance==null&&(Is.instance=new Is),Is.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Dc)&&(e=e.slice(0,e.indexOf(Dc))),A(e.length>0,()=>"scheme must not be an empty string.");const s=Is.getInstance();A(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Is.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Is.getInstance().managers)}}function fy(n){if(n.indexOf(Dc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Is.getSchemes().join(",")}`);return{scheme:n.split(Dc)[0],path:n.split(Dc)[1]}}async function nO(n,e,t=!1){A(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=nn.getLoadHandlers(n);A(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),A(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=nn.getSaveHandlers(e);A(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=fy(n).scheme,l=fy(n).path,u=a===fy(n).scheme,c=await r.load();t&&u&&await Is.getManager(a).removeModel(l);const h=await i.save(c);return t&&!u&&await Is.getManager(a).removeModel(l),h.modelArtifactsInfo}async function q8(){const n=Is.getSchemes(),e={};for(const t of n){const s=await Is.getManager(t).listModels();for(const r in s){const o=t+Dc+r;e[o]=s[r]}}return e}async function K8(n){const e=fy(n);return Is.getManager(e.scheme).removeModel(e.path)}async function X8(n,e){return nO(n,e,!1)}async function Y8(n,e){return nO(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q8{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!ne().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return k3(e)}}if(ne().get("IS_BROWSER")){ne().setPlatform("browser",new Q8);try{Is.registerManager(pu.URL_SCHEME,new j8)}catch{}try{Is.registerManager(du.URL_SCHEME,new M8)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8={importFetch:()=>require("node-fetch")};let $v;class J8{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return ne().global.fetch!=null?ne().global.fetch(e,t):($v==null&&($v=Z8.importFetch()),$v(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}ne().get("IS_NODE")&&!ne().get("IS_BROWSER")&&ne().setPlatform("node",new J8);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e="float32",t){return e=e||"float32",zr(n),new Mn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(n,e){const t=O(n,"x","cast");if(!z5(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return q.runKernel(Rh,s,r)}const xe=j({cast_:eK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const t={x:O(n,"x","clone","string_or_numeric")};return q.runKernel(Gh,t)}const qi=j({clone_:tK});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */M3();const nK={buffer:Ze,cast:xe,clone:qi,print:sO};f8(nK);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n,e){let t=O(n,"a","add"),s=O(e,"b","add");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(Eu,r)}const ae=j({add_:sK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n,e){let t=O(n,"a","floorDiv"),s=O(e,"b","floorDiv");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(Wh,r)}const ak=j({floorDiv_:rK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n,e){let t=O(n,"a","div"),s=O(e,"b","div");if([t,s]=mn(t,s),t.dtype==="int32"&&s.dtype==="int32")return ak(t,s);const r={a:t,b:s},o={};return q.runKernel(Fh,r,o)}const Ne=j({div_:oK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n,e){let t=O(n,"a","mul"),s=O(e,"b","mul");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(Jh,r)}const G=j({mul_:iK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n){const e=O(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return q.runKernel(zf,t)}else{const t={x:e};return q.runKernel(Rf,t)}}const An=j({abs_:aK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(n){const t={x:O(n,"x","acos")};return q.runKernel(kh,t)}const rO=j({acos_:lK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(n){const t={x:O(n,"x","acosh")};return q.runKernel(Ih,t)}const oO=j({acosh_:uK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(n){A(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),A(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>O(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!ot(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return q.runKernel(Af,s)}const hK=j({addN_:cK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n,e=null,t=!1){const r={x:O(n,"x","all","bool")},o={axis:e,keepDims:t};return q.runKernel(vx,r,o)}const lk=j({all_:dK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n,e=null,t=!1){const r={x:O(n,"x","any","bool")},o={axis:e,keepDims:t};return q.runKernel(bx,r,o)}const h0=j({any_:pK});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(n,e=0){const s={x:O(n,"x","argMax")},r={axis:e};return q.runKernel(Df,s,r)}const fu=j({argMax_:fK});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n,e=0){const s={x:O(n,"x","argMin")},r={axis:e};return q.runKernel(Of,s,r)}const iO=j({argMin_:mK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(n){const t={x:O(n,"x","asin")};return q.runKernel(Nh,t)}const aO=j({asin_:gK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yK(n){const t={x:O(n,"x","asinh")};return q.runKernel(Th,t)}const lO=j({asinh_:yK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(n){const t={x:O(n,"x","atan")};return q.runKernel($h,t)}const uO=j({atan_:xK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(n,e){let t=O(n,"a","atan2"),s=O(e,"b","atan2");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(Eh,r)}const cO=j({atan2_:wK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const t={x:O(n,"x","atanh")};return q.runKernel(_h,t)}const hO=j({atanh_:vK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fl(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],l=Sr(r);return zt(n,a,t,o,s,null,null,l)}function ys(n,e,t,s,r,o,i="channelsLast"){const[a,l]=Yp(e);let u;if(i==="channelsLast")u=[a,l,n[3],n[3]];else if(i==="channelsFirst")u=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return zt(n,u,t,s,r,o,!1,i)}function Vr(n,e,t,s,r,o,i="NDHWC"){const[a,l,u]=SS(e);let c,h;if(i==="NDHWC")h="channelsLast",c=[a,l,u,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",c=[a,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Jo(n,c,t,s,r,!1,h,o)}function zt(n,e,t,s,r,o,i=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h]=n;else if(a==="channelsFirst")[l,h,u,c]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=Yp(t),[y,x]=Yp(s),w=Oc(d,y),b=Oc(p,x),{padInfo:S,outHeight:C,outWidth:k}=CK(r,u,c,m,g,w,b,o,a),N=i?f*h:f;let _;return a==="channelsFirst"?_=[l,N,C,k]:a==="channelsLast"&&(_=[l,C,k,N]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:C,outWidth:k,outChannels:N,padInfo:S,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:n,outShape:_,filterShape:e}}function Jo(n,e,t,s,r,o=!1,i="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h,d]=n;else if(i==="channelsFirst")[l,d,u,c,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[y,x,w]=SS(t),[b,S,C]=SS(s),k=Oc(p,b),N=Oc(f,S),_=Oc(m,C),{padInfo:E,outDepth:D,outHeight:P,outWidth:F}=kK(r,u,c,h,y,x,w,k,N,_,a),L=o?g*d:g;let B;return i==="channelsFirst"?B=[l,L,D,P,F]:i==="channelsLast"&&(B=[l,D,P,F,L]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:D,outHeight:P,outWidth:F,outChannels:L,padInfo:E,strideDepth:y,strideHeight:x,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:N,effectiveFilterWidth:_,dilationDepth:b,dilationHeight:S,dilationWidth:C,inShape:n,outShape:B,filterShape:e}}function bK(n,e,t,s,r){s==null&&(s=uk(n,e,t));const o=n[0],i=n[1],a=Qp((o-e+2*s)/t+1,r),l=Qp((i-e+2*s)/t+1,r);return[a,l]}function SK(n,e,t,s,r,o){r==null&&(r=uk(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(i[a]=Qp((n[a]-e[a]+2*r)/s[a]+1,o));return i}function uk(n,e,t,s=1){const r=Oc(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Yp(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function SS(n){return typeof n=="number"?[n,n,n]:n}function Oc(n,e){return e<=1?n:n+(n-1)*(e-1)}function CK(n,e,t,s,r,o,i,a,l){let u,c,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=bK([e,t],o,s,n,a);c=p[0],h=p[1]}else if(n==="same"){c=Math.ceil(e/s),h=Math.ceil(t/r);const d=Math.max(0,(c-1)*s+o-e),p=Math.max(0,(h-1)*r+i-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),y=p-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/s),h=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Qp((e-o+d+p)/s+1,a),h=Qp((t-i+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:c,outWidth:h}}function kK(n,e,t,s,r,o,i,a,l,u,c){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=SK([e,t,s,1],[a,l,u],1,[r,o,i],n,c);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/i);const m=(d-1)*r+a-e,g=(p-1)*o+l-t,y=(f-1)*i+u-s,x=Math.floor(m/2),w=m-x,b=Math.floor(g/2),S=g-b,C=Math.floor(y/2),k=y-C;h={top:b,bottom:S,left:C,right:k,front:x,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Qp(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Xa(n){const[e,t,s]=Yp(n);return e===1&&t===1&&s===1}function Un(n,e){return Xa(n)||Xa(e)}function mu(n){return Yp(n).every(e=>e>0)}function Sr(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Os(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")A(Yc(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{A(Yc(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n,e){const s={x:O(n,"x","reshape","string_or_numeric")},r={shape:e};return q.runKernel(wm,s,r)}const K=j({reshape_:IK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(n,e,t,s,r){const o=O(n,"x","avgPool","float32"),i=1;A(Un(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Os("avgPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=q.runKernel(Pf,u,c);return h=xe(h,o.dtype),l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const w1=j({avgPool_:NK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n,e,t,s,r,o="NDHWC"){const i=O(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),A(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),A(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Os("avgPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let h=q.runKernel(Ff,u,c);return h=xe(h,a.dtype),l?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const dO=j({avgPool3d_:TK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n,e=0){A(n.length>=1,()=>"Pass at least one tensor to concat");const t=c0(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return qi(t[0]);const s=t,r={axis:e};return q.runKernel(Vf,s,r)}const an=j({concat_:$K});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n,e,t=!1,s=!1){let r=O(n,"a","matMul"),o=O(e,"b","matMul");[r,o]=mn(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return q.runKernel(Lf,i,a)}const dt=j({matMul_:_K});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(n){const t={x:O(n,"x","sigmoid","float32")};return q.runKernel(cd,t)}const Ar=j({sigmoid_:EK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n,e,t){const s=O(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return q.runKernel(km,r,o)}const qe=j({slice_:RK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n){const t={x:O(n,"x","tanh","float32")};return q.runKernel(gd,t)}const gu=j({tanh_:AK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(n,e,t,s,r,o){const i=O(n,"forgetBias","basicLSTMCell"),a=O(e,"lstmKernel","basicLSTMCell"),l=O(t,"lstmBias","basicLSTMCell"),u=O(s,"data","basicLSTMCell"),c=O(r,"c","basicLSTMCell"),h=O(o,"h","basicLSTMCell"),d=an([u,h],1),p=dt(d,a),f=ae(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=qe(f,[0,0],y),w=qe(f,[0,g],y),b=qe(f,[0,g*2],y),S=qe(f,[0,g*3],y),C=ae(G(Ar(x),gu(w)),G(c,Ar(ae(i,b)))),k=G(gu(C),Ar(S));return[C,k]}const OK=j({basicLSTMCell_:DK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n,e,t){const s=O(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);A(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return q.runKernel(Mf,o,i)}const v1=j({batchToSpaceND_:PK});function FK(n){let e;return n.rank===0||n.rank===1?e=K(n,[1,1,1,n.size]):n.rank===2?e=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n,e,t,s,r,o){o==null&&(o=.001);const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;s!=null&&(c=O(s,"offset","batchNorm")),A(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:FK(i),scale:u,offset:c,mean:a,variance:l},p={varianceEpsilon:o},f=q.runKernel(Xf,d,p);return K(f,i.shape)}const Dm=j({batchNorm_:LK});function MK(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),A(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),A(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Dm(i,a,l,c,u,o)}const pO=j({batchNorm2d_:MK});function zK(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),A(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),A(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Dm(i,a,l,c,u,o)}const fO=j({batchNorm3d_:zK});function VK(n,e,t,s,r,o){const i=O(n,"x","batchNorm"),a=O(e,"mean","batchNorm"),l=O(t,"variance","batchNorm");let u;r!=null&&(u=O(r,"scale","batchNorm"));let c;return s!=null&&(c=O(s,"offset","batchNorm")),A(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),A(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Dm(i,a,l,c,u,o)}const mO=j({batchNorm4d_:VK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(n,e,t){const s=O(n,"x","bincount"),r=O(e,"weights","bincount");A(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return q.runKernel(kx,o,i)}const gO=j({bincount_:BK});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WK(n,e){const t=O(n,"x","bitwiseAnd"),s=O(e,"y","bitwiseAnd");if(!ot(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return q.runKernel(Ix,r)}const UK=j({bitwiseAnd_:WK});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n,e){const t=O(n,"s0","broadcastArgs","int32"),s=O(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return q.runKernel(Nx,r)}const HK=j({broadcastArgs_:GK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n,e){let t=O(n,"broadcastTo","x");const s=t.shape;if(zr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=K(t,u)}const r=t.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return qi(t);const a={x:t},l={reps:o};return q.runKernel(yd,a,l)}const Pc=j({broadcastTo_:jK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n){const t={x:O(n,"x","ceil","float32")};return q.runKernel(Ah,t)}const yO=j({ceil_:qK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(n,e,t){zr(n),t=t||_u(e);const s={shape:n,value:e,dtype:t};return q.runKernel(Bx,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK(n,e,t){const s=O(n,"x","clipByValue");if(A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return wd(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return q.runKernel(Dh,r,o)}const qs=j({clipByValue_:KK});function XK(n){return an(n,0)}const xO=j({concat1d_:XK});function YK(n,e){return an(n,e)}const wO=j({concat2d_:YK});function QK(n,e){return an(n,e)}const vO=j({concat3d_:QK});function ZK(n,e){return an(n,e)}const bO=j({concat4d_:ZK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","conv2d","float32"),l=O(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Os("conv2d",s,i);const h=r==="NHWC"?u.shape[3]:u.shape[1];A(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),A(Un(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(mu(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(mu(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=q.runKernel(Bf,d,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ya=j({conv2d_:JK});function eX(n,e,t,s,r="NWC",o=1,i){const a=O(n,"x","conv1d"),l=O(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Os("conv1d",s,i),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(Un(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),A(mu(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(mu(t),()=>"Error in conv1D: Stride should be larger than 0."),A(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=K(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=K(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Ya(d,h,[1,t],s,"NHWC",[1,o],i);return c?K(g,[g.shape[2],g.shape[3]]):K(g,[g.shape[0],g.shape[2],g.shape[3]])}const ck=j({conv1d_:eX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tX(n,e,t,s,r,o="NHWC",i){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,u=!1;e.rank===3&&(u=!0,l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),A(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=o==="NHWC"?a[3]:a[1],h=o==="NHWC"?l.shape[3]:l.shape[1];A(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),A(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Os("conv2dDerInput",r,i);const d={dy:l,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},f=q.runKernel(Wf,d,p);return u?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const hk=j({conv2DBackpropInput_:tX});function nX(n,e,t,s,r,o){const i=O(n,"x","conv2dTranspose"),a=O(e,"filter","conv2dTranspose");return hk(t,i,a,s,r,"NHWC",o)}const dk=j({conv2dTranspose_:nX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sX(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=O(n,"x","conv3d"),a=O(e,"filter","conv3d");let l=i,u=!1;i.rank===4&&(u=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),A(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),A(Un(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),A(mu(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(mu(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},h={strides:t,pad:s,dataFormat:r,dilations:o},d=q.runKernel(Uf,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const SO=j({conv3d_:sX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(n,e,t,s,r){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],u=i.shape[4];A(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),A(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:i,filter:t},h={pad:r,strides:s,inputShape:o},d=q.runKernel(Ex,c,h);return a?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const CO=j({conv3DBackpropInput_:rX});function oX(n,e,t,s,r){const o=O(n,"x","conv3dTranspose"),i=O(e,"filter","conv3dTranspose");return CO(t,o,i,s,r)}const kO=j({conv3dTranspose_:oX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n){const t={x:O(n,"x","cos","float32")};return q.runKernel(Oh,t)}const b1=j({cos_:iX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX(n){const t={x:O(n,"x","cosh","float32")};return q.runKernel(Ph,t)}const pk=j({cosh_:aX});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return q.runKernel(Rx,o,i)}const d0=j({cumprod_:lX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n,e=0,t=!1,s=!1){const o={x:O(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return q.runKernel(Gf,o,i)}const fk=j({cumsum_:uX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(n,e,t,s=!1){const r=O(n,"x","denseBincount"),o=O(e,"weights","denseBincount");A(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),A(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return q.runKernel(Dx,i,a)}const CS=j({denseBincount_:cX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(n,e,t="NHWC"){const s=O(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];A(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),A(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),A(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return q.runKernel(Ox,a,l)}const IO=j({depthToSpace_:hX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n,e,t,s,r="NHWC",o=[1,1],i){const a=O(n,"x","depthwiseConv2d","float32"),l=O(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?u.shape[3]:u.shape[1];A(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Os("depthwiseConv2d",s,i);const d={x:u,filter:l},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},f=q.runKernel(Hf,d,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Om=j({depthwiseConv2d_:dX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const t={x:O(n,"x","diag")};return q.runKernel(Lx,t)}const fX=j({diag_:pX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mX(n,e,t,s,r=[1,1],o="NHWC"){const i=O(n,"x","dilation2d"),a=O(e,"filter","dilation2d");A(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),A(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),A(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,u=!1;i.rank===3&&(l=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),A(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},h={strides:t,pad:s,dilations:r},d=q.runKernel(jf,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const NO=j({dilation2d_:mX});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Wn(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function Ue(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)s[t-r-1]=i;else if(i===1)s[t-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gX(n,e){let t=O(n,"a","equal","string_or_numeric"),s=O(e,"b","equal","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(qf,r)}const Bo=j({equal_:gX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(n,e,t){const s=O(e,"a","where"),r=O(t,"b","where"),o=O(n,"condition","where","bool"),i=Ue(Ue(o.shape,s.shape),r.shape),a=Pc(o,i),l=Pc(s,i),u=Pc(r,i),c={condition:a,t:l,e:u};return q.runKernel(Cm,c)}const fs=j({where_:yX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(n){const t={x:O(n,"x","zerosLike")};return q.runKernel(Rm,t)}const wt=j({zerosLike_:xX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wX(n,e){let t=O(n,"a","div"),s=O(e,"b","div");[t,s]=mn(t,s);const r=Ne(t,s),o=wt(r),i=Bo(s,o);return fs(i,o,r)}const TO=j({divNoNan_:wX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n,e){const t=O(n,"t1","dot"),s=O(e,"t2","dot");A((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(A(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=K(t,[1,-1]),a=K(s,[-1,1]),l=dt(i,a);return K(l,[])}else if(t.rank===1&&s.rank===2){const i=K(t,[1,-1]),a=K(s,[s.shape[0],s.shape[1]]),l=dt(i,a);return K(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=K(s,[-1,1]),a=dt(t,i);return K(a,[a.size])}else{const i=K(s,[s.shape[0],s.shape[1]]);return dt(t,i)}}const $O=j({dot_:vX});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n,...e){const t=e.map((r,o)=>O(r,`tensors${o}`,"einsum")),s={equation:n};return q.runKernel(Mx,t,s)}const lc=j({einsum_:bX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(n){const t={x:O(n,"x","elu","float32")};return q.runKernel(Lh,t)}const Pm=j({elu_:SX});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n,e){const t=O(n,"x","ensureShape","string_or_numeric");if(!L5(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const kX=j({ensureShape_:CX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IX(n){let e=O(n,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=xe(e,"float32"));const t={x:e};return q.runKernel(Mh,t)}const mk=j({erf_:IX});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function _O(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}function Sn(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function gn(n,e){const t=e.map(s=>1);return _O(n,t,e)}function En(n,e,t){A(gk(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function At(n,e){if(gk(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Ei(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Vt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NX(n,e=null,t=!1){const r={x:O(n,"x","max")},o={reductionIndices:e,keepDims:t};return q.runKernel(om,r,o)}const uo=j({max_:NX});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TX(n,e=null,t=!1){const r={x:O(n,"x","min")},o={axis:e,keepDims:t};return q.runKernel(um,r,o)}const Zp=j({min_:TX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $X(n,e){let t=O(n,"base","pow"),s=O(e,"exp","pow");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(ed,r)}const na=j({pow_:$X});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,e){if((fo(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&fo(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return pl(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n){const t={x:O(n,"x","sqrt","float32")};return q.runKernel(dd,t)}const is=j({sqrt_:_X});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const e=O(n,"x","square"),t={};return q.runKernel("Square",{x:e},t)}const _t=j({square_:EX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(n,e=null,t=!1){let s=O(n,"x","sum");s.dtype==="bool"&&(s=xe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return q.runKernel(Im,r,o)}const De=j({sum_:RX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AX(n,e="euclidean",t=null,s=!1){n=O(n,"x","norm");const r=EO(n,e,t);let o=r.shape;if(s){const i=et(t,n.shape);o=gn(r.shape,i)}return K(r,o)}function EO(n,e,t=null){if(n.rank===0)return An(n);if(n.rank!==1&&t===null)return EO(K(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return De(An(n),t);if(e===1/0)return uo(An(n),t);if(e===-1/0)return Zp(An(n),t);if(e==="euclidean"||e===2)return is(De(na(An(n),Me(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return uo(De(An(n),t[0]),t[1]-1);if(e===1/0)return uo(De(An(n),t[1]),t[0]);if(e===-1/0)return Zp(De(An(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return is(De(_t(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Fm=j({norm_:AX});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DX(n,e=null,t=!1){return Fm(n,"euclidean",e,t)}const RO=j({euclideanNorm_:DX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OX(n){const t={x:O(n,"x","exp")};return q.runKernel(zh,t)}const Rs=j({exp_:OX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PX(n,e=0){const t=O(n,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return q.runKernel(Kf,s,r)}const Tn=j({expandDims_:PX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(n){const t={x:O(n,"x","expm1")};return q.runKernel(Vh,t)}const AO=j({expm1_:FX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(n,e){const t=O(n,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return q.runKernel(yd,s,r)}const no=j({tile_:LX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MX(n,e,t,s="float32"){e==null&&(e=n);const r=Ze([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=K(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return no(Tn(i,0),[t[0],1,1]);if(t.length===2)return no(Tn(Tn(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return no(Tn(Tn(Tn(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const yk=j({eye_:MX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(n){const t={x:O(n,"x","floor","float32")};return q.runKernel(Bh,t)}const Lm=j({floor_:zX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VX(n,e,t=0,s=0){const r=O(n,"x","gather"),o=O(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return q.runKernel(Yf,i,a)}const Mm=j({gather_:VX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BX(n,e){let t=O(n,"a","greater","string_or_numeric"),s=O(e,"b","greater","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(Qf,r)}const Cr=j({greater_:BX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WX(n,e){let t=O(n,"a","greaterEqual","string_or_numeric"),s=O(e,"b","greaterEqual","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(Uh,r)}const ml=j({greaterEqual_:WX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n){const t={input:O(n,"input","imag")};return q.runKernel(Hx,t)}const S1=j({imag_:UX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const t={x:O(n,"x","isFinite")};return q.runKernel(Hh,t)}const DO=j({isFinite_:GX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n){const t={x:O(n,"x","isInf")};return q.runKernel(jh,t)}const OO=j({isInf_:HX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n){const t={x:O(n,"x","isNaN")};return q.runKernel(qh,t)}const PO=j({isNaN_:jX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n,e=.2){const s={x:O(n,"x","leakyRelu")},r={alpha:e};return q.runKernel(Zf,s,r)}const C1=j({leakyRelu_:qX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n,e){let t=O(n,"a","less","string_or_numeric"),s=O(e,"b","less","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(Jf,r)}const Jp=j({less_:KX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(n,e){let t=O(n,"a","lessEqual","string_or_numeric"),s=O(e,"b","lessEqual","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(em,r)}const Du=j({lessEqual_:XX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YX(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return q.runKernel(jx,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n,e=5,t=1,s=1,r=.5){const o=O(n,"x","localResponseNormalization");A(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),A(Yc(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},u={depthRadius:e,bias:t,alpha:s,beta:r},c=q.runKernel(rm,l,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const FO=j({localResponseNormalization_:QX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(n){const t={x:O(n,"x","log","float32")};return q.runKernel(Kh,t)}const Pr=j({log_:ZX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JX(n){const t={x:O(n,"x","log1p")};return q.runKernel(Xh,t)}const k1=j({log1p_:JX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n,e){A(aS(n),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(u=>u instanceof u0),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in q.registeredVariables)e.push(q.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=q.gradients(n,e,null,o);A(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:i,grads:l}}function sa(n){return q.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const t={x:O(n,"x","neg")};return q.runKernel(hm,t)}const jt=j({neg_:tY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const t={x:O(n,"x","softplus")};return q.runKernel(hd,t)}const vd=j({softplus_:nY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const e=O(n,"x","logSigmoid");return sa(s=>({value:jt(vd(jt(s))),gradFunc:i=>G(i,Ar(jt(s)))}))(e)}const LO=j({logSigmoid_:sY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(n,e){let t=O(n,"a","sub"),s=O(e,"b","sub");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(fd,r)}const Te=j({sub_:rY});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n,e=-1){const t=O(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return sa((r,o)=>{const a=uo(r,e,!0),l=Te(r,a),u=Te(xe(l,"float32"),Pr(De(Rs(l),e,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,f=!0,m=Rs(p);return Te(h,G(De(h,e,f),m))}}})(t)}const xk=j({logSoftmax_:oY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n,e=null,t=!1){const s=O(n,"x","logSumExp"),r=et(e,s.shape),o=uo(s,r,!0),i=Te(s,o),a=Rs(i),l=De(a,r),u=Pr(l),c=ae(K(o,u.shape),u);if(t){const h=gn(c.shape,r);return K(c,h)}return c}const I1=j({logSumExp_:iY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n,e){const t=O(n,"a","logicalAnd","bool"),s=O(e,"b","logicalAnd","bool");Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(tm,r)}const Si=j({logicalAnd_:aY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const t={x:O(n,"x","logicalNot","bool")};return q.runKernel(nm,t)}const N1=j({logicalNot_:lY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n,e){const t=O(n,"a","logicalOr","bool"),s=O(e,"b","logicalOr","bool");Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(sm,r)}const wk=j({logicalOr_:uY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(n,e){const t=O(n,"a","logicalXor","bool"),s=O(e,"b","logicalXor","bool");return Ue(t.shape,s.shape),Si(wk(n,e),N1(Si(n,e)))}const MO=j({logicalXor_:cY});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mg=2147483648;function hY(n,e,t="left"){const s=O(n,"sortedSequence","searchSorted"),r=O(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=K(s,[-1,o]),l=K(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(J(l.shape)>=Mg)throw new Error(`values tensor size must less than ${Mg}`);if(a.shape[1]>=Mg)throw new Error(`trailing dim_size must less than ${Mg} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},c={side:t};return q.runKernel(i1,u,c)}const vk=j({searchSorted_:hY});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n,e){return vk(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(n,e,t,s,r){const o=O(n,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),A(Un(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Os("maxPool",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=q.runKernel(im,u,c);return l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const T1=j({maxPool_:pY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=O(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),A(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Os("maxPool3d",s,r);const u={x:a},c={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},h=q.runKernel(am,u,c);return l?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const zO=j({maxPool3d_:fY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n,e,t,s,r=!1){const i={x:O(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=q.runKernel(Yx,i,a);return{result:l[0],indexes:l[1]}}const gY=j({maxPoolWithArgmax_:mY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n,e){let t=O(n,"a","maximum"),s=O(e,"b","maximum");[t,s]=mn(t,s),t.dtype==="bool"&&(t=xe(t,"int32"),s=xe(s,"int32")),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(Yh,r)}const la=j({maximum_:yY});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n,e=null,t=!1){const r={x:O(n,"x","mean")},o={axis:e,keepDims:t};return q.runKernel(lm,r,o)}const hn=j({mean_:xY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(n,e="float32"){if(zr(n),e==="complex64"){const s=wn(n,"float32"),r=wn(n,"float32");return qa(s,r)}const t=os(J(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(n,e="float32"){if(zr(n),e==="complex64"){const s=cr(n,"float32"),r=wn(n,"float32");return qa(s,r)}const t=G2(J(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wY(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=O(n,"x","meshgrid",n instanceof Nt?n.dtype:"float32");if(e===void 0)return[s];let r=O(e,"y","meshgrid",e instanceof Nt?e.dtype:"float32");const o=J(s.shape),i=J(r.shape);return t==="xy"?(s=K(s,[1,-1]),r=K(r,[-1,1]),[dt(cr([i,1],s.dtype),s),dt(r,cr([1,o],r.dtype))]):(s=K(s,[-1,1]),r=K(r,[1,-1]),[dt(s,cr([1,i],s.dtype)),dt(cr([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n,e){let t=O(n,"a","minimum"),s=O(e,"b","minimum");[t,s]=mn(t,s),t.dtype==="bool"&&(t=xe(t,"int32"),s=xe(s,"int32")),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(Qh,r)}const Za=j({minimum_:vY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(n,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=O(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)A(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return q.runKernel(cm,i,o)}const bk=j({mirrorPad_:bY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n,e){let t=O(n,"a","mod"),s=O(e,"b","mod");[t,s]=mn(t,s);const r={a:t,b:s};return q.runKernel(Zh,r)}const VO=j({mod_:SY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n,e=null,t=!1){n=O(n,"x","moments");const s=et(e,n.shape),r=hn(n,s,t);let o=r.shape;t||(o=gn(r.shape,s));const i=_t(Te(xe(n,"float32"),K(r,o))),a=hn(i,s,t);return{mean:r,variance:a}}const $1=j({moments_:CY});function kY(n,e,t,s){const r=O(e,"data","multiRNNCell"),o=c0(t,"c","multiRNNCell"),i=c0(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<n.length;h++){const d=n[h](a,o[h],i[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const IY=j({multiRNNCell_:kY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n,e,t,s=!1){const r=O(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const l={logits:i===1?K(r,[1,-1]):r},u={numSamples:e,seed:t,normalized:s},c=q.runKernel(Qx,l,u);return i===1?K(c,[c.size]):c}const TY=j({multinomial_:NY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(n,e){let t=O(n,"a","notEqual","string_or_numeric"),s=O(e,"b","notEqual","string_or_numeric");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s};return q.runKernel(dm,r)}const eh=j({notEqual_:$Y});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:O(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return q.runKernel(fm,i,a)}const Sk=j({oneHot_:_Y});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EY(n){const t={x:O(n,"x","onesLike")};return q.runKernel(pm,t)}const Fr=j({onesLike_:EY});function RY(n,e){const t=O(n,"v1","outerProduct"),s=O(e,"v2","outerProduct");A(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=K(t,[-1,1]),o=K(s,[1,-1]);return dt(r,o)}const AY=j({outerProduct_:RY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(n,e,t=0){const s=O(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return q.runKernel(gm,o,r)}const Wo=j({pad_:DY});function OY(n,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Wo(n,[e],t)}const PY=j({pad1d_:OY});function FY(n,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,e,t)}const LY=j({pad2d_:FY});function MY(n,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,e,t)}const zY=j({pad3d_:MY});function VY(n,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(n,e,t)}const BY=j({pad4d_:VY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n,e,t){const s=O(n,"x","spaceToBatchND");A(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return q.runKernel(Nm,r,o)}const _1=j({spaceToBatchND_:WY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=O(n,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(Un(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=ys(l.shape,e,o,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=HY([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=GY([c.inHeight,c.inWidth],h,d),g=p?s:"valid",y=p?l:_1(l,h,f),w=(t==="avg"?()=>w1(y,e,o,g,i):()=>T1(y,e,o,g,i))(),b=p?w:v1(w,h,m);return u?K(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function GY(n,e,t){const s=t.map(c=>c[0]),r=t.map(c=>c[1]),o=n.concat(s,r),i=e.map((c,h)=>(c-o[h]%c)%c),a=r.map((c,h)=>c+i[h]),l=e.map((c,h)=>[s[h],a[h]]),u=e.map((c,h)=>[0,i[h]]);return[l,u]}function HY(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const BO=j({pool_:UY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(n,e){const t=O(n,"x","prelu"),s=O(e,"alpha","prelu"),r={x:t,alpha:s};return q.runKernel(ym,r)}const E1=j({prelu_:jY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(n,e=null,t=!1){let s=O(n,"x","prod");s.dtype==="bool"&&(s=xe(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return q.runKernel(xm,r,o)}const WO=j({prod_:qY});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n,e,t,s){const r=n.map((c,h)=>O(c,`tensors${h}`,"raggedGather","int32")),o=O(e,"paramsDenseValues","raggedGather"),i=O(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},u=q.runKernel(K2,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const XY=j({raggedGather_:KY});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(n,e,t){const s=O(n,"starts","raggedRange"),r=O(e,"limits","raggedRange",s.dtype),o=O(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=q.runKernel(X2,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const QY=j({raggedRange_:YY});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n,e,t,s,r){const o=O(n,"shape","raggedTensorToTensor","int32"),i=O(e,"values","raggedTensorToTensor"),a=O(t,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((h,d)=>O(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:r};return q.runKernel(Y2,u,c)}const JY=j({raggedTensorToTensor_:ZY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n,e,t){zr(n);const s=J(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return q.makeTensor(r,n,t)}const t7=j({rand_:e7});var Ck={exports:{}};Ck.exports;(function(n){(function(e,t,s){function r(l){var u=this,c=a();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function o(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function i(l,u){var c=new r(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}function a(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(Do,n,!1)})(Ck);var n7=Ck.exports,kk={exports:{}};kk.exports;(function(n){(function(e,t,s){function r(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(Do,n,!1)})(kk);var s7=kk.exports,Ik={exports:{}};Ik.exports;(function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(Do,n,!1)})(Ik);var r7=Ik.exports,Nk={exports:{}};Nk.exports;(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.x,h=l.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,l.i=h+1&7,p};function u(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}u(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.x&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(Do,n,!1)})(Nk);var o7=Nk.exports,Tk={exports:{}};Tk.exports;(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,p,f;return l.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(c^c>>>16)|0};function u(c,h){var d,p,f,m,g,y=[],x=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,x=Math.max(x,h.length)),f=0,m=-32;m<x;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;c.w=g,c.X=y,c.i=f}u(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(c.X&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(Do,n,!1)})(Tk);var i7=Tk.exports,$k={exports:{}};$k.exports;(function(n){(function(e,t,s){function r(a){var l=this,u="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var u=new r(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&o(c,u),h.state=function(){return o(u,{})}),h}t&&t.exports?t.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(Do,n,!1)})($k);var a7=$k.exports,UO={exports:{}};const l7={},u7=Object.freeze(Object.defineProperty({__proto__:null,default:l7},Symbol.toStringTag,{value:"Module"})),c7=i4(u7);(function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),u=s.pow(2,i),c=u*2,h=r-1,d;function p(b,S,C){var k=[];S=S==!0?{entropy:!0}:S||{};var N=y(g(S.entropy?[b,w(t)]:b??x(),3),k),_=new f(k),E=function(){for(var D=_.g(o),P=l,F=0;D<u;)D=(D+F)*r,P*=r,F=_.g(1);for(;D>=c;)D/=2,P/=2,F>>>=1;return(D+F)/P};return E.int32=function(){return _.g(4)|0},E.quick=function(){return _.g(4)/4294967296},E.double=E,y(w(_.S),t),(S.pass||C||function(D,P,F,L){return L&&(L.S&&m(L,_),D.state=function(){return m(_,{})}),F?(s[a]=D,P):D})(E,N,"global"in S?S.global:this==s,S.state)}function f(b){var S,C=b.length,k=this,N=0,_=k.i=k.j=0,E=k.S=[];for(C||(b=[C++]);N<r;)E[N]=N++;for(N=0;N<r;N++)E[N]=E[_=h&_+b[N%C]+(S=E[N])],E[_]=S;(k.g=function(D){for(var P,F=0,L=k.i,B=k.j,W=k.S;D--;)P=W[L=h&L+1],F=F*r+W[h&(W[L]=W[B=h&B+P])+(W[B]=P)];return k.i=L,k.j=B,F})(r)}function m(b,S){return S.i=b.i,S.j=b.j,S.S=b.S.slice(),S}function g(b,S){var C=[],k=typeof b,N;if(S&&k=="object")for(N in b)try{C.push(g(b[N],S-1))}catch{}return C.length?C:k=="string"?b:b+"\0"}function y(b,S){for(var C=b+"",k,N=0;N<C.length;)S[h&N]=h&(k^=S[h&N]*19)+C.charCodeAt(N++);return w(S)}function x(){try{var b;return d&&(b=d.randomBytes)?b=b(r):(b=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(b)),w(b)}catch{var S=e.navigator,C=S&&S.plugins;return[+new Date,e,C,e.screen,w(t)]}}function w(b){return String.fromCharCode.apply(0,b)}if(y(s.random(),t),n.exports){n.exports=p;try{d=c7}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:Do,[],Math)})(UO);var h7=UO.exports,d7=n7,p7=s7,f7=r7,m7=o7,g7=i7,y7=a7,Ou=h7;Ou.alea=d7;Ou.xor128=p7;Ou.xorwow=f7;Ou.xorshift7=m7;Ou.xor4096=g7;Ou.tychei=y7;var R1=Ou;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _k{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=R1.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class x7{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=R1.alea(o.toString()),this.randn=new _k(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class w7{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=R1.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n,e,t=1,s="float32",r){if(zr(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new x7(e,t,s,r),i=Ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const b7=j({randomGamma_:v7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(n,e=0,t=1,s,r){if(zr(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new _k(e,t,s,!1,r),i=Ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Ek=j({randomNormal_:S7});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Ek(n,0,1,e,t)}const k7=j({randomStandardNormal_:C7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n,e=0,t=1,s="float32",r){zr(n);const o=Ze(n,s),i=new w7(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const Pu=j({randomUniform_:I7});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n,e,t,s){return Pu(n,e,t,"int32",s)}const T7=j({randomUniformInt_:N7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return q.runKernel(e1,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){const t={input:O(n,"input","real")};return q.runKernel(t1,t)}const ef=j({real_:$7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const t={x:O(n,"x","reciprocal")};return q.runKernel(td,t)}const GO=j({reciprocal_:_7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n){const t={x:O(n,"x","relu")};return q.runKernel(nd,t)}const Ri=j({relu_:E7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n){const t={x:O(n,"x","relu6")};return q.runKernel(sd,t)}const Rk=j({relu6_:R7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n,e){const s={x:O(n,"x","reverse")},r={dims:e};return q.runKernel(Sm,s,r)}const mo=j({reverse_:A7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n){const e=O(n,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),mo(e,0)}const O7=j({reverse1d_:D7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n,e){const t=O(n,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),mo(t,e)}const F7=j({reverse2d_:P7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n,e){const t=O(n,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),mo(t,e)}const M7=j({reverse3d_:L7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(n,e){const t=O(n,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),mo(t,e)}const V7=j({reverse4d_:z7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const t={x:O(n,"x","round")};return q.runKernel(rd,t)}const Ak=j({round_:B7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const t={x:O(n,"x","rsqrt","float32")};return q.runKernel(od,t)}const Dk=j({rsqrt_:W7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n){const t={x:O(n,"x","selu")};return q.runKernel(id,t)}const Ok=j({selu_:U7});function G7(n,e,t,s,r,o=[1,1],i="NHWC"){const a=O(n,"x","separableConv2d"),l=O(e,"depthwiseFilter","separableConv2d"),u=O(t,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];A(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=Om(c,l,s,r,i,o),g=Ya(f,u,1,"valid",i);return h?K(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Pk=j({separableConv2d_:G7});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function H7(n,e){const t=O(n,"x","setdiff1d"),s=O(e,"y","setdiff1d");A(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let c=0;c<r.length;c++)i.has(r[c])||a++;const l=new Mn([a],t.dtype),u=new Mn([a],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const j7=H7;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const t={x:O(n,"x","sign")};return q.runKernel(ud,t)}const HO=j({sign_:q7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const t={x:O(n,"x","sin","float32")};return q.runKernel(ad,t)}const Fk=j({sin_:K7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const t={x:O(n,"x","sinh")};return q.runKernel(ld,t)}const Lk=j({sinh_:X7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n,e,t){const s=O(n,"x","slice1d");return A(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),qe(s,[e],[t])}const A1=j({slice1d_:Y7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n,e,t){const s=O(n,"x","slice2d");return A(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const Mk=j({slice2d_:Q7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(n,e,t){const s=O(n,"x","slice3d");return A(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const D1=j({slice3d_:Z7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n,e,t){const s=O(n,"x","slice4d");return A(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),qe(s,e,t)}const tf=j({slice4d_:J7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n,e=-1){const t=O(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return q.runKernel($m,s,r)}const O1=j({softmax_:e9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Vx,e)}const P1=j({fft_:t9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Gx,e)}const nf=j({ifft_:n9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=K(n,[t,e]);s=nf(r)}else{const r=[t,2*(e-1)],o=K(ef(n),[t,e]),i=K(S1(n),[t,e]),a=mo(qe(o,[0,1],[t,e-2]),1),l=G(mo(qe(i,[0,1],[t,e-2]),1),Me(-1)),u=an([o,a],1),c=an([i,l],1),h=K(qa(u,c),[r[0],r[1]]);s=nf(h)}if(s=ef(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=K(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const zk=j({irfft_:s9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(n,e,t=0){const r={x:O(n,"x","split")},o={numOrSizeSplits:e,axis:t};return q.runKernel(Tm,r,o)}const mr=j({split_:r9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(n,e){A(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=qe(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=an([n,wn(f)],n.shape.length-1),t=e}else r=n;const o=wt(r),i=K(qa(r,o),[s,t]),a=P1(i),l=Math.floor(t/2)+1,u=ef(a),c=S1(a),h=mr(u,[l,t-l],u.shape.length-1),d=mr(c,[l,t-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,K(qa(h[0],d[0]),p)}const F1=j({rfft_:o9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n,e){let t=O(n,"a","squaredDifference"),s=O(e,"b","squaredDifference");[t,s]=mn(t,s),Ue(t.shape,s.shape);const r={a:t,b:s},o={};return q.runKernel(pd,r,o)}const Vk=j({squaredDifference_:i9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(n,e){const t=O(n,"x","squeeze","string_or_numeric");return K(t,cl(t.shape,e).newShape)}const Ct=j({squeeze_:a9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n,e=0){const t=c0(n,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return q.runKernel(mm,s,r)}const yr=j({stack_:l9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(n,e=0){const s={x:O(n,"x","step")},r={alpha:e};return q.runKernel(xd,s,r)}const bd=j({step_:u9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(n,e,t,s,r=0,o=0,i=0,a=0,l=0){const c={x:O(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return q.runKernel(d1,c,h)}const jO=j({stridedSlice_:c9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const t={x:O(n,"x","tan","float32")};return q.runKernel(md,t)}const qO=j({tan_:h9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(n,e){bh(n);const t=dl(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return pl(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(n,e,t){if(bh(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=dl(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return pl(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n,e,t){if(bh(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=dl(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return pl(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n,e,t){if(bh(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=dl(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return pl(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n,e,t){if(bh(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=dl(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return pl(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n,e,t){if(bh(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=dl(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,pl(n,e,s,t)}function XO(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function Bk(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}XO(t,e,n)}function Ai(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let h=r;h<o;++h)i*=t[h];const a=r<1?1:r,l=J(e.shape)/a,u=[...Le(t.slice(0,r)),1],c=J(t);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n,e,t){const s=O(n,"tensor","tensorScatterupdate"),r=O(e,"indices","tensorScatterupdate","int32"),o=O(t,"updates","tensorScatterupdate");if(Bk(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const i={tensor:s,indices:r,updates:o},a={};return q.runKernel(o1,i,a)}const g9=j({tensorScatterUpdate_:m9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n,e=1,t=!0){const s=O(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,l]=q.runKernel(f1,o,i);return{values:a,indices:l}}const YO=j({topk_:y9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n,e=0,t=1,s,r){if(zr(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new _k(e,t,s,!0,r),i=Ze(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Wk=j({truncatedNormal_:x9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n,e=0){const t=O(n,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=q.runKernel(tk,s,r);return{values:o,indices:i}}const QO=j({unique_:w9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n,e,t){const s=O(n,"x","unsortedSegmentSum"),r=O(e,"segmentIds","unsortedSegmentSum","int32");A(Yc(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return q.runKernel(Em,o,i)}const Uk=j({unsortedSegmentSum_:v9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n,e=0){const t=O(n,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return q.runKernel(_m,s,r)}const go=j({unstack_:b9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n,e){return vk(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n,e=!0,t,s){return q.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Ze(n,"int32"),r=Ze([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function C9(n){const e=O(n,"condition","whereAsync","bool"),t=await e.data(),s=Gk(e.shape,t);return n!==e&&e.dispose(),s}const JO=C9;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function k9(n,e,t){const s=O(n,"tensor","boolMask"),r=O(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;A(i>0,()=>"mask cannot be scalar"),Zs(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=o;m<o+i;m++)l*=a[m];const u=a.slice(0,o).concat([l],a.slice(o+i)),c=K(s,u),h=K(r,[-1]),d=await JO(h),p=Ct(d,[1]),f=Mm(c,p,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}const I9=k9;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n,e,t){const s=O(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),A(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{A(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?ee(()=>{let i=ef(s),a=S1(s);return i=q.runKernel(Xl,{x:i},o),a=q.runKernel(Xl,{x:a},o),t&&(a=jt(a)),qa(i,a)}):q.runKernel(Xl,r,o)}const xt=j({transpose_:N9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n,e,t,s,r=!0){const o=O(n,"v","movingAverage"),i=O(e,"x","movingAverage"),a=O(t,"decay","movingAverage");g8(o,i),A(ot(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=Me(1),u=Te(l,a);let c=G(Te(i,o),u);if(r){A(s!=null,()=>"When using zeroDebias: true, step is required.");const h=O(s,"step","movingAverage");c=Ne(c,Te(l,na(a,h)))}return ae(o,c)}const $9=j({movingAverage_:T9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(n,e,t){zr(t);const s=O(n,"indices","scatterND","int32"),r=O(e,"updates","scatterND");Bk(r,s,t);const o={indices:s,updates:r},i={shape:t};return q.runKernel(r1,o,i)}const E9=j({scatterND_:_9});function R9(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(n,e,t,s=0){zr(t);const r=O(n,"sparseIndices","sparseToDense","int32"),o=O(e,"sparseValues","sparseToDense","string_or_numeric"),i=O(s,"defaultValue","sparseToDense",o.dtype);R9(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:t};return q.runKernel(u1,a,l)}const D9=j({sparseToDense_:A9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n,e){const t=O(e,"indices","gatherND","int32"),r={params:O(n,"x","gatherND","string_or_numeric"),indices:t};return q.runKernel(Ux,r)}const P9=j({gatherND_:O9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n,e){if(e==null)return n.shape.slice();if(ot(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n,e,t,s){const r=O(n,"x","dropout");if(A(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Nt?r.clone():r;const o=F9(r,t),i=1-e,a=Ne(Lm(ae(Pu(o,0,1,"float32",s),i)),i);return G(r,a)}const eP=j({dropout_:L9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Hk(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return $n(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function M9(n,e,t=1){const s=O(n,"predictions","inTopK"),r=O(e,"targets","inTopK");A(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),A(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Zs(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];A(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[l,u]=[i.length/o,o],c=Bn("bool",l);for(let h=0;h<l;h++){const d=h*u,p=i.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),c[h]=0;for(let m=0;m<t;m++)if(f[m].index===a[h]){c[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Fo(c,r.shape,"bool")}const z9=M9;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V9(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=o==="NHWC"?a.shape[3]:a.shape[1],c=o==="NHWC"?l.shape[3]:l.shape[1];A(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),A(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Os("conv2dDerFilter",r,i);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return q.runKernel($x,h,d)}const jk=j({conv2DBackpropFilter_:V9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return G(n,bd(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function M1(n,e){let t=e;const s=Wn(n.shape,e.shape);return s.length>0&&(t=De(t,s)),K(t,n.shape)}function z1(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Ri(n);if(e==="elu")return Pm(n);if(e==="relu6")return Rk(n);if(e==="prelu")return E1(n,t);if(e==="leakyrelu")return C1(n,s);if(e==="sigmoid")return Ar(n);throw new Error(`Unknown fused activation ${e}.`)}const V1=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B9({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",V1(q.state.gradientDepth,l)===!1){A(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Ya(n,e,t,s,r,o,i);return a!=null&&(C=ae(C,a)),z1(C,l,u,c)}const h=O(n,"x","conv2d","float32"),d=O(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=K(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),A(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Os("fused conv2d",s,i);const m=r==="NHWC"?p.shape[3]:p.shape[1];A(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),A(Un(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=zt(p.shape,d.shape,t,o,s,i);let y;a!=null&&(y=O(a,"bias","fused conv2d"),[y]=mn(y,h),r==="NHWC"?Ue(g.outShape,y.shape):(A(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),A(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){const C=u.shape;if(A(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)A(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{Ue(C,g.outShape)}catch{const N=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(N)}x=O(u,"prelu weights","fused conv2d")}const w=(C,k)=>{A(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[N,_,E,D]=k,P=L1(C,E,l);A(Xa(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const F=hk(_.shape,P,N,t,s),L=jk(_,P,N.shape,t,s),B=[F,L];if(D!=null){const W=M1(D,P);B.push(W)}return B},b={x:p,filter:d,bias:y,preluActivationWeights:x},S={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?sa((k,N,_)=>{let E=q.runKernel(Kp,b,S);return _([N,k,E]),f&&(E=K(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:w}})(p,d):sa((k,N,_,E)=>{let D=q.runKernel(Kp,b,S);return E([N,k,D,_]),f&&(D=K(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:w}})(p,d,y)}const nP=j({fusedConv2d_:B9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return q.runKernel(Px,u,c)}const sP=j({depthwiseConv2dNativeBackpropFilter_:W9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(n,e,t,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},c={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},h=q.runKernel(Fx,u,c);return l?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const rP=j({depthwiseConv2dNativeBackpropInput_:U9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(V1(q.state.gradientDepth,l)===!1){let S=Om(n,e,t,s,r,o,i);return a!=null&&(S=ae(S,a)),z1(S,l,u,c)}const h=O(n,"x","depthwiseConv2d","float32"),d=O(e,"filter","depthwiseConv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=K(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),A(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),A(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),A(Un(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Os("fused depthwiseConv2d",s,i);const m=zt(p.shape,d.shape,t,o,s,i,!0);let g;a!=null&&(g=O(a,"bias","fused conv2d"),[g]=mn(g,h),Ue(m.outShape,g.shape));let y;u!=null&&(y=O(u,"prelu weights","fused depthwiseConv2d"));const x=(S,C)=>{A(Xa(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[k,N,_,E]=C,D=L1(S,_,l),P=rP(N.shape,D,k,t,s,o,i),F=sP(N,D,k.shape,t,s,o,i);if(E!=null){const L=M1(g,D);return[P,F,L]}return[P,F]},w={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?sa((C,k,N)=>{let _=q.runKernel(Xp,w,b);return N([k,C,_]),f&&(_=K(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:x}})(p,d):sa((C,k,N,_)=>{let E=q.runKernel(Xp,w,b);return _([k,C,E,N]),f&&(E=K(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(p,d,g)}const H9=j({fusedDepthwiseConv2d_:G9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(V1(q.state.gradientDepth,o)===!1){let D=dt(n,e,t,s);return r!=null&&(D=ae(D,r)),z1(D,o,i,a)}let l=O(n,"a","fused matMul"),u=O(e,"b","fused matMul");[l,u]=mn(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=J(f),y=J(m);A(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=Ue(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),b=t?K(l,[g,c,d]):K(l,[g,d,c]),S=s?K(u,[y,p,h]):K(u,[y,h,p]);let C;r!=null&&(C=O(r,"bias","fused matMul"),[C]=mn(C,l),Ue(w,C.shape));let k;i!=null&&(k=O(i,"prelu weights","fused matMul"));const N=(D,P)=>{const[F,L,B,W]=P,Y=L1(K(D,B.shape),B,o);let z,H;if(!t&&!s?(z=dt(Y,L,!1,!0),H=dt(F,Y,!0,!1)):!t&&s?(z=dt(Y,L,!1,!1),H=dt(Y,F,!0,!1)):t&&!s?(z=dt(L,Y,!1,!0),H=dt(F,Y,!1,!1)):(z=dt(L,Y,!0,!0),H=dt(Y,F,!0,!0)),r!=null){const Z=M1(W,Y);return[z,H,Z]}else return[z,H]},_={a:b,b:S,bias:C,preluActivationWeights:k},E={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?sa((P,F,L)=>{const B=q.runKernel(qp,_,E);return L([P,F,B]),{value:K(B,w),gradFunc:N}})(b,S):sa((P,F,L,B)=>{const W=q.runKernel(qp,_,E);return B([P,F,W,L]),{value:K(W,w),gradFunc:N}})(b,S,C)}const kS=j({fusedMatMul_:j9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q9=Object.freeze(Object.defineProperty({__proto__:null,conv2d:nP,depthwiseConv2d:H9,matMul:kS},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n){return Hk(n,.54,.46)}const X9=j({hammingWindow_:K9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n){return Hk(n,.5,.5)}const oP=j({hannWindow_:Y9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(qe(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,l=an([qe(n,o,e-a),wd([a],r)]);i.push(l),o+=t}return i.length===0?co([],[0,e]):K(an(i),[i.length,e])}const iP=j({frame_:Q9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9(n,e,t,s,r=oP){s==null&&(s=tP(e));const o=iP(n,e,t),i=G(o,r(e));return F1(i,s)}const J9=j({stft_:Z9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eQ(n,e,t,s,r="bilinear",o=0){const i=O(n,"image","cropAndResize"),a=O(e,"boxes","cropAndResize","float32"),l=O(t,"boxInd","cropAndResize","int32"),u=a.shape[0];A(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),A(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),A(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),A(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:i,boxes:a,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return q.runKernel(Ax,c,h)}const tQ=j({cropAndResize_:eQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(n){const e=O(n,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return q.runKernel(Wx,t,{})}const sQ=j({flipLeftRight_:nQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(n){const e=O(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];A(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),A(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,no(e,r)}const oQ=j({grayscaleToRGB_:rQ});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iQ(n){const e=O(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];A(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),A(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=xe(e,"float32"),i=$n([.2989,.587,.114]);let a;switch(e.rank){case 2:a=lc("ij,j->i",o,i);break;case 3:a=lc("ijk,k->ij",o,i);break;case 4:a=lc("ijkl,l->ijk",o,i);break;case 5:a=lc("ijklm,m->ijkl",o,i);break;case 6:a=lc("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Tn(a,-1),xe(a,r)}const aQ=j({rgbToGrayscale_:iQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lQ(n,e,t=0,s=.5){const r=O(n,"image","rotateWithOffset","float32");A(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return q.runKernel(g1,o,i)}const uQ=j({rotateWithOffset_:lQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sd(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),A(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),A(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),A(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),A(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppression","float32"),i=O(e,"scores","nonMaxSuppression","float32"),a=Sd(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return q.runKernel(Zx,{boxes:o,scores:i},l)}const hQ=j({nonMaxSuppression_:cQ});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dQ(n,e,t){const s=pQ(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function pQ(n,e,t){return mQ(n,e,t||fQ)}function fQ(n,e){return n>e?1:n<e?-1:0}function mQ(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,e,t,s,r){return Kk(n,e,t,s,r,0)}function qk(n,e,t,s,r,o){return Kk(n,e,t,s,r,0,!1,o,!0)}function W1(n,e,t,s,r,o){return Kk(n,e,t,s,r,o,!0)}function Kk(n,e,t,s,r,o,i=!1,a=!1,l=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>r&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(E$);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&u.length>0;){const g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:w}=g;if(y<r)break;let b=!1;for(let S=h.length-1;S>=w;--S){const C=gQ(n,x,h[S]);if(C>=s){b=!0;break}if(g.score=g.score*yQ(s,c,C),g.score<=r)break}g.suppressBeginIndex=h.length,b||(g.score===y?(h.push(x),d.push(g.score)):g.score>r&&dQ(u,g,E$))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function gQ(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-o)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(i,c),y=Math.min(a,h),x=Math.min(l,d),w=Math.max(y-m,0)*Math.max(x-g,0);return w/(p+f-w)}function yQ(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function E$(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=O(n,"boxes","nonMaxSuppressionAsync"),i=O(e,"scores","nonMaxSuppressionAsync"),a=Sd(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=B1(u,c,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),$n(h,"int32")}const wQ=xQ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Sd(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u={boxes:i,scores:a},c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=q.runKernel(Jx,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const bQ=j({nonMaxSuppressionWithScore_:vQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Sd(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const u=await Promise.all([i.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=W1(c,h,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:$n(d,"int32"),selectedScores:$n(p)}}const CQ=SQ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppression"),a=O(e,"scores","nonMaxSuppression"),l=Sd(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:o},f=q.runKernel(q2,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const IQ=j({nonMaxSuppressionPadded_:kQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NQ(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=O(n,"boxes","nonMaxSuppressionAsync"),a=O(e,"scores","nonMaxSuppressionAsync"),l=Sd(i,a,t,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=qk(d,p,u,c,h,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:$n(f,"int32"),validOutputs:Me(m,"int32")}}const TQ=NQ;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Q(n,e,t=!1,s=!1){const r=O(n,"images","resizeBilinear");A(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=q.runKernel(bm,a,l);return i?K(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const aP=j({resizeBilinear_:$Q});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(n,e,t=!1,s=!1){const r=O(n,"images","resizeNearestNeighbor");A(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=K(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},u=q.runKernel(vm,a,l);return i?K(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const lP=j({resizeNearestNeighbor_:_Q});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(n,e="binary",t=!1,s=.5){const r=O(n,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let u=G($n([s]),255),c,h,d,p;if(A(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),A(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),A(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),A(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[c,h,d]=mr(r,[1,1,1],-1);const g=G(c,o),y=G(h,i),x=G(d,a);p=ae(ae(g,y),x)}else p=n;if(e==="otsu"){const g=gO(xe(Ak(p),"int32"),Fo([]),256);u=RQ(g,l)}const f=t?Du(p,u):Cr(p,u);return xe(G(f,255),"int32")}function RQ(n,e){let t=$n([-1]),s=$n([0]),r=$n([0]),o,i,a,l,u,c;for(let h=0;h<n.size-1;h++){o=qe(n,0,h+1),i=qe(n,h+1),u=Ne(De(o),e),c=Ne(De(i),e);const d=De(G(o,th(0,o.size)));a=Ne(d,De(o));const p=wd(i.shape,o.size),f=ae(th(0,i.size),p),m=G(i,f);l=Ne(De(m),De(i));const g=Te(a,l),y=Te(a,l),x=G(u,c);r=G(G(x,g),y);const w=Cr(r,s);s=fs(w,r,s),t=fs(w,$n([h]),t)}return t}const AQ=j({threshold_:EQ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(n,e,t="nearest",s="constant",r=0,o){const i=O(n,"image","transform","float32"),a=O(e,"transforms","transform","float32");A(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},u={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return q.runKernel(m1,l,u)}const OQ=j({transform_:DQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PQ(n,e,t){const s=O(n,"a","bandPart");A(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,l;typeof e=="number"?(A(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=O(e<0?o:e,"numLower","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=fs(Jp(e,0),o,Za(e,o))),typeof t=="number"?(A(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),A(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=O(t<0?i:t,"numUpper","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=fs(Jp(t,0),i,Za(t,i)));const u=K(th(0,o,1,"int32"),[-1,1]),c=th(0,i,1,"int32"),h=Te(u,c),d=Si(Du(h,a),ml(h,jt(l))),p=wn([o,i],s.dtype);return K(yr(go(K(s,[-1,o,i])).map(f=>fs(d,f,p))),r)}const FQ=j({bandPart_:PQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(n){let e;if(Array.isArray(n)){e=!1,A(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)A(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=mr(n,n.shape[0],0).map(r=>Ct(r,[0]));A(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(q.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=G(De(G(t[i],o)),t[i]);o=Te(o,a)}return Ne(o,Fm(o,"euclidean"))}));return e?yr(t,0):t}const MQ=j({gramSchmidt_:LQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(n,e=!1){if(A(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return R$(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=go(K(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[u,c]=R$(l,e);r.push(u),o.push(c)});const i=K(yr(r,0),n.shape),a=K(yr(o,0),n.shape);return[i,a]}}function R$(n,e=!1){return q.tidy(()=>{A(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=yk(t),o=qi(n);const i=co([[1]],[1,1]);let a=qi(i);const l=t>=s?s:t;for(let u=0;u<l;++u){const c=o,h=a,d=r;[a,o,r]=q.tidy(()=>{const p=qe(o,[u,u],[t-u,1]),f=Fm(p),m=qe(o,[u,u],[1,1]),g=fs(Cr(m,0),co([[-1]]),co([[1]])),y=Te(m,G(g,f)),x=Ne(p,y);x.shape[0]===1?a=qi(i):a=an([i,qe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=jt(Ne(dt(g,y),f)),b=qe(o,[u,0],[t-u,s]),S=G(w,a),C=xt(a);if(u===0)o=Te(b,dt(S,dt(C,b)));else{const _=Te(b,dt(S,dt(C,b)));o=an([qe(o,[0,0],[u,s]),_],0)}const k=xt(S),N=qe(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=Te(N,dt(dt(N,a),k));else{const _=Te(N,dt(dt(N,a),k));r=an([qe(r,[0,0],[t,u]),_],1)}return[a,o,r]}),Ve([c,h,d])}return!e&&t>s&&(r=qe(r,[0,0],[t,s]),o=qe(o,[0,0],[s,s])),[r,o]})}const VQ=j({qr_:zQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bs;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Bs||(Bs={}));function BQ(n,e,t=Bs.SUM_BY_NONZERO_WEIGHTS){const s=O(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=O(e,"weights","computeWeightedLoss"));const o=r==null?s:G(s,r);if(t===Bs.NONE)return o;if(t===Bs.SUM)return De(o);if(t===Bs.MEAN){if(r==null)return hn(o);{const i=s.size/r.size,a=Ne(De(o),De(r));return i>1?Ne(a,Me(i)):a}}if(t===Bs.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ne(De(o),Me(s.size));{const i=G(r,cr(s.shape)),a=xe(De(eh(i,Me(0))),"float32");return Ne(De(o),a)}}throw Error(`Unknown reduction: ${t}`)}const ua=j({computeWeightedLoss_:BQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(n,e,t,s=Bs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","absoluteDifference"),o=O(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=O(t,"weights","absoluteDifference")),Zs(r.shape,o.shape,"Error in absoluteDifference: ");const a=An(Te(r,o));return ua(a,i,s)}const UQ=j({absoluteDifference_:WQ});function GQ(n,e,t,s,r=Bs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","cosineDistance"),i=O(e,"predictions","cosineDistance");let a=null;s!=null&&(a=O(s,"weights","cosineDistance")),Zs(o.shape,i.shape,"Error in cosineDistance: ");const l=Me(1),u=Te(l,De(G(o,i),t,!0));return ua(u,a,r)}const HQ=j({cosineDistance_:GQ});function jQ(n,e,t,s=Bs.SUM_BY_NONZERO_WEIGHTS){let r=O(n,"labels","hingeLoss");const o=O(e,"predictions","hingeLoss");let i=null;t!=null&&(i=O(t,"weights","hingeLoss")),Zs(r.shape,o.shape,"Error in hingeLoss: ");const a=Me(1);r=Te(G(Me(2),r),a);const l=Ri(Te(a,G(r,o)));return ua(l,i,s)}const qQ=j({hingeLoss_:jQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KQ(n,e,t,s=1,r=Bs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","huberLoss"),i=O(e,"predictions","huberLoss");let a=null;t!=null&&(a=O(t,"weights","huberLoss")),Zs(o.shape,i.shape,"Error in huberLoss: ");const l=Me(s),u=An(Te(i,o)),c=Za(u,l),h=Te(u,c),d=ae(G(Me(.5),_t(c)),G(l,h));return ua(d,a,r)}const XQ=j({huberLoss_:KQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(n,e,t,s=1e-7,r=Bs.SUM_BY_NONZERO_WEIGHTS){const o=O(n,"labels","logLoss"),i=O(e,"predictions","logLoss");let a=null;t!=null&&(a=O(t,"weights","logLoss")),Zs(o.shape,i.shape,"Error in logLoss: ");const l=Me(1),u=Me(s),c=jt(G(o,Pr(ae(i,u)))),h=G(Te(l,o),Pr(ae(Te(l,i),u))),d=Te(c,h);return ua(d,a,r)}const QQ=j({logLoss_:YQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(n,e,t,s=Bs.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","meanSquaredError"),o=O(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=O(t,"weights","meanSquaredError")),Zs(r.shape,o.shape,"Error in meanSquaredError: ");const a=Vk(r,o);return ua(a,i,s)}const JQ=j({meanSquaredError_:ZQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(n,e){const t=O(n,"labels","sigmoidCrossEntropyWithLogits"),s=O(e,"logits","sigmoidCrossEntropyWithLogits");Zs(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Ri(s),o=G(s,t),i=k1(Rs(jt(An(s))));return ae(Te(r,o),i)}function tZ(n,e,t,s=0,r=Bs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"multiClassLabels","sigmoidCrossEntropy");const i=O(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","sigmoidCrossEntropy")),Zs(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Me(s),c=Me(1),h=Me(.5);o=ae(G(o,Te(c,u)),G(h,u))}const l=eZ(o,i);return ua(l,a,r)}const nZ=j({sigmoidCrossEntropy_:tZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return sa((r,o,i)=>{const l=I1(o,[t],!0),u=Te(xe(o,"float32"),l);i([r,u]);const c=jt(G(u,r));return{value:De(c,[t]),gradFunc:(p,f)=>{const[m,g]=f,y=gn(p.shape,[t]);return[G(K(p,y),Te(xe(m,"float32"),Rs(g))),G(K(p,y),Te(Rs(g),xe(m,"float32")))]}}})(n,e)}function rZ(n,e,t,s=0,r=Bs.SUM_BY_NONZERO_WEIGHTS){let o=O(n,"onehotLabels","softmaxCrossEntropy");const i=O(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=O(t,"weights","softmaxCrossEntropy")),Zs(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Me(s),c=Me(1),h=Me(o.shape[1]);o=ae(G(o,Te(c,u)),Ne(u,h))}const l=sZ(o,i);return ua(l,a,r)}const oZ=j({softmaxCrossEntropy_:rZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(n,e,t,s){const r=O(n,"indices","sparseFillEmptyRows","int32"),o=O(e,"values","sparseFillEmptyRows"),i=O(t,"denseShape","sparseFillEmptyRows","int32"),a=O(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},u=q.runKernel(Q2,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const aZ=j({sparseFillEmptyRows_:iZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n,e,t){const s=O(n,"inputIndices","sparseReshape","int32"),r=O(e,"inputShape","sparseReshape","int32"),o=O(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=q.runKernel(Z2,i);return{outputIndices:a[0],outputShape:a[1]}}const uZ=j({sparseReshape_:lZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cZ(n,e,t){const s=O(n,"data","sparseSegmentMean"),r=O(e,"indices","sparseSegmentMean","int32"),o=O(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return q.runKernel(a1,i)}const hZ=j({sparseSegmentMean_:cZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(n,e,t){const s=O(n,"data","sparseSegmentSum"),r=O(e,"indices","sparseSegmentSum","int32"),o=O(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return q.runKernel(l1,i)}const pZ=j({sparseSegmentSum_:dZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(n,e,t,s,r,o,i,a){const l=O(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=O(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},h={data:l,dataSplits:u},d=q.runKernel(p1,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const mZ=j({stringNGrams_:fZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(n,e,t=!0){const s=O(n,"input","stringSplit","string"),r=O(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=q.runKernel(J2,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const yZ=j({stringSplit_:gZ});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZ(n,e){const t=O(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return q.runKernel(ek,r,s)}const wZ=j({stringToHashBucketFast_:xZ});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(n,e,t,s=!0){const r=O(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return q.runKernel(h1,{x:r},o)}const bZ=j({staticRegexReplace_:vZ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ={fft:P1,ifft:nf,rfft:F1,irfft:zk},CZ={hammingWindow:X9,hannWindow:oP,frame:iP,stft:J9},ds={flipLeftRight:sQ,grayscaleToRGB:oQ,resizeNearestNeighbor:lP,resizeBilinear:aP,rgbToGrayscale:aQ,rotateWithOffset:uQ,cropAndResize:tQ,nonMaxSuppression:hQ,nonMaxSuppressionAsync:wQ,nonMaxSuppressionWithScore:bQ,nonMaxSuppressionWithScoreAsync:CQ,nonMaxSuppressionPadded:IQ,nonMaxSuppressionPaddedAsync:TQ,threshold:AQ,transform:OQ},uP={bandPart:FQ,gramSchmidt:MQ,qr:VQ},kZ={absoluteDifference:UQ,computeWeightedLoss:ua,cosineDistance:HQ,hingeLoss:qQ,huberLoss:XQ,logLoss:QQ,meanSquaredError:JQ,sigmoidCrossEntropy:nZ,softmaxCrossEntropy:oZ},IZ={sparseFillEmptyRows:aZ,sparseReshape:uZ,sparseSegmentMean:hZ,sparseSegmentSum:pZ},NZ={stringNGrams:mZ,stringSplit:yZ,stringToHashBucketFast:wZ,staticRegexReplace:bZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ=new Map,$Z=new Map;class Cd{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Qr{constructor(){this.classNameMap={}}static getMap(){return Qr.instance==null&&(Qr.instance=new Qr),Qr.instance}static register(e){Qr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function pe(n,e,t){A(n.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),A(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Qr.register(n),TZ.set(r,n),$Z.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gl extends Cd{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Ve(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return eY(e,t)}dispose(){this.iterations_!=null&&Ve(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(gl,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cP extends gl{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=q.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ee(()=>wt(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ee(()=>wt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;ee(()=>{const c=ae(G(l,this.rho),G(_t(a),1-this.rho)),h=G(Ne(is(ae(u,this.epsilon)),is(ae(l,this.epsilon))),a),d=ae(G(u,this.rho),G(_t(h),1-this.rho));l.assign(c),u.assign(d);const p=ae(G(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ve(this.accumulatedGrads.map(e=>e.variable)),Ve(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hP extends gl{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=q.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ee(()=>wd(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;ee(()=>{const l=ae(a,_t(i));a.assign(l);const u=ae(G(Ne(i,is(ae(l,q.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ve(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dP extends gl{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ee(()=>{this.accBeta1=Me(t).variable(),this.accBeta2=Me(s).variable()}),r==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ee(()=>{const s=Te(1,this.accBeta1),r=Te(1,this.accBeta2);t.forEach((o,i)=>{const a=q.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:ee(()=>wt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:ee(()=>wt(a).variable(l))});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=ae(G(c,this.beta1),G(u,1-this.beta1)),p=ae(G(h,this.beta2),G(_t(u),1-this.beta2)),f=Ne(d,s),m=Ne(p,r);c.assign(d),h.assign(p);const g=ae(G(Ne(f,ae(is(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(G(this.accBeta1,this.beta1)),this.accBeta2.assign(G(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ve(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ve(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ee(()=>{this.accBeta1.assign(na(this.beta1,this.iterations_+1)),this.accBeta2.assign(na(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pP extends gl{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ee(()=>{this.iteration=Me(0).variable(),this.accBeta1=Me(t).variable()}),r==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ee(()=>{const s=Te(1,this.accBeta1),r=Ne(-this.learningRate,ae(G(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=q.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:wt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:wt(a).variable(l)});const u=Array.isArray(e)?e[i].tensor:e[o];if(u==null)return;const c=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=ae(G(c,this.beta1),G(u,1-this.beta1)),p=G(h,this.beta2),f=An(u),m=la(p,f);c.assign(d),h.assign(m);const g=ae(G(Ne(r,s),Ne(d,ae(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(ae(this.iteration,1)),this.accBeta1.assign(G(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ve(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ve(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xk extends gl{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=q.registeredVariables[s];ee(()=>{const a=ae(G(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Kn(Me(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fP extends Xk{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Me(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=q.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ee(()=>wt(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&ee(()=>{let l;const u=ae(G(this.m,i),a);this.useNesterov?l=ae(G(this.c,ae(a,G(u,this.m))),o):l=ae(G(this.c,u),o),i.assign(u),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ve(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mP extends gl{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=q.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=q.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ee(()=>wt(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ee(()=>wt(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ee(()=>wt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;ee(()=>{const c=ae(G(l,this.decay),G(_t(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=ae(G(h,this.decay),G(a,1-this.decay)),p=Ne(G(a,this.learningRate),is(Te(c,ae(_t(d),this.epsilon)))),f=ae(G(u,this.momentum),p);l.assign(c),h.assign(d),u.assign(f);const m=Te(o,f);o.assign(m)}else{const h=ae(G(l,this.decay),G(_t(a),1-this.decay)),d=ae(G(u,this.momentum),Ne(G(a,this.learningRate),is(ae(h,this.epsilon))));l.assign(h),u.assign(d);const p=Te(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ve(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ve(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ve(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=[cP,hP,dP,pP,fP,mP,Xk];function EZ(){for(const n of _Z)pe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZ="model",AZ=".json",DZ=".weights.bin";function A$(n){return new Promise(e=>setTimeout(e)).then(n)}class yu{constructor(e){if(!ne().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(yu.URL_SCHEME)&&(e=e.slice(yu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=RZ),this.modelJsonFileName=e+AZ,this.weightDataFileName=e+DZ}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Zo.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=q3(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await A$(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await A$(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Am(e)}}}}yu.URL_SCHEME="downloads://";class OZ{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=ik(o,u=>this.loadWeights(u));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>_$(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=_$(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const PZ=n=>ne().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(yu.URL_SCHEME)?FZ(n.slice(yu.URL_SCHEME.length)):null;nn.registerSaveRouter(PZ);function FZ(n="model"){return new yu(n)}function LZ(n){return new OZ(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=l=>(l.then(u=>{const c=t+ ++r/n.length*(s-t);return e(c),u}),l);function i(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gP(n,e){e==null&&(e={});const t=e.fetchFunc==null?ne().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),r=0,o=.5,a=(e.onProgress==null?await Promise.all(s):await D$(s,e.onProgress,r,o)).map(h=>h.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(a):await D$(a,e.onProgress,l,u)}function MZ(n,e){var t;const s=e.fetchFunc==null?ne().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await o.read();if(l){r++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}i.enqueue(u);return}i.close()}})}async function zZ(n,e="",t,s){return yP(i=>gP(i,{requestInit:s}))(n,e,t)}function yP(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{const y="quantization"in g?g.quantization.dtype:g.dtype,x=cu[y]*J(g.shape),w=()=>{r[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,S)=>{b===g.name&&(w(),i[S]=!0)}):w(),a.push(g.name),m+=x})}),!i.every(p=>p)){const p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{e[p].paths.forEach(f=>{const m=t+(t.endsWith("/")?"":"/")+f;u.push(m)})});const c=await n(u),h={};let d=0;return l.forEach(p=>{const f=e[p].paths.length,m=new Zo(c.slice(d,d+f));o[p].forEach(y=>{const x=m.slice(y.groupOffset,y.groupOffset+y.sizeBytes),w=U3(x,[y.manifestEntry]);for(const b in w)h[b]=w[b]}),d+=f}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VZ="application/octet-stream",BZ="application/json";class Yk{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ne().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=q3(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:BZ}),"model.json"),e.weightData!=null){const i=Zo.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:VZ}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Am(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return ik(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=xS(e.weightsManifest),r=()=>MZ(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=WZ(t),o=this.weightPathPrefix||s,i=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):i.push(o+u+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=xS(e),r=await gP(t,this.loadOptions);return[s,r]}}Yk.URL_SCHEME_REGEX=/^https?:\/\//;function WZ(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function IS(n){return n.match(Yk.URL_SCHEME_REGEX)!=null}const xP=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>IS(s)):t=IS(n),t)return Qk(n,e)}return null};nn.registerSaveRouter(xP);nn.registerLoadRouter(xP);function Qk(n,e){return new Yk(n,e)}function UZ(n,e){return Qk(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _v{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class wP{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class GZ{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function HZ(n,e,t,s){const r=arguments;return new GZ(vP(...r))}function vP(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new _v(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _v({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _v({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function jZ(n){return new wP(n)}function qZ(n){return new wP(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Zo,browserFiles:LZ,browserHTTPRequest:UZ,concatenateArrayBuffers:j3,copyModel:X8,decodeWeights:U3,decodeWeightsStream:H3,encodeWeights:yS,fromMemory:HZ,fromMemorySync:vP,getLoadHandlers:P8,getModelArtifactsForJSON:ik,getModelArtifactsForJSONSync:K3,getModelArtifactsInfoForJSON:Am,getSaveHandlers:X3,getWeightSpecs:xS,http:Qk,isHTTPScheme:IS,listModels:q8,loadWeights:zZ,moveModel:Y8,registerLoadRouter:O8,registerSaveRouter:D8,removeModel:K8,weightsLoaderFactory:yP,withSaveHandler:jZ,withSaveHandlerSync:qZ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kl,O$=!1;function KZ(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(a0(o0,q.backendName)!=null){const f={pixels:n},m={numChannels:e};return q.runKernel(o0,f,m)}const[u,c]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(i)h=n.getContext("2d").getImageData(0,0,u,c).data;else if(s||t)h=n.data;else if(o||r||a){if(kl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")kl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else kl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});kl.canvas.width=u,kl.canvas.height=c,kl.drawImage(n,0,0,u,c),h=kl.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const f=u*c;d=new Int32Array(f*e);for(let m=0;m<f;m++)for(let g=0;g<e;++g)d[m*e+g]=h[m*4+g]}return KO(d,[c,u,e],"int32")}function XZ(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}async function Zk(n,e){let t=O(n,"img","toPixels");if(!(n instanceof Nt)){const u=t;t=xe(u,"int32"),u.dispose()}XZ(t);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const c=[0,0,0,255];for(let d=0;d<o;d++){const p=i[u*o+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[d]=p*a}const h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(e!=null){O$||a0(j2,q.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),O$=!0),e.width=r,e.height=s;const u=e.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return t!==n&&t.dispose(),l}const SP=j({fromPixels_:KZ});function U1(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(J(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let h=0;h<r.length-1;++h)i*=r[h];const a=n.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<t;++h)u*=a[h],l.push(a[h]);const c=[...Le(n.shape).map(h=>h/u),1].slice(0,o);return[l,i,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS=-2,YZ=-1;function G1(n,e,t){const s=n.shape.length;A(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),A(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)A(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function QZ(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function H1(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function CP(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function kP(n,e,t){return t<=n?t:t-(e-1)}function IP(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function ZZ(n,e,t,s,r,o,i,a,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;c=NP(i,p,f,s,n),h=TP(a,p,f,r,n),d=CP(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=_P(i,s,o,n,p,l),h[p]=EP(a,r,o,n,p,l),d[p]=$P(o,p,l);return{begin:c,end:h,strides:d}}function NP(n,e,t,s,r){const o=[...r],i=IP(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=kP(e,t,a);let u=s[l];n&1<<l&&(u=0),o[a]=u}return o}function TP(n,e,t,s,r){const o=[...r],i=IP(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=kP(e,t,a);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[a]=u}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=lu(0,o[a],r[a])}return o}function $P(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function _P(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=lu(0,i,l-1),i}function EP(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=lu(0,i,l):i=lu(-1,i,l-1),i}function Jk(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function eI(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function zm(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{A(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(A(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function j1(n,e,t,s,r,o,i,a,l){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)c&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};JZ(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<w),S=n[w];if(S===-1){g.push(b?1:-1);continue}const C=[d.beginMask&1<<w,d.endMask&1<<w],k=[d.strides[w]>0?0:-1,d.strides[w]>0?S:S-1];if(b&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const N=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(b){const P=d.begin[w]<0?S+d.begin[w]:d.begin[w];if(d.begin[w]=P,d.end[w]=d.begin[w]+1,P<0||P>=S)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=P$(d.begin[w],0,d.strides[w],S,C,k),d.end[w]=P$(d.end[w],1,d.strides[w],S,C,k);const D=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===S;p=p&&D,f=f&&(w===0&&d.strides[w]===1||D)}else p=p&&d.strides[w]===1&&N,f=f&&(w===0&&d.strides[w]===1||N);let _,E=!1;if(d.beginValid&&d.endValid?(_=d.end[w]-d.begin[w],E=!0):b?(_=1,E=!0):N&&S>=0&&(d.strides[w]<0?_=-S:_=S,E=!0),E){let D;_===0||_<0!=d.strides[w]<0?D=0:D=Math.trunc(_/d.strides[w])+(_%d.strides[w]!==0?1:0),g.push(D)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const b=d.finalShapeGatherIndices[w];b>=0?y.push(g[b]):b===NS&&y.push(1)}return{finalShapeSparse:y.filter((w,b)=>d.finalShapeGatherIndices[b]!==NS),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function JZ(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(NS),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(YZ),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function P$(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const eJ=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:G1,computeFlatOffset:eI,computeOutShape:H1,getNormalizedAxes:ZZ,isSliceContinous:Jk,maskToAxes:QZ,parseSliceParams:zm,sliceInfo:j1,startForAxis:_P,startIndicesWithElidedDims:NP,stopForAxis:EP,stopIndicesWithElidedDims:TP,stridesForAxis:$P,stridesWithElidedDims:CP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tJ{static sgd(e){return new Xk(e)}static momentum(e,t,s=!1){return new fP(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new mP(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new dP(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new cP(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new pP(e,t,s,r,o)}static adagrad(e,t=.1){return new hP(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zu=tJ;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nJ=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function RP(){return new Promise(n=>nJ(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1(n,e){const t=n[0].length;n.forEach((r,o)=>{A(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)A(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Gs(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Eo;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Eo||(Eo={}));function AP(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function DP(n){const e={FIRST_DIM_SIZE:Eo.FIRST_DIM_SIZE,VALUE_ROWIDS:Eo.VALUE_ROWIDS,ROW_LENGTHS:Eo.ROW_LENGTHS,ROW_SPLITS:Eo.ROW_SPLITS,ROW_LIMITS:Eo.ROW_LIMITS,ROW_STARTS:Eo.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function OP(n){return n.length===0?0:n[0]===Eo.FIRST_DIM_SIZE?n.length-1:n.length}function PP(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=30;function K1(n){return n<=tI?n:lS(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fu(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function Lu(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function Mu(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function Y1(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function Q1(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm=1.7580993408473768,Bm=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1=.3275911,J1=.254829592,ew=-.284496736,tw=1.421413741,nw=-1.453152027,sw=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function FP(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function LP(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function MP(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function nI(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function zP(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function VP(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function BP(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ev="->",sJ=/->/g,F$=",",L$="...";function rw(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(sJ,"").length)/Ev.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Ev}").`);const[s,r]=n.split(Ev);A(s.indexOf(L$)===-1,()=>`The ellipsis notation ("${L$}") is not supported yet.`);const o=s.split(F$),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==F$&&a.push(p)}const l=new Array(o.length);for(let d=0;d<i;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<o[d].length;++p)l[d].push(a.indexOf(o[d][p]))}const u=a.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function ow(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function iw(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:A(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function aw(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],l=rJ(e,a);for(const u of l)o.indexOf(u)===-1&&(s[i].push(u),o.push(u))}return{path:t,steps:s}}function lw(n){return n.every((e,t)=>e===t)}function rJ(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function uw(n,e,t=0){let s=[];if(typeof e=="number")A(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);A(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=n.shape[t]-i}A(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function UP(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function GP(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function jP(n,e){return`size ${n} must be non-negative, not ${e}`}function qP(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function KP(n,e){const t=J(n),s=J(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function XP(n,e){const t=J(n),s=J(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(){return"segment ids must be >= 0"}function YP(){return"segment ids are not increasing"}function QP(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ZP(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n,e){let t=!1,s;for(n<=tI?(s=n,t=!0):s=lS(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=lS(n,s+1);return s}function sI(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function cw(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=t+1;h<o;h++)a.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}const oJ=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:cw,computeOutShape:sI,segOpComputeOptimalWindowSize:JP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(n){try{return n.map(e=>Vo(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function eF(n){return n.map(e=>ji(e))}const iJ=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:J1,ERF_A2:ew,ERF_A3:tw,ERF_A4:nw,ERF_A5:sw,ERF_P:Z1,PARALLELIZE_THRESHOLD:tI,get RowPartitionType(){return Eo},SELU_SCALE:Bm,SELU_SCALEALPHA:Vm,applyActivation:z1,assertAndGetBroadcastShape:Ue,assertAxesAreInnerMostDims:En,assertParamsConsistent:q1,assignToTypedArray:zP,axesAreInnerMostDims:gk,calculateShapes:Ai,checkEinsumDimSizes:iw,checkPadOnDimRoundingMode:Os,combineLocations:_O,combineRaggedTensorToTensorShapes:AP,complexWithEvenIndex:LP,complexWithOddIndex:MP,computeConv2DInfo:zt,computeConv3DInfo:Jo,computeDefaultPad:uk,computeDilation2DInfo:fl,computeOptimalWindowSize:K1,computeOutAndReduceShapes:Sn,computeOutShape:Gs,computePool2DInfo:ys,computePool3DInfo:Vr,convertConv2DDataFormat:Sr,decodeEinsumEquation:rw,eitherStridesOrDilationsAreOne:Un,expandShapeToKeepDim:gn,exponent:BP,exponents:VP,fromStringArrayToUint8:eF,fromUint8ToStringArray:Go,getAxesPermutation:At,getBroadcastDims:Qa,getComplexWithIndex:nI,getEinsumComputePath:aw,getEinsumPermutation:ow,getFusedBiasGradient:M1,getFusedDyActivation:L1,getImageCenter:X1,getInnerMostAxes:Vt,getPermuted:Lu,getRaggedRank:OP,getReductionAxes:Wn,getReshaped:Fu,getReshapedPermuted:Mu,getRowPartitionTypesHelper:DP,getSliceBeginCoords:Y1,getSliceSize:Q1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:WP,getSparseFillEmptyRowsNegativeIndexErrorMessage:UP,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:GP,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:qP,getSparseReshapeInputOutputMismatchErrorMessage:XP,getSparseReshapeInputOutputMultipleErrorMessage:KP,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:HP,getSparseReshapeNegativeOutputDimErrorMessage:jP,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ZP,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:TS,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:YP,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:QP,getUndoAxesPermutation:Ei,isIdentityPermutation:lw,log:Y5,mergeRealAndImagArrays:Uo,prepareAndValidate:U1,prepareSplitSize:uw,segment_util:oJ,shouldFuse:V1,slice_util:eJ,splitRealAndImagArrays:FP,stridesOrDilationsArePositive:mu,tupleValuesAreOne:Xa,upcastType:Qn,validateDefaultValueShape:PP,validateInput:Bk,validateUpdateShape:XO,warn:Nr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */EZ();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ=ne();aJ.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var sr;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(sr||(sr={}));var M$;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(M$||(M$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ={};function tF(n){return lJ[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,u=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return es(e.inputNames[u],t,s,r);if(o.type==="tensors"){const d=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((f,m)=>{var g;return((g=d[m])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(f=>es(f,t,s,r))}const c=es(e.inputNames[u],t,s,r),h=c.dataSync();return o.type==="number"?h[0]:lo(c.shape,h)}const i=e.attrParams[n];return i&&i.value}function es(n,e,t,s){const[r,o]=rr(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[p0(r,a)]);return i!==void 0?e[p0(r,i)][o]:void 0}function z$(n,e,t){return e[p0(n,t.currentContextId)]}function Mi(n,e){const[t,s,r]=rr(n,e);return[p0(t,e&&e.currentContextId),s,r]}function p0(n,e){return e?`${n}-${e}`:n}function rr(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],i=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[o,a,i]}return t&&e.parseNodeNameCache.set(n,r),r}function my(n,e,t){let s=T("pad",n,e,t);if(s==="explicit"){s=T("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function zi(n){return n.kept?n:qi(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cJ=Object.freeze(Object.defineProperty({__proto__:null,json:uJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hJ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dJ=Object.freeze(Object.defineProperty({__proto__:null,json:hJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],fJ=Object.freeze(Object.defineProperty({__proto__:null,json:pJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mJ=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gJ=Object.freeze(Object.defineProperty({__proto__:null,json:mJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],xJ=Object.freeze(Object.defineProperty({__proto__:null,json:yJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wJ=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vJ=Object.freeze(Object.defineProperty({__proto__:null,json:wJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],SJ=Object.freeze(Object.defineProperty({__proto__:null,json:bJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],kJ=Object.freeze(Object.defineProperty({__proto__:null,json:CJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],NJ=Object.freeze(Object.defineProperty({__proto__:null,json:IJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TJ=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],$J=Object.freeze(Object.defineProperty({__proto__:null,json:TJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _J=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],EJ=Object.freeze(Object.defineProperty({__proto__:null,json:_J},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],AJ=Object.freeze(Object.defineProperty({__proto__:null,json:RJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],OJ=Object.freeze(Object.defineProperty({__proto__:null,json:DJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PJ=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],FJ=Object.freeze(Object.defineProperty({__proto__:null,json:PJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],MJ=Object.freeze(Object.defineProperty({__proto__:null,json:LJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zJ=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],VJ=Object.freeze(Object.defineProperty({__proto__:null,json:zJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],WJ=Object.freeze(Object.defineProperty({__proto__:null,json:BJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],GJ=Object.freeze(Object.defineProperty({__proto__:null,json:UJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],jJ=Object.freeze(Object.defineProperty({__proto__:null,json:HJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[cJ,dJ,fJ,gJ,xJ,vJ,SJ,kJ,NJ,$J,EJ,AJ,OJ,FJ,MJ,VJ,WJ,GJ,jJ],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&i.push(m[g.name]),m),{});let l=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(m=>{const g=a[m];g.inputNames.forEach((y,x)=>{const[w,,b]=Mi(y),S=a[w];if(S.outputs!=null){const C=S.outputs.indexOf(b);if(C!==-1){const k=`${w}:${C}`;g.inputNames[x]=k}}g.inputs.push(S),S.children.push(g)})}),Object.keys(h).length===0?d.forEach(m=>{const g=a[m];g.children.length===0&&u.push(g)}):Object.keys(h).forEach(m=>{const[g]=Mi(m),y=a[g];y!=null&&(y.signatureKey=h[m],u.push(y))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[g]=Mi(m),y=a[g];y&&(y.signatureKey=c[m],l.push(y))}):l=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:a,inputs:l,outputs:u,weights:o,placeholders:r,signature:t,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=tF(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=$S(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=$S(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=PS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=PS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=ES(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=ES(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=OS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=OS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=_S(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=_S(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=LS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=LS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=DS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=DS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=FS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=FS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=RS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=RS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=AS(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=AS(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=B$(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=B$(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const i=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=Mi(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:rI(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,i.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach((p,f)=>{const[m,,g]=Mi(p),y=o[m];if(y.outputs!=null){const x=y.outputs.indexOf(g);if(x!==-1){const w=`${m}:${x}`;d.inputNames[f]=w}}d.inputs.push(y),y.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=Mi(u[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function qJ(n){const e=ne().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function nF(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):qJ(n);return e?t:t.toLowerCase()}function $S(n,e,t,s=!1){const r=n[e];return r!=null?nF(r.s,s):t}function _S(n,e,t){const s=n[e];return s?s.b:t}function ES(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function rI(n){switch(typeof n=="string"&&(n=sr[n]),n){case sr.DT_FLOAT:case sr.DT_HALF:return"float32";case sr.DT_INT32:case sr.DT_INT64:case sr.DT_INT8:case sr.DT_UINT8:return"int32";case sr.DT_BOOL:return"bool";case sr.DT_DOUBLE:return"float32";case sr.DT_STRING:return"string";case sr.DT_COMPLEX64:case sr.DT_COMPLEX128:return"complex64";default:return null}}function B$(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function RS(n,e,t){const s=n[e];return s&&s.type?rI(s.type):t}function AS(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>rI(r)):t}function sF(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function DS(n,e,t){const s=n[e];return s&&s.shape?sF(s.shape):t}function OS(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function PS(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>nF(o,s)):t}function FS(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>sF(r)):t}function LS(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KJ{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return es(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return es(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return ES(this.node.rawAttrs,e,t);if(s.s!=null)return $S(this.node.rawAttrs,e,t);if(s.b!=null)return _S(this.node.rawAttrs,e,t);if(s.shape!=null)return DS(this.node.rawAttrs,e,t);if(s.type!=null)return RS(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return OS(this.node.rawAttrs,e,t);if(s.list.s!=null)return PS(this.node.rawAttrs,e,t);if(s.list.shape!=null)return FS(this.node.rawAttrs,e,t);if(s.list.b!=null)return LS(this.node.rawAttrs,e,t);if(s.list.type!=null)return AS(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const as=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:W3,abs:An,acos:rO,acosh:oO,add:ae,addN:hK,all:lk,any:h0,argMax:fu,argMin:iO,asin:aO,asinh:lO,atan:uO,atan2:cO,atanh:hO,avgPool:w1,avgPool3d:dO,basicLSTMCell:OK,batchNorm:Dm,batchNorm2d:pO,batchNorm3d:fO,batchNorm4d:mO,batchToSpaceND:v1,bincount:gO,bitwiseAnd:UK,booleanMaskAsync:I9,broadcastArgs:HK,broadcastTo:Pc,buffer:Ze,cast:xe,ceil:yO,clipByValue:qs,clone:qi,complex:qa,concat:an,concat1d:xO,concat2d:wO,concat3d:vO,concat4d:bO,conv1d:ck,conv2d:Ya,conv2dTranspose:dk,conv3d:SO,conv3dTranspose:kO,cos:b1,cosh:pk,cosineWindow:Hk,cumprod:d0,cumsum:fk,denseBincount:CS,depthToSpace:IO,depthwiseConv2d:Om,diag:fX,dilation2d:NO,div:Ne,divNoNan:TO,dot:$O,dropout:eP,einsum:lc,elu:Pm,enclosingPowerOfTwo:tP,ensureShape:kX,equal:Bo,erf:mk,euclideanNorm:RO,exp:Rs,expandDims:Tn,expm1:AO,eye:yk,fft:P1,fill:wd,floor:Lm,floorDiv:ak,fused:q9,gather:Mm,gatherND:P9,greater:Cr,greaterEqual:ml,ifft:nf,imag:S1,image:ds,inTopKAsync:z9,irfft:zk,isFinite:DO,isInf:OO,isNaN:PO,leakyRelu:C1,less:Jp,lessEqual:Du,linalg:uP,linspace:YX,localResponseNormalization:FO,log:Pr,log1p:k1,logSigmoid:LO,logSoftmax:xk,logSumExp:I1,logicalAnd:Si,logicalNot:N1,logicalOr:wk,logicalXor:MO,losses:kZ,lowerBound:dY,matMul:dt,max:uo,maxPool:T1,maxPool3d:zO,maxPoolWithArgmax:gY,maximum:la,mean:hn,meshgrid:wY,min:Zp,minimum:Za,mirrorPad:bk,mod:VO,moments:$1,movingAverage:$9,mul:G,multiRNNCell:IY,multinomial:TY,neg:jt,norm:Fm,notEqual:eh,oneHot:Sk,ones:cr,onesLike:Fr,op:j,outerProduct:AY,pad:Wo,pad1d:PY,pad2d:LY,pad3d:zY,pad4d:BY,pool:BO,pow:na,prelu:E1,print:sO,prod:WO,raggedGather:XY,raggedRange:QY,raggedTensorToTensor:JY,rand:t7,randomGamma:b7,randomNormal:Ek,randomStandardNormal:k7,randomUniform:Pu,randomUniformInt:T7,range:th,real:ef,reciprocal:GO,relu:Ri,relu6:Rk,reshape:K,reverse:mo,reverse1d:O7,reverse2d:F7,reverse3d:M7,reverse4d:V7,rfft:F1,round:Ak,rsqrt:Dk,scalar:Me,scatterND:E9,searchSorted:vk,selu:Ok,separableConv2d:Pk,setdiff1dAsync:j7,sigmoid:Ar,sign:HO,signal:CZ,sin:Fk,sinh:Lk,slice:qe,slice1d:A1,slice2d:Mk,slice3d:D1,slice4d:tf,softmax:O1,softplus:vd,spaceToBatchND:_1,sparse:IZ,sparseToDense:D9,spectral:SZ,split:mr,sqrt:is,square:_t,squaredDifference:Vk,squeeze:Ct,stack:yr,step:bd,stridedSlice:jO,string:NZ,sub:Te,sum:De,tan:qO,tanh:gu,tensor:Fo,tensor1d:$n,tensor2d:co,tensor3d:KO,tensor4d:d9,tensor5d:p9,tensor6d:f9,tensorScatterUpdate:g9,tile:no,topk:YO,transpose:xt,truncatedNormal:Wk,unique:QO,unsortedSegmentSum:Uk,unstack:go,upperBound:S9,variable:ZO,where:fs,whereAsync:JO,zeros:wn,zerosLike:wt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XJ=(n,e,t,s=as)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(T("a",n,e,t),T("b",n,e,t))];case"AddN":return[s.addN(T("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(T("a",n,e,t),T("b",n,e,t))];case"Mul":return[s.mul(T("a",n,e,t),T("b",n,e,t))];case"RealDiv":case"Div":return[s.div(T("a",n,e,t),T("b",n,e,t))];case"DivNoNan":return[s.divNoNan(T("a",n,e,t),T("b",n,e,t))];case"FloorDiv":return[s.floorDiv(T("a",n,e,t),T("b",n,e,t))];case"Sub":return[s.sub(T("a",n,e,t),T("b",n,e,t))];case"Minimum":return[s.minimum(T("a",n,e,t),T("b",n,e,t))];case"Maximum":return[s.maximum(T("a",n,e,t),T("b",n,e,t))];case"Pow":return[s.pow(T("a",n,e,t),T("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(T("a",n,e,t),T("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YJ=(n,e,t,s=as)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(T("x",n,e,t))];case"Acos":return[s.acos(T("x",n,e,t))];case"Acosh":return[s.acosh(T("x",n,e,t))];case"Asin":return[s.asin(T("x",n,e,t))];case"Asinh":return[s.asinh(T("x",n,e,t))];case"Atan":return[s.atan(T("x",n,e,t))];case"Atan2":return[s.atan2(T("x",n,e,t),T("y",n,e,t))];case"Atanh":return[s.atanh(T("x",n,e,t))];case"Ceil":return[s.ceil(T("x",n,e,t))];case"Complex":return[s.complex(T("real",n,e,t),T("imag",n,e,t))];case"Cos":return[s.cos(T("x",n,e,t))];case"Cosh":return[s.cosh(T("x",n,e,t))];case"Elu":return[s.elu(T("x",n,e,t))];case"Erf":return[s.erf(T("x",n,e,t))];case"Exp":return[s.exp(T("x",n,e,t))];case"Expm1":return[s.expm1(T("x",n,e,t))];case"Floor":return[s.floor(T("x",n,e,t))];case"Log":return[s.log(T("x",n,e,t))];case"Log1p":return[s.log1p(T("x",n,e,t))];case"Imag":return[s.imag(T("x",n,e,t))];case"Neg":return[s.neg(T("x",n,e,t))];case"Reciprocal":return[s.reciprocal(T("x",n,e,t))];case"Real":return[s.real(T("x",n,e,t))];case"Relu":return[s.relu(T("x",n,e,t))];case"Round":return[s.round(T("x",n,e,t))];case"Selu":return[s.selu(T("x",n,e,t))];case"Sigmoid":return[s.sigmoid(T("x",n,e,t))];case"Sin":return[s.sin(T("x",n,e,t))];case"Sign":return[s.sign(T("x",n,e,t))];case"Sinh":return[s.sinh(T("x",n,e,t))];case"Softplus":return[s.softplus(T("x",n,e,t))];case"Sqrt":return[s.sqrt(T("x",n,e,t))];case"Square":return[s.square(T("x",n,e,t))];case"Tanh":return[s.tanh(T("x",n,e,t))];case"Tan":return[s.tan(T("x",n,e,t))];case"ClipByValue":return[s.clipByValue(T("x",n,e,t),T("clipValueMin",n,e,t),T("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(T("x",n,e,t))];case"Rsqrt":return[s.rsqrt(es(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(T("x",n,e,t),T("alpha",n,e,t))];case"Prelu":return[s.prelu(T("x",n,e,t),T("alpha",n,e,t))];case"IsNan":return[s.isNaN(es(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(es(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(es(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){A(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];A(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function W$(n){return!(typeof n=="number"||n.some(e=>e<0))}function ep(n,e,t){let s=MS(n,t);const r=!W$(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=MS(o.shape,s)}),!W$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function MS(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QJ{constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Me(0),Kn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Kr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Kn(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Fo([],[0].concat(this.elementShape));const s=this.readMany(e);return Kr(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),yr(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Fo([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return Kr(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),an(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,go(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];ee(()=>{t=K(t,[1,s,o]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:r[l-1],0],h=[1,e[l],o];i[l]=K(qe(t,c,h),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xu{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);Kr(t,o.shape,"TensorList shape mismatch: "),Kn(o)}),this.idTensor=Me(0),this.maxNumElements=r,Kn(this.idTensor)}copy(){return new xu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);Kr(e,this.elementShape,"TensorList shape mismatch: ");const r=ep(this.elementShape,this.tensors,e);return ee(()=>{const o=this.tensors.map(i=>K(i,r));return yr(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=ep(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Kr(r.shape,e,"TensorList shape mismatch: "),K(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Kr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Kn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new xu([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Kr(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ep(this.elementShape,this.tensors,t);return K(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Kr(this.elementShape,t.shape,"TensorList shape mismatch: "),Kn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Kr(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ep(this.elementShape,this.tensors,s);return e.length===0?Fo([],[0].concat(r)):ee(()=>{const o=e.map(i=>K(this.tensors[i],r));return yr(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Kr(this.elementShape,t,"TensorList shape mismatch: ");const s=ep(this.elementShape,this.tensors,t);return this.size()===0?Fo([],[0].concat(s)):ee(()=>{const r=this.tensors.map(o=>K(o,s));return an(r,0)})}}function ZJ(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);Kr(r,e,"TensorList shape mismatch: ");const o=go(n);return new xu(o,e,s)}function JJ(n,e,t,s){return new xu([],n,e,s)}function eee(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new xu([],t,n.dtype,s),i=go(n,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function tee(n,e,t){let s=0;const r=e.map(c=>(s+=c,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=MS(o,t),a=s===0?0:n.size/s,l=ee(()=>{const c=[];n=K(n,[1,s,a]);for(let h=0;h<e.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,e[h],a];c[h]=K(qe(n,p,f),i)}return n.dispose(),c}),u=new xu([],t,n.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nee=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=T("thenBranch",n,e,t),r=T("elseBranch",n,e,t),o=T("cond",n,e,t),i=T("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=T("body",n,e,t),r=T("cond",n,e,t),o=T("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(c=>c.id);let l=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=o;for(;l[0];){const c=u;u=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{const s=T("pred",n,e,t);return[zi(s)]}case"Switch":{const s=T("pred",n,e,t);let r=T("data",n,e,t);return r.kept||(r=zi(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>es(r,e,t)!==void 0);if(s){const r=es(s,e,t);return[zi(r)]}return}case"Enter":{const s=T("frameName",n,e,t),r=T("tensor",n,e,t);return t.enterFrame(s),[zi(r)]}case"Exit":{const s=T("tensor",n,e,t);return t.exitFrame(),[zi(s)]}case"NextIteration":{const s=T("tensor",n,e,t);return t.nextIteration(),[zi(s)]}case"TensorArrayV3":{const s=T("size",n,e,t),r=T("dtype",n,e,t),o=T("elementShape",n,e,t),i=T("dynamicSize",n,e,t),a=T("clearAfterRead",n,e,t),l=T("identicalElementShapes",n,e,t),u=T("name",n,e,t),c=new QJ(u,r,s,o,l,i,a);return t.addTensorArray(c),[c.idTensor,Me(1)]}case"TensorArrayWriteV3":{const s=T("tensorArrayId",n,e,t),r=T("index",n,e,t),o=T("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=T("tensorArrayId",n,e,t),r=T("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=T("tensorArrayId",n,e,t),r=T("indices",n,e,t),o=T("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=T("tensorArrayId",n,e,t),r=T("indices",n,e,t),o=T("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=T("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=T("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=T("tensorArrayId",n,e,t),r=T("tensor",n,e,t),o=T("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=T("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Me(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=T("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=T("tensorListId",n,e,t),r=T("index",n,e,t),o=T("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=T("tensorListId",n,e,t),r=T("index",n,e,t),o=T("elementShape",n,e,t),i=T("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=T("indices",n,e,t),r=T("tensor",n,e,t),o=T("elementShape",n,e,t),i=T("numElements",n,e,t),a=eee(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=T("elementShape",n,e,t),r=T("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=T(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,l=JJ(s,r,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=T("tensorListId",n,e,t),r=T("indices",n,e,t),o=T("elementShape",n,e,t),i=T("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=T("tensorListId",n,e,t),r=T("elementShape",n,e,t),o=T("elementDType",n,e,t),i=T("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=T("tensor",n,e,t),r=T("elementShape",n,e,t),o=T("elementDType",n,e,t),i=ZJ(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=T("tensorListId",n,e,t),r=t.getTensorList(s.id),o=T("dtype",n,e,t),i=T("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=T("tensorListId",n,e,t),r=T("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=T("tensorListId",n,e,t),r=T("elementShape",n,e,t),o=T("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=T("tensor",n,e,t),r=T("elementShape",n,e,t),o=T("lengths",n,e,t),i=tee(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=T("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Me(r.size(),"int32")]}case"TensorListResize":{const s=T("tensorListId",n,e,t),r=T("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,e,t){const[s,r]=T("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",u=T("numArgs",n,e,t);if(o){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=T("strides",n,e,t),h=my(n,e,t),d=T("dataFormat",n,e,t).toUpperCase(),p=T("dilations",n,e,t);let[f,m]=T("args",n,e,t);i&&(m=f,f=void 0);const g=T("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}const see=(n,e,t,s=as)=>{switch(n.op){case"Conv1D":{const r=T("stride",n,e,t),o=T("pad",n,e,t),i=T("dataFormat",n,e,t).toUpperCase(),a=T("dilation",n,e,t);return[s.conv1d(T("x",n,e,t),T("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=T("strides",n,e,t),o=my(n,e,t),i=T("dataFormat",n,e,t).toUpperCase(),a=T("dilations",n,e,t);return[s.conv2d(T("x",n,e,t),T("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=U$(n,e,t);return[s.fused.conv2d({x:T("x",n,e,t),filter:T("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=U$(n,e,t);return[s.fused.depthwiseConv2d({x:T("x",n,e,t),filter:T("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=T("outputShape",n,e,t),o=T("strides",n,e,t),i=my(n,e,t);return[s.conv2dTranspose(T("x",n,e,t),T("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=T("strides",n,e,t),o=my(n,e,t),i=T("dilations",n,e,t),a=T("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(T("input",n,e,t),T("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("dataFormat",n,e,t).toUpperCase(),a=T("dilations",n,e,t);return[s.conv3d(T("x",n,e,t),T("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("kernelSize",n,e,t);return[s.avgPool(T("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("kernelSize",n,e,t);return[s.maxPool(T("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("kernelSize",n,e,t),a=T("includeBatchInIndex",n,e,t),{result:l,indexes:u}=s.maxPoolWithArgmax(T("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[l,u]}case"AvgPool3D":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("kernelSize",n,e,t);return[s.avgPool3d(T("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("kernelSize",n,e,t);return[s.maxPool3d(T("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=T("strides",n,e,t),o=T("pad",n,e,t),i=T("dilations",n,e,t),a=r[1],l=r[2],u=i[1],c=i[2];return[s.dilation2d(T("x",n,e,t),T("filter",n,e,t),[a,l],o,[u,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ree=(n,e,t,s=as)=>{switch(n.op){case"Fill":{const r=T("shape",n,e,t),o=T("dtype",n,e,t),i=T("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=T("start",n,e,t),o=T("stop",n,e,t),i=T("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=T("logits",n,e,t),o=T("numSamples",n,e,t),i=T("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=T("indices",n,e,t),o=T("depth",n,e,t),i=T("onValue",n,e,t),a=T("offValue",n,e,t),l=T("dtype",n,e,t);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(T("shape",n,e,t),T("dtype",n,e,t))];case"OnesLike":return[s.onesLike(T("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(T("shape",n,e,t),T("dtype",n,e,t),T("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(T("shape",n,e,t),T("minval",n,e,t),T("maxval",n,e,t),T("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(T("shape",n,e,t),T("minval",n,e,t),T("maxval",n,e,t),T("seed",n,e,t))];case"Range":{const r=T("start",n,e,t),o=T("stop",n,e,t),i=T("step",n,e,t);return[s.range(r,o,i,T("dtype",n,e,t))]}case"TruncatedNormal":{const r=T("shape",n,e,t),o=T("mean",n,e,t),i=T("stdDev",n,e,t),a=T("seed",n,e,t);return[s.truncatedNormal(r,o,i,T("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(T("shape",n,e,t),T("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(T("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(n,e,t){const s=T("boxes",n,e,t),r=T("scores",n,e,t),o=T("maxOutputSize",n,e,t),i=T("iouThreshold",n,e,t),a=T("scoreThreshold",n,e,t),l=T("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const oee=async(n,e,t,s,r=as)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Rv(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Rv(n,e,t),c=T("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Rv(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,u)]}case"Where":{const o=r.cast(T("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(T("x",n,e,t),T("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iee=(n,e,t,s=as)=>{switch(n.op){case"LowerBound":{const r=T("sortedSequence",n,e,t),o=T("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=T("x",n,e,t),o=T("k",n,e,t),i=T("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=T("sortedSequence",n,e,t),o=T("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=T("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=T("x",n,e,t),o=T("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aee=(n,e,t,s=as)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=T("default",n,e,t);return[es(n.name,e,t)||r];case"Placeholder":return[es(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=T("x",n,e,t);return[zi(c)]}case"IdentityN":return T("x",n,e,t).map(c=>zi(c));case"Snapshot":const o=T("x",n,e,t);return[zi(o)];case"Shape":return[s.tensor1d(T("x",n,e,t).shape,"int32")];case"ShapeN":return T("x",n,e,t).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(T("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(T("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=T("x",n,e,t),a=T("data",n,e,t),l=T("message",n,e,t),u=T("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lee{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Me(0),this.tensorMap=new Map,Kn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Me(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),ee(()=>{const r=go(t),o=s.length,i=r.length;A(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],u=r[a];Kn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return ee(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return yr(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uee=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=T("keyDType",n,e,t),i=T("valueDType",n,e,t),a=new lee(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=T("tableHandle",n,e,t,s),o=T("keys",n,e,t),i=T("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=T("tableHandle",n,e,t,s),o=T("keys",n,e,t),i=T("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=T("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cee=(n,e,t,s=as)=>{switch(n.op){case"ResizeBilinear":{const r=T("images",n,e,t),o=T("size",n,e,t),i=T("alignCorners",n,e,t),a=T("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=T("images",n,e,t),o=T("size",n,e,t),i=T("alignCorners",n,e,t),a=T("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=T("image",n,e,t),o=T("boxes",n,e,t),i=T("boxInd",n,e,t),a=T("cropSize",n,e,t),l=T("method",n,e,t),u=T("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,l,u)]}case"ImageProjectiveTransformV3":{const r=T("images",n,e,t),o=T("transforms",n,e,t),i=T("outputShape",n,e,t),a=T("fillValue",n,e,t),l=T("interpolation",n,e,t),u=T("fillMode",n,e,t);return[s.image.transform(r,o,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hee=(n,e,t,s=as)=>{switch(n.op){case"Equal":return[s.equal(T("a",n,e,t),T("b",n,e,t))];case"NotEqual":return[s.notEqual(T("a",n,e,t),T("b",n,e,t))];case"Greater":return[s.greater(T("a",n,e,t),T("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(T("a",n,e,t),T("b",n,e,t))];case"Less":return[s.less(T("a",n,e,t),T("b",n,e,t))];case"LessEqual":return[s.lessEqual(T("a",n,e,t),T("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(T("a",n,e,t),T("b",n,e,t))];case"LogicalNot":return[s.logicalNot(T("a",n,e,t))];case"LogicalOr":return[s.logicalOr(T("a",n,e,t),T("b",n,e,t))];case"Select":case"SelectV2":return[s.where(T("condition",n,e,t),T("a",n,e,t),T("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(T("a",n,e,t),T("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dee=(n,e,t,s=as)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(T("a",n,e,t),T("b",n,e,t),T("transposeA",n,e,t),T("transposeB",n,e,t))];case"Einsum":return[s.einsum(T("equation",n,e,t),...T("tensors",n,e,t))];case"Transpose":return[s.transpose(T("x",n,e,t),T("perm",n,e,t))];case"_FusedMatMul":const[r,o]=T("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",l=T("numArgs",n,e,t),u=T("leakyreluAlpha",n,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=T("args",n,e,t);return[s.fused.matMul({a:T("a",n,e,t),b:T("b",n,e,t),transposeA:T("transposeA",n,e,t),transposeB:T("transposeB",n,e,t),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(T("a",n,e,t),T("numLower",n,e,t),T("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pee=(n,e,t,s=as)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(T("x",n,e,t),T("axis",n,e,t),T("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(T("x",n,e,t),T("mean",n,e,t),T("variance",n,e,t),T("offset",n,e,t),T("scale",n,e,t),T("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(T("x",n,e,t),T("mean",n,e,t),T("variance",n,e,t),T("offset",n,e,t),T("scale",n,e,t),T("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(T("x",n,e,t),T("radius",n,e,t),T("bias",n,e,t),T("alpha",n,e,t),T("beta",n,e,t))];case"Softmax":return[s.softmax(T("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(T("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fee=(n,e,t,s=as)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(T("paramsNestedSplits",n,e,t),T("paramsDenseValues",n,e,t),T("indices",n,e,t),T("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(T("starts",n,e,t),T("limits",n,e,t),T("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(T("shape",n,e,t),T("values",n,e,t),T("defaultValue",n,e,t),T("rowPartitionTensors",n,e,t),T("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mee=(n,e,t,s=as)=>{switch(n.op){case"Max":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.max(T("x",n,e,t),a,l)]}case"Mean":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.mean(T("x",n,e,t),a,l)]}case"Min":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.min(T("x",n,e,t),a,l)]}case"Sum":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.sum(T("x",n,e,t),a,l)]}case"All":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.all(T("x",n,e,t),a,l)]}case"Any":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.any(T("x",n,e,t),a,l)]}case"ArgMax":{const a=T("axis",n,e,t);return[s.argMax(T("x",n,e,t),a)]}case"ArgMin":{const a=T("axis",n,e,t);return[s.argMin(T("x",n,e,t),a)]}case"Prod":{const a=T("axis",n,e,t),l=T("keepDims",n,e,t);return[s.prod(T("x",n,e,t),a,l)]}case"Cumprod":{const a=T("axis",n,e,t),l=T("exclusive",n,e,t),u=T("reverse",n,e,t);return[s.cumprod(T("x",n,e,t),a,l,u)]}case"Cumsum":{const a=T("axis",n,e,t),l=T("exclusive",n,e,t),u=T("reverse",n,e,t);return[s.cumsum(T("x",n,e,t),a,l,u)]}case"Bincount":const r=T("x",n,e,t),o=T("weights",n,e,t),i=T("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=T("x",n,e,t),l=T("weights",n,e,t),u=T("size",n,e,t),c=T("binaryOutput",n,e,t);return[s.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gee=(n,e,t,s=as)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=T("n",n,e,t),o=T("axis",n,e,t);let i=T("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=T("x",n,e,t),o=T("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=T("axis",n,e,t),o=T("batchDims",n,e,t),i=T("x",n,e,t),a=T("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=T("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=T("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=T("axis",n,e,t),o=T("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=T("begin",n,e,t),o=T("size",n,e,t);return[s.slice(T("x",n,e,t),r,o)]}case"StridedSlice":{const r=T("begin",n,e,t),o=T("end",n,e,t),i=T("strides",n,e,t),a=T("beginMask",n,e,t),l=T("endMask",n,e,t),u=T("ellipsisMask",n,e,t),c=T("newAxisMask",n,e,t),h=T("shrinkAxisMask",n,e,t),d=T("x",n,e,t);return[s.stridedSlice(d,r,o,i,a,l,u,c,h)]}case"Pack":return ee(()=>{const r=T("axis",n,e,t),o=T("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(u=>{const c=ot(u.shape,i);if(!c&&!ot(s.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,i)});return[s.stack(l,r)]});case"Unpack":{const r=T("axis",n,e,t),o=T("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=T("reps",n,e,t);return[s.tile(T("x",n,e,t),r)]}case"Split":case"SplitV":{const r=T("axis",n,e,t),o=T("numOrSizeSplits",n,e,t),i=T("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=T("indices",n,e,t),o=T("values",n,e,t),i=T("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=T("x",n,e,t),o=T("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=T("sparseIndices",n,e,t),o=T("outputShape",n,e,t),i=T("sparseValues",n,e,t),a=T("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=T("indices",n,e,t),o=T("values",n,e,t),i=T("tensor",n,e,t);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yee=(n,e,t,s=as)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(T("indices",n,e,t),T("values",n,e,t),T("denseShape",n,e,t),T("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(T("inputIndices",n,e,t),T("inputShape",n,e,t),T("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(T("data",n,e,t),T("indices",n,e,t),T("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(T("data",n,e,t),T("indices",n,e,t),T("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee=(n,e,t,s=as)=>{switch(n.op){case"FFT":return[s.fft(T("x",n,e,t))];case"IFFT":return[s.ifft(T("x",n,e,t))];case"RFFT":return[s.rfft(T("x",n,e,t))];case"IRFFT":return[s.irfft(T("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wee=(n,e,t,s=as)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(T("input",n,e,t),T("pattern",n,e,t),T("rewrite",n,e,t),T("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(T("data",n,e,t),T("dataSplits",n,e,t),T("separator",n,e,t),T("nGramWidths",n,e,t),T("leftPad",n,e,t),T("rightPad",n,e,t),T("padWidth",n,e,t),T("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(T("input",n,e,t),T("delimiter",n,e,t),T("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(T("input",n,e,t),T("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vee=(n,e,t,s=as)=>{switch(n.op){case"Cast":return[s.cast(T("x",n,e,t),T("dtype",n,e,t))];case"ExpandDims":{const r=T("axis",n,e,t);return[s.expandDims(T("x",n,e,t),r)]}case"Squeeze":{const r=T("axis",n,e,t);return[s.squeeze(T("x",n,e,t),r)]}case"Reshape":return[s.reshape(T("x",n,e,t),T("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(T("x",n,e,t),T("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(T("x",n,e,t),T("padding",n,e,t),T("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(T("x",n,e,t),T("padding",n,e,t),T("constantValue",n,e,t))];case"SpaceToBatchND":{const r=T("blockShape",n,e,t),o=T("paddings",n,e,t);return[s.spaceToBatchND(T("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=T("blockShape",n,e,t),o=T("crops",n,e,t);return[s.batchToSpaceND(T("x",n,e,t),r,o)]}case"DepthToSpace":{const r=T("blockSize",n,e,t),o=T("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(T("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(T("x",n,e,t),T("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(T("s0",n,e,t),T("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n,e,t,s,r=ee){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>XJ(i,a,l));case"basic_math":return r(()=>YJ(i,a,l));case"control":return nee(i,a,l);case"convolution":return r(()=>see(i,a,l));case"creation":return r(()=>ree(i,a,l));case"dynamic":return oee(i,a,l);case"evaluation":return r(()=>iee(i,a,l));case"image":return r(()=>cee(i,a,l));case"graph":return r(()=>aee(i,a,l));case"logical":return r(()=>hee(i,a,l));case"matrices":return r(()=>dee(i,a,l));case"normalization":return r(()=>pee(i,a,l));case"ragged":return r(()=>fee(i,a,l));case"reduction":return r(()=>mee(i,a,l));case"slice_join":return r(()=>gee(i,a,l));case"sparse":return r(()=>yee(i,a,l));case"spectral":return r(()=>xee(i,a,l));case"string":return r(()=>wee(i,a,l));case"transformation":return r(()=>vee(i,a,l));case"hash_table":return uee(i,a,l,s);case"custom":const u=tF(i.op);if(u&&u.customExecutor)return u.customExecutor(new KJ(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return uu(o)?o.then(i=>[].concat(i)):[].concat(o)}class H${constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,u=new Set(Object.keys(n).map(d=>rr(d)[0]));s=s||[];const c=new Set(s.map(d=>rr(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((Al(d)||$ee(d)||_ee(d))&&i==null&&(i=d,a=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function bee(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(g=>rr(g)[0]).map(g=>n.nodes[g]),o=n.initNodes||[],i=g=>t.has(typeof g=="string"?g:g.name);function a(g){return[...new Map(g.map(y=>[y.name,y])).values()]}const l=a([...r,...n.weights,...o]).filter(i),u=a([...l,...Object.values(n.nodes)]).filter(i),c=new Map(u.map(g=>[g.name,g])),h={};for(const g of u){h[g.name]=h[g.name]||0;for(const y of g.children)i(y)||(h[y.name]=Number.POSITIVE_INFINITY),h[y.name]=(h[y.name]||0)+1}const d=Object.entries(h).filter(([,g])=>g===0).map(([g])=>g),p=[...d];for(;d.length>0;){const g=d.pop(),y=c.get(g);for(const x of y.children.filter(i))--h[x.name]===0&&(p.push(x.name),d.push(x.name))}const f=p.map(g=>c.get(g)),m=See(f,l);return Cee(m,l),m}function See(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=t.get(i);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(i=>r.has(i.name))}class zg extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function Cee(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(i)){if(!t.has(l.name))throw new zg(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new zg(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new zg(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new zg(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function kee(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>Al(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},o=n.map((a,l)=>a.children.map(r).reduce((u,c)=>Math.max(u,c),s[l])),i=new Map;for(let a=0;a<n.length;++a){const l=o[a];if(l===t)continue;const u=n[a],c=n[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}const Iee=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Nee=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Tee=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Al(n){return Iee.has(n.op)}function $ee(n){return Nee.has(n.op)}function _ee(n){return Tee.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f0{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new f0(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=j$(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}const a=bee(this.graph,s),l=kee(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Kn(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(d=>this.graph.nodes[rr(d)[0]]),o=t.map(d=>rr(d)[0]),i=new Set(o);let a=o.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=ne().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return ee(()=>{const d=new H$(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[x,w]=rr(y,d),b=[];b[w]=e[y],p[x]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(b))});const f=this.getFrozenTensorIds(p),{orderedNodes:m,nodeLiveUntilMap:g}=u;for(const y of m){if(p[y.name])continue;const x=G$(y,p,d,this._resourceManager);if(uu(x))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,p,d,f,i,g.get(y.name))}return this.parent==null&&d.dispose(f),t.map(y=>es(y,p,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){if(!(Al(t)||i.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(Al(l))continue;const u=z$(l.name,s,r);if(u!=null)for(const c of u){if(!c||c.kept||o.has(c.id))continue;const h=a[c.id];h===1?(c.dispose(),delete a[c.id]):h!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,i){function a(l){return Al(l)||o.has(l.name)}if(!(Al(e)||i==null))for(const l of i){if(a(l))continue;const u=z$(l.name,t,s);for(const c of u)!c||c.kept||r.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ne().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const i=new H$(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),l=t.map(d=>es(d,a,i)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(h),l}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(b=>this.graph.nodes[rr(b)[0]]),a=s.map(b=>rr(b)[0]),l=new Set(a);let u=a.map(b=>this.graph.nodes[b]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:p}=j$(e,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{const[S,C]=rr(b),k=[];k[C]=e[b],m[S]=k});const g={},y=this.getFrozenTensorIds(m),x={};for(;f.length>0;){const b=this.processStack(i,f,t,m,x,y,l,g,c);await Promise.all(b)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=u.filter(b=>!Al(b)&&!es(b.name,m,t)).map(b=>b.name);if(w.length>0){let b="";throw d!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${o}]. Consider providing the following inputs: [${h}]. ${b}`)}return m}processStack(e,t,s,r,o,i,a,l,u){const c=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&T("isConstant",h.node,r,s)&&([d]=Mi(h.node.name,s)),r[h.node.name]==null){const p=G$(h.node,r,s,this._resourceManager);d||([d]=Mi(h.node.name,s));const f=s.currentContext;uu(p)?c.push(p.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,u),m))):(r[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,r,s,i,a,l),this.processChildNodes(h.node,t,s,r,o,u))}else this.processChildNodes(h.node,t,s,r,o,u)}return c}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[l]=Mi(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!es(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(u=>!!es(u,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=rr(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,u)=>i[u]===-1||i[u]===l);A(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&A(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=rr(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=rr(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class Eee{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ree="?tfjs-format=file",Aee="model.json";class Dee{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=bP){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new Eee}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return uu(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await H3(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new f0(V$.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=V$.Instance.transformGraph(e.modelInitializer);this.initializer=new f0(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Nt?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof Nt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,u;const c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?o[i]=this.resourceIdToCapturedInput[c]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ve(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function nh(n,e={},t=bP){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=Oee(n));const s=new Dee(n,e,t);return await s.load(),s}function Oee(n){return n.endsWith("/")||(n=n+"/"),`${n}${Aee}${Ree}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=ne();Br.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Br.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Br.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Br.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Br.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Br.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Br.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Br.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Br.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Br.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Br.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Br.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Br.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pee{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fee{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let o;const i=q$(e,t);return r?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(o=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,o=q$(s,r),i=this.usedBuffers.get(o),a=i.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");i[a]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function q$(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lee=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const o=X$(s),i=e*t*o,a=K$(e,t,s,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=i;const l=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(a).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,o=e.usage,i=K$(t,s,r,o);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(i),l=a.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);const u=X$(r),c=t*s*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function K$(n,e,t,s){return`${n}_${e}_${t}_${s}`}function X$(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mee(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(i=>`${e}.${s[i]}`),o=new Array(t-1);o[t-2]=r[t-1];for(let i=t-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}const yl=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sh;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(sh||(sh={}));const zee=(n,e,t,s,r)=>{const o={dtype:s.dtype,shape:s.shape},i=Bee(t,o,e),a=n.createShaderModule({code:i,label:e.constructor.name});let l=ne().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(i),console.groupEnd())}return r?n.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},it=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function vn(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Ki(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function we(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function Y$(n,e){let t;return t=`
     ${Vee(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function Vee(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function Bee(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${rF(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const f=t.pixelsOpType===sh.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Dl(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Dl(n[0].dtype,t.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const g=Z$(t);return[Q$,s.join(`
`),gy(e.shape),t.getUserCode(),Y$(g,t)].join(`
`)}let o,i,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((f,m)=>{const g=vn(n[m].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `,o=n[m].shape.length-1,i=vn(o),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const l=vn(e.shape.length);a+=`outShape : ${l}, `,o=e.shape.length-1,i=vn(o),a+=`
         outShapeStrides: ${i}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=Yee(a),s.push(a),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Dl(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${t.variableComponents?Dl(n[m].dtype,t.variableComponents[m]):Dl(n[m].dtype,t.outputComponent)}>;
        `)}),a!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=qee(e.shape,t.dispatchLayout),c=[Q$,s.join(`
`)+Uee,gy(e.shape),u,Kee(e.shape.length)];t.atomic||c.push(Xee(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((f,m)=>{c.push(`${gy(n[m].shape,f)}`)});const h=n.map((f,m)=>jee(f,e.shape,t.variableComponents?t.variableComponents[m]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(t.getUserCode());const d=Z$(t);return c.push(Y$(d,t)),c.join(`
`)}function Wee(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],o=[];e.forEach(c=>{r.push(c.shape),o.push(c.dtype)}),r.push(t.shape),o.push(t.dtype);const i=e.map(c=>Qa(c.shape,t.shape)),a=e.map(c=>ot(c.shape,t.shape)).join("_"),l=i.map(c=>c.join("_")).join(";"),u=rF(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(c=>c.length).join(",")+o.join(",")+n.variableNames.join(",")+l+a+u,s}const Q$=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Uee=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function gy(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const o=Le(n),i=vn(t),a=[];for(let u=0;u<t;u++)a.push(`d${u}`);if(o.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+o.map((u,c)=>{const h=`let ${a[c]} = index2 / uniforms.${r}.${Ki(c)}`,d=c===o.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${r}.${Ki(c)}`:`index2 = index2 - ${a[c]} * uniforms.${r}.${Ki(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${s}(index : i32) -> ${i} {
      ${l}
      return ${i}(${a.join(",")});
    }
  `}function Gee(n,e){const t=n.name,s=n.shape.length,r=vn(s),o="get"+t.charAt(0).toUpperCase()+t.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=i.map(c=>`${c} : i32`).join(", ");if(s<1)return`
      fn ${o}() -> ${it(e)} {
        return ${it(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let u=`${s}D`;return s===0&&(u="1D"),`
    fn ${o}(${a}) -> ${it(e)} {
      return ${it(e)}(${t}[getIndexFromCoords${u}(${r}(${i.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function Hee(n,e,t,s){const r=n.name,o=r.charAt(0).toUpperCase()+r.slice(1),i="get"+o+"ByOutput",a=n.shape.length,l=e.length,u=vn(l);if(ot(n.shape,e)&&s)return`
    fn ${i}Index(globalIndex : i32) -> ${it(t)} {
      return ${it(t)}(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> ${it(t)} {
      return ${it(t)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const c=Qa(n.shape,e),h=l-a;let d="";if(a===0)return`
    fn ${i}Index(globalIndex : i32) -> ${it(t)}{
      return get${o}();
    }

    fn ${i}Coords(coords : ${u}) -> ${it(t)}{
      return get${o}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${Ki(g+h)} = 0;`).join(`
`);let p="";if(l<2&&a>0)p="coords";else if(l>1){const g=vn(a),y=n.shape.map((x,w)=>`coords.${Ki(w+h)}`).join(", ");p=`${g}(${y})`}else p="coords";const f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${a}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${it(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${it(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> ${it(t)} {
    var coords = coordsIn;
    ${d}
    return ${it(t)}(${r}[getIndexFromCoords${m}(${p}, ${f})${t===1?"":` / ${t}`}]);
  }
`}function jee(n,e,t,s){let r=Gee(n,t);return n.shape.length<=e.length&&(r+=Hee(n,e,t,s)),r}function qee(n,e){const{x:t,y:s=[],z:r=[]}=e,o=n.length,i=t.length+s.length+r.length;if(i!==o)return"";if(t.length===o)return`fn getOutputCoords() -> ${vn(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const l=[t,s,r];for(let d=0;d<l.length;d++){const p=l[d];if(p.length!==0)if(p.length===1)a+=`let d${p[0]} = i32(globalId[${d}]);`;else{const f=Mee(p,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)a+=`let d${p[m]} = index${d} / ${f[m]};`,m===f.length-1?a+=`let d${p[m+1]} = index${d} - d${p[m]} * ${f[m]};`:a+=`index${d} = index${d} - d${p[m]} * ${f[m]};`}}const u=[];for(let d=0;d<i;d++)u.push(`d${d}`);const c=vn(i);let h=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function Kee(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:A(!1,()=>`Unsupported ${n}D shape`);break}return e}function rF(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function Dl(n,e=1){if(n==="float32")return it(e,"f32");if(n==="int32"||n==="bool")return it(e,"i32");throw new Error(`type ${n} is not supported.`)}function Xee(n,e,t){const s=n.length,r=Dl(e,t);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${it(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${it(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=vn(s);o+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : ${it(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : ${it(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return o}function Yee(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,o)=>`vec${r}, @align(16) ${o}`),n}function Z$(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yl=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function ve(n,e,t=[1,1,1],s=[1,1,1]){const[r,o,i]=[Math.ceil(Yl(n.x.map(a=>e[a]))/(t[0]*s[0])),n.y?Math.ceil(Yl(n.y.map(a=>e[a]))/(t[1]*s[1])):1,n.z?Math.ceil(Yl(n.z.map(a=>e[a]))/(t[2]*s[2])):1];return[r,o,i]}function Qee(n,e,t,s=!1){const r=[8,8,1],o=[4,4,1];return s||(n<=8&&(o[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:o}}function oF(n,e,t=!1){if(t)return[8,8,1];const s=Yl(n.x.map(o=>e[o])),r=Yl(n.y.map(o=>e[o]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function iF(n,e,t=!1){if(t)return[4,4,1];const s=Yl(n.x.map(o=>e[o])),r=Yl(n.y.map(o=>e[o]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function $e(n){return{x:n.map((e,t)=>t)}}function J$(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function aF(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function lF(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var ui;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(ui||(ui={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zee=ne().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Jee=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(i=>i<=t))return r;A(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(r[0]));return o>t?(o=Math.ceil(Math.cbrt(r[0])),A(o<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]};class kd extends wx{nextDataId(){return kd.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!aF())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Pee(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Fee(this.device),this.textureManager=new Lee(this.device),this.tensorMap=new V2(this,ks()),ne().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,o){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(ne().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),ne().getBool("WEBGPU_USE_PROFILE_TOOL")&&(A(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const m=this.readSync(r.real.dataId),g=this.readSync(r.imag.dataId),y=dy(Uo(m,g).buffer,"float32");return this.convertAndCacheOnCPU(e,y),y}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const o=["opaque","premultiplied"],i=t.resource,a=i.size;A(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=a/4,u=new ArrayBuffer(a),c=256,h=256,d=o.map(m=>new OffscreenCanvas(c,h)),p=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((m,g)=>{const y=m.getContext("webgpu");return y.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[g]}),y.getCurrentTexture()}).map((m,g)=>{const y=c*4,x=(N,_,E)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:y,offset:E},{texture:m},{width:N,height:_}),this.submitQueue();const D=p.getContext("2d",{willReadFrequently:!0});D.clearRect(0,0,N,_),D.drawImage(d[g],0,0);const P=D.getImageData(0,0,N,_).data,F=o[g],L=new Uint8ClampedArray(u,E,N*_*4);for(let B=0;B<L.length;B+=4)if(F==="premultiplied")L[B+3]=P[B+3];else{const W=P[B];L[B]=P[B+2],L[B+1]=P[B+1],L[B+2]=W}},w=Math.floor(l/(c*h));let b=c,S=h,C=0;for(let N=0;N<w;N++)x(b,S,C),C+=c*h*4;const k=l%(c*h);S=Math.floor(k/c),S>0&&(x(b,S,C),C+=S*(c*4)),b=k%c,b>0&&x(b,1,C)});const f=dy(u,t.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const o=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),i=o[0],a=o[1];r=Uo(i,a)}else{const o=await this.getBufferData(t.resource);r=dy(o,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(o),a=J$(i.dtype)*J(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),i.resource=r,ks().makeTensorFromDataId(o,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:o,resource:i}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,l=a.size,u=a.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(o,r),d=ks().makeTensorFromTensorInfo(h),p=this.tensorMap.get(h.dataId);return p.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Vo(r));return Ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ze(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=ta(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=ta(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(o);return a.kernelMs=x3(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Sh(s[0])&&(s=s.map(o=>ji(o))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=J$(t.dtype)*J(t.shape);let r;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,o,!0),r.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=i.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,r,0,s),this.stagingPendingDisposal.push(i)}else{const i=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(i).set(t.values):new Float32Array(i).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,o);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let o=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:A(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(u=16),u>o&&(o=u),t=Math.ceil(t/u)*u,s=l.data.length,r.push(t),t+=l.data.length*4}),t=Math.ceil(t/o)*o;const i=new ArrayBuffer(t);e.forEach((l,u)=>{const c=r[u];l.type==="int32"?new Int32Array(i,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(i,c,l.data.length).set(l.data):new Float32Array(i,c,l.data.length).set(l.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,s,r,o){if(o||(o=this.makeTensorInfo(e.outputShape,s)),J(o.shape)===0)return this.tensorMap.get(o.dataId).values=Bn(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=Jee(this.device,e);const i=t.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=Wee(e,i,o);const a=ne().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=zee(this.device,e,i,o,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,o,t,r),o}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],i=[];const a="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=s.concat(t).map(p=>p.shape);const d="int32";i.map(p=>{o.push({type:d,data:p});const f=Le(p);o.push({type:d,data:f})})}else{const d=Le(t.shape);o.push({type:a,data:d})}if(e.size){const d=J(e.outputShape);o.push({type:a,data:[e.outputComponent?d/e.outputComponent:d]})}r&&(o=[...o,...r]);const l=[this.tensorToBinding(t),...s.map(d=>this.tensorToBinding(d)),this.makeUniforms(o)];s.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,p)=>({binding:p,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||ne().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===sh.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=Zee){return ne().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&J(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}kd.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */aF()&&rk("webgpu",async()=>{const n={powerPreference:ne().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(t),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new kd(o,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var je;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(je||(je={}));const ete="let resultTemp = a + b;",tte="let resultTemp = atan2(a, b);",nte="let resultTemp = areal * breal - aimag * bimag;",ste="let resultTemp = areal * bimag + aimag * breal;",rte="let resultTemp = a / b;",ote="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",ite=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,ate=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,lte=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,ute=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,cte=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,hte=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,dte="return f32(a >= 1.0 && b >= 1.0);",pte=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,fte="return f32(a >= 1.0 || b >= 1.0);",mte=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,gte="let resultTemp = max(a, b);",yte="let resultTemp = min(a, b);",xte=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,wte=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,vte="let resultTemp = a * b;",bte=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,Ste=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,Cte=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,kte=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Ite="if (a < 0.0) { return b * a; }  return a;",Nte=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Tte="let resultTemp = (a - b) * (a - b);",$te="let resultTemp = a - b;";function oI(n,e){let t;do{switch(n){case je.ATAN2:t=tte;break;case je.MAX:t=gte;break;case je.MIN:t=yte;break;case je.MOD:t=e?wte:xte;break;case je.NOT_EQUAL:t=e?Ste:bte;break;case je.POW:t=e?kte:Cte;break;default:continue}let s,r,o;return e?(s="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(s="isnan",r="f32",o="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case je.ADD:t=ete;break;case je.COMPLEX_MULTIPLY_IMAG:t=ste;break;case je.COMPLEX_MULTIPLY_REAL:t=nte;break;case je.DIV:t=rte;break;case je.ELU_DER:t=ote;break;case je.EQUAL:t=ite;break;case je.FLOOR_DIV:t=ate;break;case je.GREATER:t=lte;break;case je.GREATER_EQUAL:t=ute;break;case je.LESS:t=cte;break;case je.LESS_EQUAL:t=hte;break;case je.LOGICAL_AND:return e?pte:dte;case je.LOGICAL_OR:return e?mte:fte;case je.MUL:t=vte;break;case je.PRELU:return e?Nte:Ite;case je.SQUARED_DIFFERENCE:t=Tte;break;case je.SUB:t=$te;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ye;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(ye||(ye={}));const _te="return abs(a);",Ete=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Rte=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Ate=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,Dte="return asinh(a);",Ote=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Pte=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Fte="return ceil(a);",Lte="return cos(a);",Mte=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,zte="return exp(a) - 1.0;",Vte="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Bte=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Wte=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${Z1};
  let a1 = ${J1};
  let a2 = ${ew};
  let a3 = ${tw};
  let a4 = ${nw};
  let a5 = ${sw};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Ute="return exp(a);",Gte="return floor(a);",Hte="return f32(!isnan(a) && !isinf(a));",jte="return f32(isinf(a));",qte="return f32(isnan(a));",Kte="return a;",Xte=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Yte=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,Qte="return f32(!(a >= 1.0));",Zte="return -a;",Jte="if (a < 0.0) { return uniforms.alpha * a; } return a;",ene=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,tne="return 1.0 / a;",nne="return select(a, 0.0, a < 0.0);",sne="return clamp(a, 0.0, 6.0);",rne="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",one=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,ine="return round(a);",ane="return inverseSqrt(a);",lne=`
  if (a >= 0.0) {
    return ${Bm} * a;
  } else {
    return ${Vm} * (exp(a) - 1.0);
  }
`,une="return 1.0 / (1.0 + exp(-1.0 * a));",cne="return sign(a);",hne="return sin(a);",dne=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,pne=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,fne="return sqrt(a);",mne="return a * a;",gne=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,yne="return tan(a);",xne=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,wne="return f32(i32((a)));";function El(n,e){switch(n){case ye.ABS:return _te;case ye.ACOS:return Ete;case ye.ACOSH:return Rte;case ye.ASIN:return Ate;case ye.ASINH:return Dte;case ye.ATAN:return Ote;case ye.ATANH:return Pte;case ye.COS:return Lte;case ye.COSH:return Mte;case ye.CEIL:return Fte;case ye.ELU:return e?Bte:Vte;case ye.ERF:return Wte;case ye.EXP:return Ute;case ye.EXPM1:return zte;case ye.FLOOR:return Gte;case ye.IS_FINITE:return Hte;case ye.IS_INF:return jte;case ye.IS_NAN:return qte;case ye.LINEAR:return Kte;case ye.LOG:return Xte;case ye.LOG1P:return Yte;case ye.LOGICAL_NOT:return Qte;case ye.NEG:return Zte;case ye.LEAKYRELU:return e?ene:Jte;case ye.RECIPROCAL:return tne;case ye.RELU:return e?one:nne;case ye.RELU6:return e?rne:sne;case ye.ROUND:return ine;case ye.RSQRT:return ane;case ye.SELU:return lne;case ye.SIGMOID:return une;case ye.SIGN:return cne;case ye.SIN:return hne;case ye.SINH:return dne;case ye.SOFTPLUS:return pne;case ye.SQRT:return fne;case ye.SQUARE:return mne;case ye.STEP:return gne;case ye.TAN:return yne;case ye.TANH:return xne;case ye.TO_INT:return wne;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=El(ye.LINEAR);else if(n==="relu")r=El(ye.RELU,t);else if(n==="elu")r=El(ye.ELU,t);else if(n==="relu6")r=El(ye.RELU6,t);else if(n==="prelu")r=oI(je.PRELU,t);else if(n==="sigmoid")r=El(ye.SIGMOID,t);else if(n==="leakyrelu")r=El(ye.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const i=it(t?4:1);let a="";return e?a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:a=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,a}function zu(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n,e,t=!1,s=!1,r=!1,o=1){A(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);const i=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${it(o)} {
    var value = ${it(o)}(0.0);
    ${t&&r?i:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${it(o)} {
    var value = ${it(o)}(0.0);
    ${a}
    return value;
  }
  `}function iI(n,e,t,s,r=!1,o=!1,i=!1,a=1){return`
  ${uF(t,s,r,o,i,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${it(a)}) {
    ${r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${zu(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const vne=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,bne=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",o="";for(let i=0;i<e;i++)r+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,o+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}};function hw(n,e,t=!1,s=32,r=!1,o=32,i=!1){const a=e[1]*n[1],l=e[0]*n[0],u=t?a:s,c=t?s:a,h=u/e[0],d=s/e[1],p=n[1],f=n[0];return A((t&&h===4&&n[1]===4||!t&&(h===3||h===4))&&u%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${s}>;

  ${we()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${vne(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${bne(t,h,p,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const e_=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Sne=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function dw(n,e,t=!1,s=32,r=!1,o=32,i=!1,a=!1){const l=n[1]*e[1],u=n[0]*e[0],c=t?l:s,h=t?s:l;A(h%e[1]===0&&c%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],p=c/e[0],f=s/e[1],m=n[1],g=n[0],y=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${e_(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${e_(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${Sne(t)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${s}>;

    ${we()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(o/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}const Cne=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function kne(n,e=!1){A(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${we()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Cne(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}let Ine=class{constructor(e,t,s=!1,r=!1,o=null,i=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=s?e[1]:e[2];if(this.isVec4=(u%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=Qee(t[1],u,t[2],s);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=o!=null,h=a!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const i=e%r===0,a=t%o===0,l=s%this.tileInner===0;return[i,a,l]}getUserCode(){return`
      ${ca(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${iI(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?hw(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?kne(this.workgroupSize,this.transposeA):dw(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${we()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Tne{constructor(e,t=!1,s=!1,r=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=r!=null,l=i!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${ca(this.activation,this.hasPreluActivationWeights)}
      ${iI(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Nne(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ne(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${we()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class _ne{constructor(e,t,s,r=!1,o=!1,i=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const u=i!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=o,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${o}`}getUserCode(){return`
      ${ca(this.activation,this.hasPreluActivationWeights)}
      ${iI(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${$ne(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ene{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,A(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ve(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${uF(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${it(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${yl("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?hw(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):dw(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class Rne{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${ca(this.activation,this.hasPreluActivationWeights)}
    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${zu(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ane=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||_u(r),o==="string"){const i=dn(o,J(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new Ane(s),a=[{type:"float32",data:[r]}];return e.runWebGPUProgram(i,[],o,a)}}const Dne={kernelName:Bx,backendName:"webgpu",kernelFunc:Hs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,o=J(s.shape),i=W2(r,o),a=J(i);return A(o===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}const One={kernelName:wm,backendName:"webgpu",kernelFunc:Ae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=J(m),x=J(g),b=Ue(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);A(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const S=t?[y,h,p]:[y,p,h],C=s?[x,f,d]:[x,d,f],k=Ae({inputs:{x:n},backend:r,attrs:{shape:S}}),N=Ae({inputs:{x:e},backend:r,attrs:{shape:C}}),_=[k,N],E=Math.max(y,x),D=[k,N],P=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}];let F,L;const B=[E,p,f];let W=ne().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(W<0){const z=ne().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),H=z>0?z:r.thresholdToIncreaseWorkgroups,Z=E*Math.ceil(p/32)*Math.ceil(f/32);Z<=H||p<=8&&Z<=H*2?E*p*f<=128?W=ui.MatMulReduceProgram:E===1&&d>=2e3?W=ui.MatMulSplitKProgram:W=ui.MatMulSmallOutputSizeProgram:W=ui.MatMulPackedProgram}switch(W){case ui.MatMulReduceProgram:F=new Tne(B,t,s,o,l,i);break;case ui.MatMulSplitKProgram:{if(L=Hs({backend:r,attrs:{shape:B,value:0,dtype:n.dtype}}),F=new Ene(B,d,t,s),o||l){L=r.runWebGPUProgram(F,D,n.dtype,P,L);const H=new Rne(L.shape,o,l,i);let Z=null;const te=[L];o&&te.push(o),i&&te.push(i),l==="leakyrelu"&&(Z=[{type:"float32",data:[a]}],H.uniforms+=" alpha : f32,");const re=r.runWebGPUProgram(H,te,L.dtype,Z);_.push(L);const le=Ae({inputs:{x:re},backend:r,attrs:{shape:b}});_.push(re);for(const he of _)r.disposeData(he.dataId);return le}break}case ui.MatMulSmallOutputSizeProgram:F=new _ne(S,C,B,t,s,o,l,i);break;case ui.MatMulPackedProgram:const z=r.adapterInfo.isIntel();F=new Ine(S,B,t,s,o,l,i,z);break;default:throw new Error(`Unsupported MatMulProgramType ${W}.`)}o&&D.push(o),i&&D.push(i),l==="leakyrelu"&&(P.push({type:"float32",data:[a]}),F.uniforms+=" alpha : f32,"),L=r.runWebGPUProgram(F,D,n.dtype,P,L);const Y=Ae({inputs:{x:L},backend:r,attrs:{shape:b}});_.push(L);for(const z of _)r.disposeData(z.dataId);return Y}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pne(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return pw({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const Fne={kernelName:qp,backendName:"webgpu",kernelFunc:Pne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let t_=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Ue(t,s),this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${oI(this.op,!1)}
      }

      ${we("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let m0=class{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Ue(t,s),this.dispatchLayout=$e(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,o=s.length>0&&s[s.length-1]%4===0;r&&o?(this.outputComponent=4,this.variableComponents=[4,4]):r&&(h$(s)||s[s.length-1]===1)||o&&(h$(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${oI(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${we("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${we("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const Lne={kernelName:Gh,backendName:"webgpu",kernelFunc:xr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.tensorMap.get(o.dataId),a=xr({inputs:{x:s},backend:t}),l=xr({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const Mne={kernelName:Tx,backendName:"webgpu",kernelFunc:Vu};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Id=class{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${El(this.op,!1)}
      }
      ${we("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vt({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:o}=s,i=r,a=t||o.dtype;if(i.shouldExecuteOnCPU([o])&&e!=null){const u=i.tensorMap.get(o.dataId),c=e(u.values,a);return i.makeTensorInfo(o.shape,a,c)}const l=new Id(o.shape,n);return i.runWebGPUProgram(l,[o],a)}}function Zn({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(t&&i.dtype==="complex64"){const h=l.tensorMap.get(i.dataId),d=l.tensorMap.get(a.dataId);let p,f;if(n!==je.MUL)[p,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{const[y,x]=g,w={dataId:y.dataId,dtype:y.dtype,shape:i.shape},b={dataId:x.dataId,dtype:x.dtype,shape:a.shape},S=new m0(n,i.shape,a.shape);return l.runWebGPUProgram(S,[w,b],Qn(y.dtype,x.dtype))});else{const g=new t_(je.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),y=new t_(je.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];p=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}const m=Vu({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}const u=s||Qn(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([i,a]))&&e!=null){const h=l.tensorMap.get(i.dataId).values,d=l.tensorMap.get(a.dataId).values,p=i.dtype==="string"?Go(h):h,f=i.dtype==="string"?Go(d):d,[m,g]=e(i.shape,a.shape,p,f,u);return l.makeTensorInfo(g,u,m)}const c=new m0(n,i.shape,a.shape);return l.runWebGPUProgram(c,[i,a],u)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const zne=n=>{const{x:e}=n.inputs,t=n.backend;Oe(e,"abs");let s=new Float32Array(J(e.shape));const r=t.data.get(e.dataId).values;return s=cF(r),t.makeOutput(s,e.shape,e.dtype)},Vne={kernelName:Rf,backendName:"cpu",kernelFunc:zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(n){return(e,t,s,r,o)=>{const i=Ue(e,t),a=i.length,l=Le(i),u=J(i),c=Bn(o,u),h=e.length,d=t.length,p=Le(e),f=Le(t),m=Qa(e,i),g=Qa(t,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const x=Ch(y,a,l),w=x.slice(-h);m.forEach(k=>w[k]=0);const b=yi(w,h,p),S=x.slice(-d);g.forEach(k=>S[k]=0);const C=yi(S,d,f);c[y]=n(s[b],r[C])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}const Bne={kernelName:Tx,backendName:"cpu",kernelFunc:ar};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0(n,e,t="float32"){if(t==="complex64"){const r=g0(n,e,"float32"),o=g0(n,e,"float32");return ar({inputs:{real:r,imag:o},backend:n})}const s=os(J(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ci(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Wne={kernelName:Gh,backendName:"cpu",kernelFunc:Ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wu(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const Une={kernelName:t1,backendName:"cpu",kernelFunc:wu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Au([0],t),[o,i]=Cn((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Ja(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Ci({inputs:{x:r},backend:t});const c=g0(t,r.shape,r.dtype),h=Ja({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),d=ar({inputs:{real:h,imag:c},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=wu({inputs:{input:r},backend:t}),h=Ja({inputs:{x:c},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(c),h}if(!U2(r.dtype,o)){const c=Ci({inputs:{x:r},backend:t});return{dataId:c.dataId,shape:c.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,l,u]=hF(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}const Gne={kernelName:Rh,backendName:"cpu",kernelFunc:Ja};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;Oe([i,a],n);const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=i.dtype==="string"?Go(u):u,d=i.dtype==="string"?Go(c):c,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const u=Ja({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Ja({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,w=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[S,C,k]=t(i.shape,a.shape,p,f,w,b),N=l.makeTensorInfo(k,"float32",S),_=l.makeTensorInfo(k,"float32",C),E=ar({inputs:{real:N,imag:_},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(N),l.disposeIntermediateTensorInfo(_),E}else{const u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function aI(n){return(e,t,s,r,o,i)=>{const a=Ue(e,t),l=J(a),u=a.length,c=Le(a),h=Bn("float32",l),d=Bn("float32",l),p=Qa(e,a),f=Qa(t,a),m=Uo(s,r),g=Uo(o,i),y=e.length,x=Le(e),w=t.length,b=Le(t);if(p.length+f.length===0)for(let S=0;S<h.length;S++){const C=S%m.length,k=S%g.length,N=n(m[C*2],m[C*2+1],g[k*2],g[k*2+1]);h[S]=N.real,d[S]=N.imag}else for(let S=0;S<h.length;S++){const C=Ch(S,u,c),k=C.slice(-y);p.forEach(P=>k[P]=0);const N=yi(k,y,x),_=C.slice(-w);f.forEach(P=>_[P]=0);const E=yi(_,w,b),D=n(m[N*2],m[N*2+1],g[E*2],g[E*2+1]);h[S]=D.real,d[S]=D.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF=Cn((n,e)=>n+e),Hne=aI((n,e,t,s)=>({real:n+t,imag:e+s})),rh=Gn(Eu,dF,Hne),jne={kernelName:Eu,backendName:"cpu",kernelFunc:rh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n,e,t,s,r){const o=J(s),i=os(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function pF(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=Ze([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const u=n.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?i.set(1,a,u):e.size>0?i.set(i.get(a,u)+e.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF=Cn((n,e)=>n&e),qne=Gn(Ix,fF),Kne={kernelName:Ix,backendName:"cpu",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Di(n){return(e,t,s)=>{const r=dn(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n,e,t){const s=Di(e);return xl(n,s,t)}function xl(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;Oe(i,n);const a=o,l=a.data.get(i.dataId).values;let u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Go(l)}else u=l;const c=t||i.dtype,h=e(u,c,r);return a.makeTensorInfo(i.shape,c,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF=Di(n=>Math.ceil(n)),Xne=xl(Ah,mF),Yne={kernelName:Ah,backendName:"cpu",kernelFunc:Xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(n,e,t,s){const r=dn(t,J(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=J(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?Go(i.vals):i.vals;let l=0;for(let u=0;u<i.shape[0];++u){const c=u*e[1]+o;for(let h=0;h<i.shape[1];++h)r[c+h]=a[l++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF=Cn((n,e)=>n===e?1:0),xF=Gn(qf,yF,null,"bool"),Qne={kernelName:qf,backendName:"cpu",kernelFunc:xF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF=Di(n=>Math.exp(n)),vF=xl(zh,wF,"float32"),Zne={kernelName:zh,backendName:"cpu",kernelFunc:vF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bF=Di(n=>Math.expm1(n)),Jne=xl(Vh,bF),ese={kernelName:Vh,backendName:"cpu",kernelFunc:Jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF=Di(n=>Math.floor(n)),tse=xl(Bh,SF),nse={kernelName:Bh,backendName:"cpu",kernelFunc:tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF=Cn((n,e)=>Math.floor(n/e)),sse=Gn(Wh,CF,null,"int32"),rse={kernelName:Wh,backendName:"cpu",kernelFunc:sse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(n,e,t,s,r,o,i,a,l){const u=Ze([s,o],t);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=n[c*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=l/o)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<o;p++)u.values[c*o+p]=e.get(...e.indexToLoc(d*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(n,e,t){const s=Ze(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],u=e.locToIndex([a,l]);i[2]=e.values[u];const c=n.locToIndex(i);0<=c&&c<n.values.length&&(s.values[r]=n.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=Cn((n,e)=>n>e?1:0),ose=Gn(Qf,NF,null,"bool"),ise={kernelName:Qf,backendName:"cpu",kernelFunc:ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF=Cn((n,e)=>n>=e?1:0),ase=Gn(Uh,TF,null,"bool"),lse={kernelName:Uh,backendName:"cpu",kernelFunc:ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=Cn((n,e)=>n<e?1:0),use=Gn(Jf,$F,null,"bool"),cse={kernelName:Jf,backendName:"cpu",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F=Cn((n,e)=>n<=e?1:0),hse=Gn(em,_F,null,"bool"),dse={kernelName:em,backendName:"cpu",kernelFunc:hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n,e,t){const s=(e-n)/(t-1),r=os(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=Di(n=>Math.log(n)),pse=xl(Kh,RF),fse={kernelName:Kh,backendName:"cpu",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(n,e,t,s){const r=Bn(s,J(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let l=0;l<e;++l){const u=n[i+l];(Number.isNaN(u)||u>a)&&(a=u)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=Cn((n,e)=>Math.max(n,e)),mse=Gn(Yh,DF),gse={kernelName:Yh,backendName:"cpu",kernelFunc:mse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF=Cn((n,e)=>Math.min(n,e)),yse=Gn(Qh,OF),xse={kernelName:Qh,backendName:"cpu",kernelFunc:yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uI=Cn((n,e)=>n*e),wse=aI((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),fw=Gn(Jh,uI,wse),vse={kernelName:Jh,backendName:"cpu",kernelFunc:fw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n,e,t){const s=hl(-1,t);return uI([],e,s,n,t)}function bse(n){const{inputs:e,backend:t}=n,{x:s}=e;Oe(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=PF(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const Sse={kernelName:hm,backendName:"cpu",kernelFunc:bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF=Cn((n,e)=>n!==e?1:0),Cse=Gn(dm,FF,null,"bool"),kse={kernelName:dm,backendName:"cpu",kernelFunc:Cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(n,e,t,s,r){const o=e.length,i=J(e),a=Le(e),l=Le(r),u=Bn(t,J(r));for(let c=0;c<i;++c){const h=Ch(c,o,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=yi(d,o,l);u[p]=n[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;Oe(r,"transpose");const i=r.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,u=cI(l,r.shape,r.dtype,o,a);return{dataId:s.write(u,a,r.dtype),shape:a,dtype:r.dtype}}const Ise={kernelName:Xl,backendName:"cpu",kernelFunc:Ks};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n,e,t,s){const[r,o]=Sn(n,s),i=Qn(e,"int32"),a=os(J(r),i),l=J(o);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];a[u]=h}return{outVals:a,outShape:r,outDtype:i}}function Nse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Oe(r,"prod");const a=r.shape.length,l=et(o,r.shape),u=At(l,a);let c=l,h=r;const d=[];u!=null&&(h=Ks({inputs:{x:r},backend:t,attrs:{perm:u}}),d.push(h),c=Vt(c.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=LF(h.shape,h.dtype,p,c);let y=m;return i&&(y=gn(m,l)),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(y,g,f)}const Tse={kernelName:xm,backendName:"cpu",kernelFunc:Nse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $se(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Ch(r,e.length,Le(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function _se(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function Ese(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);_se(t,s);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<n.length;++u){let c=n[u],h=n[u]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let y=c;y<h;++y)a[f].push(p[y+1]+g)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),o+=h-c)}return{outSplits:a,valueSlices:r,numValues:o}}function Rse(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=dn("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}function n_(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function Ase(n,e,t,s,r,o){const i=n_(e,2)[1],a=n_(o,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<s;++h)r[l*a+h]=n[c*i+h];++l}}function Dse(n,e,t,s,r){const o=e.slice();o[0]=r;const i=dn(t,J(o)),a=n.length,l=a===0?0:a/e[0];return Ase(n,e,s,l,i,o),[i,o]}function MF(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if($se(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=Ese(o,i,n,u),p=Rse(c),f=Dse(t,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s_=2147483647;function zF(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,u=i.length===0,c=[];a||c.push(e[0]),l||c.push(r[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=dn("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const y=a?n[0]:n[g],x=l?s[0]:s[g],w=u?o[0]:o[g];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&x<y||w<0&&x>y)b=0;else if(b=Math.ceil(Math.abs((x-y)/w)),b>s_)throw new Error(`Requires ((limit - start) / delta) <= ${s_}`);d[g+1]=d[g]+b}const p=d[h],f=dn(t,p);let m=0;for(let g=0;g<h;++g){const y=d[g+1]-d[g];let x=a?n[0]:n[g];const w=u?o[0]:o[g];for(let b=0;b<y;++b)f[m++]=x,x+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hr=Eo;class y0{constructor(e,t,s,r,o,i,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=DP(c),this.raggedRank=OP(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Hr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Hr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Hr.VALUE_ROWIDS:return y0.getMaxWidthValueRowID(t);case Hr.ROW_SPLITS:return y0.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Hr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return o_(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;PP(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=AP(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return A(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let u=Math.min(r,l),c=t[a];c===-1&&(u=0);for(let h=0;h<u;++h)i.push(c),c+=s;for(let h=0;h<l-u;++h)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];i.push(u);for(let c=1;c<o;++c){const h=e[c];if(h===l)u>=0&&(++a,a<r?u+=s:u=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Hr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case Hr.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${Hr[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Hr.FIRST_DIM_SIZE:return e[0];case Hr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Hr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Hr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=o_(s,!1),i=dn(this.valuesDType,J(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,r[u],s[u]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=J(a),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const f=this.defaultValueShape;ee(()=>{const m=K(c,f);c=Pc(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=o.subarray(h*l),y=i.subarray(d*l),x=(p-d)*l;r_(y,g,x)}if(f>=u){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*l);r_(g,c,l),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function r_(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function o_(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function VF(n,e,t,s,r,o,i,a,l,u){return new y0(n,e,t,s,r,o,i,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return os(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=os(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF=Di(n=>1/Math.sqrt(n)),Ose=xl(od,WF),Pse={kernelName:od,backendName:"cpu",kernelFunc:Ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n,e,t,s,r,o,i,a,l,u){const c=[s/r,r],h=n.values,d=e.values;if(s===0)return Ze(t,e.dtype);const p=l instanceof Mn?l:Ze(c,e.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<i;y++){const x=h[f*i+y];m.push(x),g+=x*a[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)u?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=e.rank===0?d[0]:d[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fse=Di(n=>1/(1+Math.exp(-n))),UF=$t(cd,n=>1/(1+Math.exp(-n))),Lse={kernelName:cd,backendName:"cpu",kernelFunc:UF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n,e,t,s,r){const o=Jk(s,e,t),i=J(t),a=Le(s);if(o){const h=eI(e,a);return r==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const l=r==="string"?Go(n):n,u=Ze(s,r,l),c=Ze(t,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+e[m]);c.set(u.get(...p),...d)}return r==="string"?eF(c.values):c.values}function vu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;Oe(r,"slice");const[a,l]=zm(r,o,i);G1(r,a,l);const u=t.data.get(r.dataId).values,c=GF(u,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,c)}const Mse={kernelName:km,backendName:"cpu",kernelFunc:vu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n,e,t,s,r,o,i){const a=e[0],l=o[0],u=new Array(l),c=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(WP(a));const g=dn(t,0),y=dn(r,0);return[g,[0,h],y,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<a;++g){const y=n[g*h];if(y<0)throw new Error(UP(g,y));if(y>=l)throw new Error(GP(g,y,l));++f[y],d=d&&y>=p,p=y}let m=!0;for(let g=0;g<l;++g){const y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,y=s;for(let x=0;x<a;++x)c[x]=x;return[g,[a,h],y,u,c]}else{const g=f[l-1],y=dn(t,g*h),x=dn(r,g),w=new Array(l).fill(0);for(let b=0;b<a;++b){const S=n[b*h],C=w[S],k=(S===0?0:f[S-1])+C;w[S]++;for(let N=0;N<h;++N)y[k*h+N]=n[b*h+N];x[k]=s[b],c[b]=k}for(let b=0;b<l;++b)if(w[b]===0){const C=b===0?0:f[b-1];y[C*h+0]=b;for(let k=1;k<h;++k)y[C*h+k]=0;x[C]=i}return[y,[g,h],x,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(n,e,t,s,r){const o=J(s),i=e[0],a=r.length,l=[];let u=1,c=-1;for(let g=0;g<a;++g){const y=r[g];if(y===-1){if(c!==-1)throw new Error(HP(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(jP(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(qP());const g=Math.trunc(o/u);if(u*g!==o)throw new Error(KP(s,l));l[c]=g}if(J(l)!==o)throw new Error(XP(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=dn(t,i*a);for(let g=0;g<i;++g){let y=0;for(let x=0;x<d;++x)y+=n[g*d+x]*p[x];for(let x=0;x<a;++x)m[g*a+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n,e,t,s,r,o=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],u=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(TS());const d=e.slice();d[0]=h;const p=d.reduce((w,b)=>w*b,1),f=dn(t,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(TS());let m=0,g=1,y=0,x=r[m];for(;;){let w=0;if(g<a){if(w=r[g],x===w){++g;continue}if(x>=w)throw new Error(YP())}if(x<0||x>=h)throw new Error(QP(x,h));x>y&&f.fill(i,y*u,x*u);for(let b=m;b<g;++b){const S=s[b];if(S<0||S>=l[0])throw new Error(ZP(b,s[b],l[0]));for(let C=0;C<u;C++)f[x*u+C]+=n[S*u+C]}if(o)for(let b=0;b<u;b++)f[x*u+b]/=g-m;if(m=g,++g,y=x+1,x=w,g>a)break}return y<h&&f.fill(i,y*u,h*u),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zse=Di(n=>Math.sqrt(n)),Vse=$t(dd,n=>Math.sqrt(n)),Bse={kernelName:dd,backendName:"cpu",kernelFunc:Vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF=Cn((n,e)=>{const t=n-e;return t*t}),Wse=Gn(pd,qF),Use={kernelName:pd,backendName:"cpu",kernelFunc:Wse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KF=Di((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),Gse=xl(h1,KF),Hse={kernelName:h1,backendName:"cpu",kernelFunc:Gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n,e,t,s){const r=Ze(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];r.set(e.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jse{constructor(e,t,s,r,o,i){this.separator=ji(e),this.nGramWidths=t,this.leftPad=ji(s),this.rightPad=ji(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(o-(a+1))),h=i-(u+c),d=t+(u>0?0:a-l);let p=0;p+=u*this.leftPad.length;for(let x=0;x<h;++x)p+=e[d+x].length;p+=c*this.rightPad.length;const f=u+c+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const y=x=>x.forEach(w=>m[g++]=w);for(let x=0;x<u;++x)y(this.leftPad),y(this.separator);for(let x=0;x<h-1;++x)y(e[d+x]),y(this.separator);if(h>0){y(e[d+h-1]);for(let x=0;x<c;++x)y(this.separator),y(this.rightPad)}else{for(let x=0;x<c-1;++x)y(this.rightPad),y(this.separator);y(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<r;++u){let c=t[u]>=l;if(c=c&&t[u]<=s,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${s}]`);l=t[u]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=dn("int32",r);if(s===0||r===0){const l=new Array(s);for(let u=0;u<=o;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}const a=new Array(i[o]);for(let l=0;l<o;++l){const u=t[l];let c=i[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],p=this.getNumNGrams(d,h);this.createNGrams(e,u,a,c,p,h),c+=p}),this.preserveShort&&c===i[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,u,a,c,p,d)}}return[a,i]}}function YF(n,e,t,s,r,o,i,a){return new jse(t,s,r,o,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qse(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}function QF(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;qse(n[d],e,t,r);const f=r.length-p;a[d]=f,o+=f,i=Math.max(i,f)}const l=dn("int32",o*2),u=new Array(o),c=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=r[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(n,e){const t=dn("int32",n.length);for(let s=0;s<n.length;++s)t[s]=r8(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=Cn((n,e)=>n-e),Kse=aI((n,e,t,s)=>({real:n-t,imag:e-s})),dI=Gn(fd,JF,Kse),Xse={kernelName:fd,backendName:"cpu",kernelFunc:dI};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=Ze(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cp=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function tL(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*c/a+h)),p=Math.min(s,Math.floor(e+(a-l)*c/a+h));tL(n,e,d,p)}const r=n[e];let o=t,i=s;for(oc(n,t,e),cp(n[s],r)>0&&oc(n,t,s);o<i;){for(oc(n,o,i),o++,i--;cp(n[o],r)<0;)o=o+1;for(;cp(n[i],r)>0;)i=i-1}cp(n[t],r)===0?oc(n,t,i):(i=i+1,oc(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function nL(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],l=Bn(t,i*s),u=Bn("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((x,w)=>f[w]={value:x,index:w}),s<f.length&&(tL(f,s),f=f.slice(0,s)),r&&f.sort(cp);const m=h*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}const c=e.slice();return c[c.length-1]=s,[Ze(c,t,l),Ze(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n,e,t,s){const r=et(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const i=new Map,a=new Int32Array(t[r]),l=new Mn(o,s,n),u=[],c=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(c)m=n[f].toString();else{const y=[];for(let x=0;x<o[0];x++)for(let w=0;w<o[2];w++)y.push(l.get(x,f,w));m=y.join(",")}const g=i.get(m);if(g!=null)a[f]=g;else{const y=i.size;i.set(m,y),a[f]=y,u.push(f)}}const h=o.slice();h[1]=i.size;const d=new Mn(h,s);u.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)d.set(l.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=Object.freeze(Object.defineProperty({__proto__:null,addImpl:dF,bincountImpl:lI,bincountReduceImpl:pF,bitwiseAndImpl:fF,castImpl:hF,ceilImpl:mF,concatImpl:gF,equalImpl:yF,expImpl:wF,expm1Impl:bF,floorDivImpl:CF,floorImpl:SF,gatherNdImpl:kF,gatherV2Impl:IF,greaterEqualImpl:TF,greaterImpl:NF,lessEqualImpl:_F,lessImpl:$F,linSpaceImpl:EF,logImpl:RF,maxImpl:AF,maximumImpl:DF,minimumImpl:OF,multiplyImpl:uI,negImpl:PF,notEqualImpl:FF,prodImpl:LF,raggedGatherImpl:MF,raggedRangeImpl:zF,raggedTensorToTensorImpl:VF,rangeImpl:BF,rsqrtImpl:WF,scatterImpl:Ul,sigmoidImpl:Fse,simpleAbsImpl:cF,sliceImpl:GF,sparseFillEmptyRowsImpl:HF,sparseReshapeImpl:jF,sparseSegmentReductionImpl:hI,sqrtImpl:zse,squaredDifferenceImpl:qF,staticRegexReplaceImpl:KF,stridedSliceImpl:XF,stringNGramsImpl:YF,stringSplitImpl:QF,stringToHashBucketFastImpl:ZF,subImpl:JF,tileImpl:eL,topKImpl:nL,transposeImpl:cI,uniqueImpl:sL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Yse,castImpl:Qse,ceilImpl:Zse,concatImpl:Jse,equalImpl:ere,expImpl:tre,expm1Impl:nre,floorImpl:sre,floorDivImpl:rre,gatherNdImpl:ore,gatherV2Impl:ire,greaterEqualImpl:are,greaterImpl:lre,lessEqualImpl:ure,lessImpl:cre,logImpl:hre,maxImpl:dre,maximumImpl:pre,minimumImpl:fre,multiplyImpl:mre,negImpl:gre,notEqualImpl:yre,prodImpl:xre,rangeImpl:wre,rsqrtImpl:vre,scatterImpl:bre,simpleAbsImpl:Sre,sliceImpl:Cre,stridedSliceImpl:kre,stringNGramsImpl:Ire,subImpl:Nre,tileImpl:Tre,topKImpl:$re,transposeImpl:_re,uniqueImpl:xRe}=rL;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ere=vt({opType:ye.ABS,cpuKernelImpl:Sre}),Rre={kernelName:Rf,backendName:"webgpu",kernelFunc:Ere};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Are=vt({opType:ye.ACOS}),Dre={kernelName:kh,backendName:"webgpu",kernelFunc:Are};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ore=vt({opType:ye.ACOSH}),Pre={kernelName:Ih,backendName:"webgpu",kernelFunc:Ore};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fre=Zn({opType:je.ADD,cpuKernelImpl:Yse,supportsComplex:!0}),Lre={kernelName:Eu,backendName:"webgpu",kernelFunc:Fre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mre=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${we("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zre(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return xr({inputs:{x:s[0]},backend:t});const r=s.map(a=>a.dtype).reduce((a,l)=>Qn(a,l)),o=s.map(a=>a.shape),i=new Mre(o);return t.runWebGPUProgram(i,s,r)}const Vre={kernelName:Af,backendName:"webgpu",kernelFunc:zre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bre{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){A(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${we()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Wre=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=vn(this.outputShape.length),t=oL(this.newDim);return`
      ${we("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function oL(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${Ki(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ki(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];if(t.shouldExecuteOnCPU([r])){const h=i.tensorMap.get(r.dataId).values,d=_re(h,r.shape,r.dtype,o,l);return t.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&ot(o,[1,0])){const c=new Bre(r.shape,o);return i.runWebGPUProgram(c,[r],r.dtype)}const u=new Wre(r.shape,o);return i.runWebGPUProgram(u,[r],r.dtype)}const Ure={kernelName:Xl,backendName:"webgpu",kernelFunc:ki};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gre=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=Sn(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${we("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hre={mean:"float32",all:"bool",any:"bool"};function Bu(n,e,t,s,r){const o=n.shape.length,i=[],a=et(e,n.shape);let l=a;const u=At(l,o);let c=n;u!=null&&(c=ki({inputs:{x:n},attrs:{perm:u},backend:r}),l=Vt(l.length,o),i.push(c)),En(s,l,o);const[h,d]=Sn(c.shape,l);let p=h;t&&(p=gn(h,a));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){const m=r.tensorMap.get(c.dataId).values;switch(s){case"max":const g=dre(m,J(d),p,n.dtype);f=r.makeTensorInfo(p,n.dtype,g);break;case"prod":const{outVals:y,outShape:x,outDtype:w}=xre(c.shape,c.dtype,m,l);f=r.makeTensorInfo(x,w,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const m=J(d),y=J(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},w=Hre[s]||x1(n.dtype),b=[{type:"int32",data:[m]}],S=new Gre(x,s,r.device.limits.maxComputeWorkgroupSizeX),C=r.runWebGPUProgram(S,[c],w,b);i.push(C),f=Ae({inputs:{x:C},attrs:{shape:p},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Bu(r,i,o,"all",t)}const qre={kernelName:vx,backendName:"webgpu",kernelFunc:jre};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Bu(r,i,o,"any",t)}const Xre={kernelName:bx,backendName:"webgpu",kernelFunc:Kre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iL=class{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[o,i]=Sn(e,r);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=$e(this.outputShape),J(i)<32?(this.type="plain",this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ve(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Ki(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)r+=`outputCoords.${Ki(o)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${we("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${we("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=ki({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),En("argMax",[i[0]],l.shape.length);const c=new iL(l.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>t.disposeData(p.dataId)),d}const Qre={kernelName:Df,backendName:"webgpu",kernelFunc:Yre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=ki({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),En("argMin",[i[0]],l.shape.length);const c=new iL(l.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>t.disposeData(p.dataId)),d}const Jre={kernelName:Of,backendName:"webgpu",kernelFunc:Zre};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eoe=vt({opType:ye.ASIN}),toe={kernelName:Nh,backendName:"webgpu",kernelFunc:eoe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const noe=vt({opType:ye.ASINH}),soe={kernelName:Th,backendName:"webgpu",kernelFunc:noe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roe=vt({opType:ye.ATAN}),ooe={kernelName:$h,backendName:"webgpu",kernelFunc:roe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ioe=Zn({opType:je.ATAN2}),aoe={kernelName:Eh,backendName:"webgpu",kernelFunc:ioe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const loe=vt({opType:ye.ATANH}),uoe={kernelName:_h,backendName:"webgpu",kernelFunc:loe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class coe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sf=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool2D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},pI=class{constructor(e,t,s=!1,r=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=o,this.shaderKey=`pool3D_${t}_${s}_${r}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s;return Bu(r,o,i,"max",t)}const hoe={kernelName:om,backendName:"webgpu",kernelFunc:aL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:o,axis:i}=s;return Bu(r,i,o,"mean",t)}const doe={kernelName:lm,backendName:"webgpu",kernelFunc:lL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&ot(e.inShape,e.outShape))return xr({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=n.shape.length,a=Ae({inputs:{x:n},backend:s,attrs:{shape:[n.shape[i-3]*n.shape[i-2],n.shape[i-1]]}});let l;t==="avg"?l=lL({inputs:{x:a},backend:s,attrs:{axis:0,keepDims:!1}}):(A(t==="max",()=>`Invalid pool type ${t}`),l=aL({inputs:{x:a},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const u=Ae({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(a.dataId),s.disposeData(l.dataId),u}let r;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new coe(e):(t==="avg"?r=new sf(e,"avg"):(A(t==="max",()=>`Invalid pool type ${t}`),r=new sf(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,o)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1,c=ys(r.shape,o,i,u,a,l);return uL(r,c,"avg",t)}const foe={kernelName:Pf,backendName:"webgpu",kernelFunc:poe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,u,l),d=new pI(h,"avg"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,p)}const goe={kernelName:Ff,backendName:"webgpu",kernelFunc:moe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yoe=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},xoe=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function woe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=Vr(i.shape,a,l,1,u,c),d=new xoe(h),p=1/(h.filterDepth*h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return t.runWebGPUProgram(d,[r],i.dtype,f)}const voe={kernelName:Cx,backendName:"webgpu",kernelFunc:woe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function boe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;lF([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ys(i.shape,a,l,1,u),h=new yoe(c),d=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[r],i.dtype,p)}const Soe={kernelName:Sx,backendName:"webgpu",kernelFunc:boe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Coe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return pw({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const koe={kernelName:Lf,backendName:"webgpu",kernelFunc:Coe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ioe=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${vn(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=vn(this.rank),t=Noe(this.rank);let s;return this.start.length===1?s=this.outputShape.map((o,i)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((o,i)=>`sourceLoc.${zS[i]} = uniforms.start.${Ki(i)} + coords.${zS[i]};`),`
      ${we("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}};const zS=["x","y","z","w","u","v"];function Noe(n){if(n===1)return"sourceLoc";if(n<=6)return zS.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nd(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=zm(r,o,i);if(G1(r,a,l),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.tensorMap.get(r.dataId),d=Cre(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}if(J(l)===0)return t.makeTensorInfo(l,r.dtype,[]);const u=new Ioe(a,l),c=[{type:"int32",data:a}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const Toe={kernelName:km,backendName:"webgpu",kernelFunc:Nd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;A(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((x,w)=>x*w),l=Fu(r.shape,o,a),u=Lu(l.length,o.length),c=Mu(r.shape,o,a),h=Y1(i,o.length),d=Q1(c,i,o.length),p=[],f=Ae({inputs:{x:r},backend:t,attrs:{shape:l}}),m=ki({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Ae({inputs:{x:m},backend:t,attrs:{shape:c}}),y=Nd({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>t.disposeData(x.dataId)),y},_oe={kernelName:Mf,backendName:"webgpu",kernelFunc:$oe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eoe=`
  fn bincount_write(index: i32, value: f32) {
    ${yl("&result[index]","value","float32")}
  }
`,Roe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class cL{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?Roe:Eoe}
  ${we("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=J(r.shape),u=J(o.shape)>0,c=[i],h=o.dtype,d=Hs({backend:t,attrs:{shape:c,value:0,dtype:h}}),p=new cL([a],u),f=[{type:"int32",data:[i]}],m=u?[r,o]:[r];return t.runWebGPUProgram(p,m,h,f,d)}const Doe={kernelName:kx,backendName:"webgpu",kernelFunc:Aoe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ooe{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${we("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Poe(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const c=t.tensorMap.get(s.dataId),h=t.tensorMap.get(r.dataId),d=c.values,p=h.values,f=Ue(Array.from(d),Array.from(p));return t.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const o=J(s.shape),i=J(r.shape),a=Math.max(o,i),l=new Ooe(a),u=[{type:"int32",data:[o]},{type:"int32",data:[i]}];return t.runWebGPUProgram(l,[s,r],"int32",u)}const Foe={kernelName:Nx,backendName:"webgpu",kernelFunc:Poe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=Zn({opType:je.NOT_EQUAL,dtype:"bool",cpuKernelImpl:yre}),Loe={kernelName:dm,backendName:"webgpu",kernelFunc:hL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wm(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return xr({inputs:{x:r.complexTensorInfos.real},backend:t})}const Moe={kernelName:t1,backendName:"webgpu",kernelFunc:Wm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zoe(n,e){const t=new Id(n.shape,ye.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return xr({inputs:{x:r},backend:t});const i=wn(r.shape),a=VS({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Vu({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeData(a.dataId),l}if(r.dtype==="complex64"){const i=Wm({inputs:{input:r},backend:t}),a=VS({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeData(i.dataId),a}if(!U2(r.dtype,o)){const i=xr({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.tensorMap.get(r.dataId).values,[a,l,u]=Qse(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return zoe(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",Bn("bool",1)),l=hL({inputs:{a:r,b:i},backend:t});return t.disposeData(i.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const Voe={kernelName:Rh,backendName:"webgpu",kernelFunc:VS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Boe=vt({opType:ye.CEIL,cpuKernelImpl:Zse}),Woe={kernelName:Ah,backendName:"webgpu",kernelFunc:Boe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uoe{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${we("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Goe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${we("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;const l=[{type:"float32",data:[o]},{type:"float32",data:[i]}];return J(r.shape)%4===0?a=new Uoe(r.shape):a=new Goe(r.shape),t.runWebGPUProgram(a,[r],r.dtype,l)}const joe={kernelName:Dh,backendName:"webgpu",kernelFunc:Hoe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qoe=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Koe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),o=new qoe(s.shape),i=[i_(s,r.complexTensorInfos.real),i_(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(o,i,i[0].dtype)}const Xoe={kernelName:zf,backendName:"webgpu",kernelFunc:Koe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yoe=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Gs(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${we("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return xr({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Qoe={kernelName:Hx,backendName:"webgpu",kernelFunc:mw};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(w=>Wm({inputs:{input:w},backend:t})),m=n.map(w=>mw({inputs:{input:w},backend:t})),g=hp(f,e,t),y=hp(m,e,t),x=Vu({inputs:{real:g,imag:y},backend:t});return f.forEach(w=>t.disposeData(w.dataId)),m.forEach(w=>t.disposeData(w.dataId)),t.disposeData(g.dataId),t.disposeData(y.dataId),x}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(S=>{const k=[-1,J(S.shape.slice(e))];return Ae({inputs:{x:S},backend:t,attrs:{shape:k}})}),m=f.map(S=>({vals:t.readSync(S.dataId),shape:S.shape})),g=Gs(f.map(S=>S.shape),1),y=f[0].shape[0]===1,x=Jse(m,g,s,y),w=Gs(n.map(S=>S.shape),e),b=t.makeTensorInfo(w,s,x);return f.forEach(S=>t.disposeData(S.dataId)),b}const o=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>o){const f=[];for(let g=0;g<n.length;g+=o){const y=n.slice(g,g+o);f.push(hp(y,e,t))}const m=hp(f,e,t);for(const g of f)t.disposeData(g.dataId);return m}const{tensors2D:i,outShape:a}=Zoe(n,e,t),l=i.map(f=>f.shape),u=new Yoe(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+l[f][1],c.push({type:"int32",data:[h[f]]})}const d=t.runWebGPUProgram(u,i,i[0].dtype,c);i.forEach(f=>t.disposeData(f.dataId));const p=Ae({inputs:{x:d},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),p}function Zoe(n,e,t){const s=Gs(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Ae({inputs:{x:o},backend:t,attrs:{shape:[J(o.shape.slice(0,e)),J(o.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=et(r,e[0].shape)[0],i=e.map(u=>u.shape);q1(i,o);const a=Gs(e.map(u=>u.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>J(u.shape)>0);return l.length===1?xr({inputs:{x:l[0]},backend:t}):hp(l,o,t)}const Joe={kernelName:Vf,backendName:"webgpu",kernelFunc:dL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eie(n,e,t,s,r=!1,o=null,i=!1,a=4,l=4,u=4){const c=_=>{switch(_){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${_} is not supported.`)}},h=_=>{switch(_){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${_} is not supported.`)}},d=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=n?"uniforms.xShape[1]":"uniforms.xShape[2]",m=n?"uniforms.xShape[2]":"uniforms.xShape[3]",g=n?"row":"col",y=n?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${it(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,w=n?e&&s?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${it(a)}(0.0);`:s&&t?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${it(a)}(0.0);`,b=`${h(l)}`,S=it(u),C=it(n?a:l),k=it(n?l:a);return`
      ${ca(o,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${C} {
        ${n?w:b}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${k} {
        ${n?b:w}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${S}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${zu(r,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class tie{constructor(e,t,s,r,o=!1,i=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=oF(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=iF(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?hw(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):dw(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${eie(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nie{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${ca(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${zu(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${we("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sie{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${we("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function rie({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=t.dataFormat==="channelsLast",u=!l,c=!1,h=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=[];let p,f;if(h){const y=t.inHeight*t.inWidth*t.inChannels;p=Ae({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,y]}}),f=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,y,t.outChannels]}})}else p=Ae({inputs:{x:n},backend:s,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),f=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(d.push(p),d.push(f),o!=null){const y=x0(o.shape,l);y!=null&&(o=Ae({inputs:{x:o},backend:s,attrs:{shape:y}}),d.push(o))}if(r!=null){const y=x0(r.shape,l);y!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:y}}),d.push(r))}const m=pw({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),g=Ae({inputs:{x:m},backend:s,attrs:{shape:t.outShape}});d.push(m);for(const y of d)s.disposeData(y.dataId);return g}function oie({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:p,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=t,w=x==="channelsLast",b=l*u*c,S=m*f,C=w?[t.batchSize,S,b]:[t.batchSize,b,S],k=new sie(C,w),N=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[d,h]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],_=s.runWebGPUProgram(k,[n],n.dtype,N),E=[];E.push(_);const D=Ae({inputs:{x:e},backend:s,attrs:{shape:[1,b,-1]}});if(E.push(D),o!=null){const W=x0(o.shape,w);W!=null&&(o=Ae({inputs:{x:o},backend:s,attrs:{shape:W}}),E.push(o))}if(r!=null){const W=x0(r.shape,w);W!=null&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:W}}),E.push(r))}const L=pw({a:w?_:D,b:w?D:_,transposeA:!w,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),B=Ae({inputs:{x:L},backend:s,attrs:{shape:t.outShape}});E.push(L);for(const W of E)s.disposeData(W.dataId);return B}function pL({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=r!=null,u=o!=null,c=t.dataFormat==="channelsLast",h=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=ne().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return rie({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});const p=ne().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:s.thresholdToIncreaseWorkgroups,m=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(ne().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return oie({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:o,leakyreluAlpha:i,activation:a});let g;const y=[t.padInfo.top,t.padInfo.left],x=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)g=new nie(t,l,a,u);else{const C=c?t.outHeight*t.outWidth:t.outChannels,k=c?t.outChannels:t.outHeight*t.outWidth,N=t.filterHeight*t.filterWidth*t.inChannels;x.push({type:"int32",data:[C]},{type:"int32",data:[k]},{type:"int32",data:[N]});const _=s.adapterInfo.isIntel();g=new tie(t,C,k,N,l,a,u,_)}const w=[],b=[n,e];l&&(!c&&r.shape.length===1&&(r=Ae({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),w.push(r)),b.push(r)),u&&(!c&&o.shape.length===1&&(o=Ae({inputs:{x:o},backend:s,attrs:{shape:[o.shape[0],1,1]}}),w.push(o)),b.push(o)),a==="leakyrelu"&&(x.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");const S=s.runWebGPUProgram(g,b,n.dtype,x);for(const C of w)s.disposeData(C.dataId);return S}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iie(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=t,h=Sr(l),d=zt(r.shape,o.shape,i,u,a,c,!1,h);return pL({x:r,filter:o,convInfo:d,backend:s})}const aie={kernelName:Bf,backendName:"webgpu",kernelFunc:iie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lie=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${we()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${we("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},uie=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${we("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},cie=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${we("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},hie=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${we("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function die(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Sr(l),d=zt(r.shape,c,i,1,a,u,!1,h),p=new uie(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(p,[r,o],r.dtype,f)}const pie={kernelName:$x,backendName:"webgpu",kernelFunc:die};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fie(n=4){const e=o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${it(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${it(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${it(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${it(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${it(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${it(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${it(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class mie{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,A(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=oF(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=iF(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?hw(this.elementsPerThread,this.workgroupSize):dw(this.elementsPerThread,this.workgroupSize);return`
    ${fie(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Sr(u),d=zt(i,o.shape,a,1,l,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(ne().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")f=new lie(d);else{f=new mie(d);const m=d.inHeight*d.inWidth,g=d.inChannels,y=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return t.runWebGPUProgram(f,[r,o],"float32",p)}const yie={kernelName:Wf,backendName:"webgpu",kernelFunc:gie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xie{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Jo(r.shape,o.shape,i,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new xie(u),p=Qn(r.dtype,o.dtype);return t.runWebGPUProgram(d,[r,o],p,h)}const vie={kernelName:Uf,backendName:"webgpu",kernelFunc:wie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Jo(r.shape,l,i,1,a),c=new cie(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(c,[r,o],o.dtype,h)}const Sie={kernelName:_x,backendName:"webgpu",kernelFunc:bie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,pad:a,inputShape:l}=s,u=Jo(l,o.shape,i,1,a),c=new hie(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(c,[r,o],r.dtype,h)}const kie={kernelName:Ex,backendName:"webgpu",kernelFunc:Cie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iie=vt({opType:ye.COS}),Nie={kernelName:Oh,backendName:"webgpu",kernelFunc:Iie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tie=vt({opType:ye.COSH}),$ie={kernelName:Ph,backendName:"webgpu",kernelFunc:Tie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _ie=class{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=t;this.outputShape=[o,s[0],s[1],e],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${a};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eie=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new _ie(r.shape[3],o.shape,a,l),h=[{type:"float32",data:[u]}];return t.runWebGPUProgram(c,[r,o,i],"float32",h)},Rie={kernelName:Ax,backendName:"webgpu",kernelFunc:Eie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rf;(function(n){n.Prod="*",n.Sum="+"})(rf||(rf={}));let a_=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===rf.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${l_(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let o="",i="";return this.exclusive?(o=this.reverse?`end != ${r-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${r}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${we("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${u_(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${i};
           ${u_(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${l_(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function l_(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function u_(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,e,t,s,r,o){const i=e.shape.length,a=At([s],i);let l=e;a!=null&&(l=ki({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Vt(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=xr({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new a_(n,l.shape,!1,o),f=h,m=[{type:"float32",data:[d]}];h=t.runWebGPUProgram(p,[h],h.dtype,m),t.disposeData(f.dataId)}if(r){const d=new a_(n,l.shape,r,o),p=h,f=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(d,[h],h.dtype,f),t.disposeData(p.dataId)}if(a!=null){const d=Ei(a),p=ki({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeData(h.dataId),t.disposeData(l.dataId),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return fL(rf.Prod,r,t,o,i,a)}const Die={kernelName:Rx,backendName:"webgpu",kernelFunc:Aie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return fL(rf.Sum,r,t,o,i,a)}const Pie={kernelName:Gf,backendName:"webgpu",kernelFunc:Oie};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s,l=r.shape.length===1,c=J(o.shape)>0,h=o.dtype,d=l?[r.shape[0]]:[r.shape[0],r.shape[1]],p=l?[i]:[r.shape[0],i],f=Hs({backend:t,attrs:{shape:p,value:0,dtype:h}}),m=new cL(d,c,a),g=[{type:"int32",data:[i]}],y=c?[r,o]:[r];return t.runWebGPUProgram(m,y,h,g,f)}const Lie={kernelName:Dx,backendName:"webgpu",kernelFunc:Fie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mie=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=[{type:"int32",data:[o]}],g=new Mie(f,i);return t.runWebGPUProgram(g,[r],r.dtype,m)}const Vie={kernelName:Ox,backendName:"webgpu",kernelFunc:zie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bie{constructor(e,t,s,r=!1,o=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=o,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${ca(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${we()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${zu(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mL{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=$e(o),this.dispatch=ve(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),A(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${ca(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${we("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${zu(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gL=class{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${ca(this.activation,this.hasPreluActivation,!1,4)}

      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${zu(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Sr(l);let d=u;d==null&&(d=[1,1]);const p=zt(r.shape,o.shape,i,d,a,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast";let g;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?g=new Bie(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(g=new mL(p),f.push({type:"int32",data:[g.virtualWidth]})):(g=new gL(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),t.runWebGPUProgram(g,[r,o],r.dtype,f)}const Uie={kernelName:Hf,backendName:"webgpu",kernelFunc:Wie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gie=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Hie=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=zt(r.shape,c,i,a,l,u,!0),d=new Gie(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,o],"float32",p)}const qie={kernelName:Px,backendName:"webgpu",kernelFunc:jie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kie(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=zt(c,o.shape,i,a,l,u,!0),d=new Hie(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,o],r.dtype,p)}const Xie={kernelName:Fx,backendName:"webgpu",kernelFunc:Kie};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yie=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qie(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=J(s.shape),i=Ae({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new Yie(o),l=t.runWebGPUProgram(a,[i],i.dtype),u=Ae({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const Zie={kernelName:Lx,backendName:"webgpu",kernelFunc:Qie};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jie=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${we("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=fl(r.shape,o.shape,i,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new Jie(u);return t.runWebGPUProgram(d,[r,o],r.dtype,h)}const tae={kernelName:jf,backendName:"webgpu",kernelFunc:eae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nae{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(e.outShape),this.dispatch=ve(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${we("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${yl("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class sae{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=$e(e.outShape),this.dispatch=ve(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${we("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${yl("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=fl(r.shape,o.shape,a,l,"NHWC",u),h=o.dtype,d=new sae(c,o.shape,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[J(c.outShape)]}],f=Hs({backend:t,attrs:{shape:o.shape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,o,i],h,p,f)}const oae={kernelName:r0,backendName:"webgpu",kernelFunc:rae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,dy:i}=e,{strides:a,pad:l,dilations:u}=s,c=fl(r.shape,o.shape,a,l,"NHWC",u),h=r.dtype,d=new nae(c,h),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[J(c.outShape)]}],f=Hs({backend:t,attrs:{shape:c.inShape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,o,i],h,p,f)}const aae={kernelName:s0,backendName:"webgpu",kernelFunc:iae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lae{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=sh.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${we("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,[a,l]=r.shape.slice(0,2),{imageOptions:u}=i||{},c=(u==null?void 0:u.alpha)||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],p=new lae(d,r.dtype,h);o.width=l,o.height=a;const f="webgpu";let m=o.getContext(f),g;m||(g=new OffscreenCanvas(l,a),m=g.getContext(f));const y=r.shape.length===3?r.shape[2]:1;m.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",w=t.makeTensorInfo(d,x),b=t.tensorMap.get(w.dataId);b.resource=m.getCurrentTexture(),b.external=!0;const S=[{type:"uint32",data:[y]},{type:"float32",data:[c]}];if(t.runWebGPUProgram(p,[r],x,S,w),g){const C=o.getContext("2d");if(!C)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");C.drawImage(g,0,0)}return t.disposeData(w.dataId),r}const cae={kernelName:j2,backendName:"webgpu",kernelFunc:uae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL=Zn({opType:je.MUL,cpuKernelImpl:mre,supportsComplex:!0}),hae={kernelName:Jh,backendName:"webgpu",kernelFunc:yL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Bu(r,o,i,"sum",t)}const dae={kernelName:Im,backendName:"webgpu",kernelFunc:xL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pae(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=rw(r,o.length);iw(i.length,l,o);const{path:u,steps:c}=aw(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=ow(p,l[g]);let w;lw(y)?w=o[g]:(w=ki({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(w));const b=w.shape.slice();for(let S=0;S<x.length;++S)b.splice(x[S],0,1);ot(w.shape,b)||(w=Ae({inputs:{x:w},backend:t,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=yL({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=xL({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeData(m.dataId);return d}const fae={kernelName:Mx,backendName:"webgpu",kernelFunc:pae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mae=vt({opType:ye.ELU}),gae={kernelName:Lh,backendName:"webgpu",kernelFunc:mae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yae=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=new m0(je.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],s.dtype)},xae={kernelName:zx,backendName:"webgpu",kernelFunc:yae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wae=Zn({opType:je.EQUAL,dtype:"bool",cpuKernelImpl:ere}),vae={kernelName:qf,backendName:"webgpu",kernelFunc:wae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bae=vt({opType:ye.ERF}),Sae={kernelName:Mh,backendName:"webgpu",kernelFunc:bae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cae=vt({opType:ye.EXP,cpuKernelImpl:tre,dtype:"float32"}),kae={kernelName:zh,backendName:"webgpu",kernelFunc:Cae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(A(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Ae({inputs:{x:o},backend:s,attrs:{shape:a}})}const Iae={kernelName:Kf,backendName:"webgpu",kernelFunc:BS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nae=vt({opType:ye.EXPM1,cpuKernelImpl:nre}),Tae={kernelName:Vh,backendName:"webgpu",kernelFunc:Nae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let c_=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n,e,t){const s=t.tensorMap.get(n.dataId),r=J(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=[],l=Ae({inputs:{x:n},backend:t,attrs:{shape:[i,o]}});a.push(l);const u=l.shape,c=new c_("real",u),h=new c_("imag",u),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=e?2*Math.PI:-2*Math.PI,f=e?u[1]:1,m=[{type:"float32",data:[p]},{type:"float32",data:[f]}],g=t.runWebGPUProgram(c,d,"float32",m);a.push(g);const y=t.runWebGPUProgram(h,d,"float32",m);a.push(y);const x=Vu({inputs:{real:g,imag:y},backend:t});a.push(x);const w=Ae({inputs:{x},backend:t,attrs:{shape:n.shape}});return a.forEach(b=>t.disposeData(b.dataId)),w}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ae(n){const{inputs:e,backend:t}=n,{input:s}=e;return wL(s,!1,t)}const _ae={kernelName:Vx,backendName:"webgpu",kernelFunc:$ae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Eae=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae={kernelName:Wx,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new Eae(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aae=vt({opType:ye.FLOOR,cpuKernelImpl:sre}),Dae={kernelName:Bh,backendName:"webgpu",kernelFunc:Aae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oae=Zn({opType:je.FLOOR_DIV,cpuKernelImpl:rre,dtype:"int32"}),Pae={kernelName:Wh,backendName:"webgpu",kernelFunc:Oae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fae=class{constructor(e,t,s=!1){this.pixelsOpType=sh.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${we("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lae={kernelName:o0,backendName:"webgpu",kernelFunc:Mae};let Ju,Av=ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Mae(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[c,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c,o],p=ne().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||a;if(u||l||f){let x;if(p)x=t.device.importExternalTexture({source:r});else{if(f){const F=ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ju==null||F!==Av)&&(Av=F,Ju=document.createElement("canvas").getContext("2d",{willReadFrequently:Av})),Ju.canvas.width=c,Ju.canvas.height=h,Ju.drawImage(r,0,0,c,h),r=Ju.canvas}const E=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,D="rgba8unorm",P=t.textureManager.acquireTexture(d[1],d[0],D,E);t.queue.copyExternalImageToTexture({source:r},{texture:P},[d[1],d[0]]),x=P}const w=J(d),b=Le(d),S=new Fae(d,o,p),C=[{type:"uint32",data:[w]},{type:"uint32",data:[o]},{type:"uint32",data:[...b]}],k=t.makeTensorInfo([h,c],"int32"),N=t.tensorMap.get(k.dataId);N.resource=x;const _=t.runWebGPUProgram(S,[k],"int32",C);return t.disposeData(k.dataId),_}const m=r.data;let g=m;if(o!=null&&o!==4){g=new Uint8Array(r.width*r.height*o);const x=m.length;let w=0;for(let b=0;b<x;b++)b%4<o&&(g[w++]=m[b])}const y=t.makeTensorInfo(d,"int32",new Int32Array(g));return t.uploadToGPU(y.dataId),y}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zae=class{constructor(e,t,s,r,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Ue(e,t),Ue(e,s),this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(Ue(e,r),this.variableNames.push("offset")),o!=null&&(Ue(e,o),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${we("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vae={kernelName:Xf,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:o,mean:i,variance:a}=n,{varianceEpsilon:l}=e,u=t,c=[s,i,a];let h=null;o!=null&&(h=o.shape,c.push(o));let d=null;r!=null&&(d=r.shape,c.push(r));const p=new zae(s.shape,i.shape,a.shape,h,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Sr(c),g=zt(r.shape,o.shape,l,h,u,d,!1,m);return pL({x:r,filter:o,convInfo:g,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:p})}const Wae={kernelName:Kp,backendName:"webgpu",kernelFunc:Bae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s;let f=c;f==null&&(f=[1,1]),A(Un(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=zt(r.shape,o.shape,l,f,u,h,!0),g=[r,o],y=i!=null,x=a!=null;y&&g.push(i),x&&g.push(a);const w=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let b;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(b=new mL(m,y,d,x),w.push({type:"int32",data:[b.virtualWidth]})):(b=new gL(m,y,d,x),w.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(w.push({type:"float32",data:[p]}),b.uniforms+=" alpha : f32,"),t.runWebGPUProgram(b,g,"float32",w)}const Gae={kernelName:Xp,backendName:"webgpu",kernelFunc:Uae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hae=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${vn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=J(s.shape),[l,u,c,h]=U1(s,r),d=Ae({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Ae({inputs:{x:s},backend:t,attrs:{shape:[J(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=t.readSync(r.dataId),w=t.bufferSync(s),b=ore(x,w,s.dtype,u,i,c,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,b.values)}const f=new Hae(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=t.runWebGPUProgram(f,[p,d],p.dtype,m),y=Ae({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeData(d.dataId),t.disposeData(p.dataId),t.disposeData(g.dataId),y}const qae={kernelName:Ux,backendName:"webgpu",kernelFunc:jae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kae=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=Xae(this.aShape);return`
      ${we("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Xae(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=et(i,r.shape)[0],u=cw(r,o,l,a),c=J(o.shape),h=[],d=Ae({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Ae({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])){const w=t.tensorMap.get(p.dataId).values,b=Ze(p.shape,p.dtype,w),C=t.tensorMap.get(d.dataId).values,k=Ze(d.shape,d.dtype,C),N=ire(k,b,f);return h.forEach(_=>t.disposeData(_.dataId)),t.makeTensorInfo(u.outputShape,N.dtype,N.values)}const m=new Kae(d.shape,f),g=t.runWebGPUProgram(m,[d,p],d.dtype);h.push(g);const y=Ae({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return h.forEach(x=>t.disposeData(x.dataId)),y}const Yae={kernelName:Yf,backendName:"webgpu",kernelFunc:vL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qae=Zn({opType:je.GREATER,cpuKernelImpl:lre,dtype:"bool"}),Zae={kernelName:Qf,backendName:"webgpu",kernelFunc:Qae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jae=Zn({opType:je.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:are}),ele={kernelName:Uh,backendName:"webgpu",kernelFunc:Jae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tle(n){const{inputs:e,backend:t}=n,{input:s}=e;return wL(s,!0,t)}const nle={kernelName:Gx,backendName:"webgpu",kernelFunc:tle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sle=vt({opType:ye.IS_FINITE,dtype:"bool"}),rle={kernelName:Hh,backendName:"webgpu",kernelFunc:sle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ole=vt({opType:ye.IS_INF,dtype:"bool"}),ile={kernelName:jh,backendName:"webgpu",kernelFunc:ole};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ale=vt({opType:ye.IS_NAN,dtype:"bool"}),lle={kernelName:qh,backendName:"webgpu",kernelFunc:ale};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ule(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=[{type:"float32",data:[o]}],a=new Id(r.shape,ye.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[r],"float32",i)}const cle={kernelName:Zf,backendName:"webgpu",kernelFunc:ule};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hle=Zn({opType:je.LESS,dtype:"bool",cpuKernelImpl:cre}),dle={kernelName:Jf,backendName:"webgpu",kernelFunc:hle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ple=Zn({opType:je.LESS_EQUAL,dtype:"bool",cpuKernelImpl:ure}),fle={kernelName:em,backendName:"webgpu",kernelFunc:ple};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mle{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gle(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=(r-s)/(o-1),a=new mle(o),l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return e.runWebGPUProgram(a,[],"float32",l)}const yle={kernelName:jx,backendName:"webgpu",kernelFunc:gle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xle=vt({opType:ye.LOG,cpuKernelImpl:hre}),wle={kernelName:Kh,backendName:"webgpu",kernelFunc:xle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vle=vt({opType:ye.LOG1P}),ble={kernelName:Xh,backendName:"webgpu",kernelFunc:vle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sle=Zn({opType:je.LOGICAL_AND,dtype:"bool"}),Cle={kernelName:tm,backendName:"webgpu",kernelFunc:Sle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kle=vt({opType:ye.LOGICAL_NOT}),Ile={kernelName:nm,backendName:"webgpu",kernelFunc:kle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nle=Zn({opType:je.LOGICAL_OR}),Tle={kernelName:sm,backendName:"webgpu",kernelFunc:Nle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;let $le=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${bL}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}};class _le{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,A(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ve(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${we()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${bL}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ele(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;let u;o>16?u=new $le(r.shape):u=new _le(r.shape,o);const c=[{type:"int32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return t.runWebGPUProgram(u,[r],r.dtype,c)}const Rle={kernelName:rm,backendName:"webgpu",kernelFunc:Ele};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ale=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new Ale(r.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return t.runWebGPUProgram(h,[r,o,i],r.dtype,d)}const Ole={kernelName:qx,backendName:"webgpu",kernelFunc:Dle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ple=Zn({opType:je.MAX,cpuKernelImpl:pre}),Fle={kernelName:Yh,backendName:"webgpu",kernelFunc:Ple};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1,c=ys(r.shape,o,i,u,a,l);return uL(r,c,"max",t)}const Mle={kernelName:im,backendName:"webgpu",kernelFunc:Lle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,u,l),d=new pI(h,"max"),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,p)}const Vle={kernelName:am,backendName:"webgpu",kernelFunc:zle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ble=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Wle=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${we("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ule(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Vr(i.shape,a,l,h,u,c),p=new pI(d,"max",!0);let f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[i],"int32",f),g=new Wle(d);f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],i.dtype,f);return t.disposeData(m.dataId),y}const Gle={kernelName:Xx,backendName:"webgpu",kernelFunc:Ule};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hle(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;lF([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ys(a.shape,l,u,1,c,h),p=new sf(d,"max",!0);let f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=t.runWebGPUProgram(p,[a],"int32",f),g=new Ble(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=t.runWebGPUProgram(g,[r,m],a.dtype,f);return t.disposeData(m.dataId),y}const jle={kernelName:Kx,backendName:"webgpu",kernelFunc:Hle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qle(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=s,{x:l}=e;A(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];A(Un(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ys(l.shape,r,o,u,i),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new sf(c,"max",!1);const p=t.runWebGPUProgram(d,[l],l.dtype,h);d=new sf(c,"max",!0,!0,a);const f=t.runWebGPUProgram(d,[l],"int32",h);return[p,f]}const Kle={kernelName:Yx,backendName:"webgpu",kernelFunc:qle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Bu(r,o,i,"min",t)}const Yle={kernelName:um,backendName:"webgpu",kernelFunc:Xle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qle=Zn({opType:je.MIN,cpuKernelImpl:fre}),Zle={kernelName:Qh,backendName:"webgpu",kernelFunc:Qle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jle=class{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,o)=>r[0]+e[o]+r[1]),this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),s=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),r=e===1?"start":"start[i]",o=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=vn(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${we("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${r}) {
              ${i} = ${r} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${o}) {
              ${i} = (${o} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eue={kernelName:cm,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:o}=e,i=t,a=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new Jle(s.shape,r,o);return i.runWebGPUProgram(l,[s],s.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tue=Zn({opType:je.MOD}),nue={kernelName:Zh,backendName:"webgpu",kernelFunc:tue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sue=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${we("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rue{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${we("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Ae({inputs:{x:r},backend:t,attrs:{shape:[J(r.shape)/r.shape[o],r.shape[o]]}}),a=new rue(i.shape),l=t.runWebGPUProgram(a,[i],r.dtype),u=Ae({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeData(i.dataId),t.disposeData(l.dataId),u}const oue={kernelName:$m,backendName:"webgpu",kernelFunc:SL};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iue(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:SL({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new sue(u,o),d=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=t.runWebGPUProgram(h,[l],"int32",d);return a||t.disposeData(l.dataId),p}const aue={kernelName:Qx,backendName:"webgpu",kernelFunc:iue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.tensorMap.get(s.dataId),[i,a]=gre(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}const r=new Id(s.shape,ye.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const uue={kernelName:hm,backendName:"webgpu",kernelFunc:lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cue(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:h}=B1(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const hue={kernelName:Zx,backendName:"webgpu",kernelFunc:cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function due(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=W1(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const pue={kernelName:Jx,backendName:"webgpu",kernelFunc:due};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fue=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${we("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=J(r.shape),c=new fue(u,i),h=Ae({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],p=t.runWebGPUProgram(c,[h],o,d);t.disposeData(h.dataId);const f=[...r.shape,i],m=Ae({inputs:{x:p},backend:t,attrs:{shape:f}});return t.disposeData(p.dataId),m}const gue={kernelName:fm,backendName:"webgpu",kernelFunc:mue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Wm({inputs:{input:s},backend:t}),o=w0({inputs:{x:r},backend:t}),i=mw({inputs:{input:s},backend:t}),a=w0({inputs:{x:i},backend:t}),l=Vu({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return Hs({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const yue={kernelName:Rm,backendName:"webgpu",kernelFunc:w0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Wm({inputs:{input:s},backend:t}),o=CL({inputs:{x:r},backend:t}),i=mw({inputs:{input:s},backend:t}),a=w0({inputs:{x:i},backend:t}),l=Vu({inputs:{real:o,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(i.dataId),t.disposeData(a.dataId),l}else return Hs({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const xue={kernelName:pm,backendName:"webgpu",kernelFunc:CL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wue(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return BS({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Zs(o,c.shape,"All tensors passed to stack must have matching shapes"),A(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=BS({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=dL({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeData(c.dataId)),u}const vue={kernelName:mm,backendName:"webgpu",kernelFunc:wue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n,e=!1){const t=n.length,s=vn(t),r=n.map((h,d)=>`uniforms.pad${d}[0]`).join(","),o=n.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${t>1?`[${d}]`:""}`).join(","),i=t>1?`${s}(${r})`:`${r}`,a=t>1?`${s}(${o})`:`${o}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",u=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${i};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}let bue=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${kL(this.xShape)}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sue=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(o.every(u=>ot(u,[0,0])))return xr({inputs:{x:r},backend:t});if(J(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return Hs({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=[{type:"float32",data:[i]}];o.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));const l=new bue(r.shape,o);return t.runWebGPUProgram(l,[r],r.dtype,a)},Cue={kernelName:gm,backendName:"webgpu",kernelFunc:Sue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kue=Zn({opType:je.POW}),Iue={kernelName:ed,backendName:"webgpu",kernelFunc:kue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nue(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=new m0(je.PRELU,s.shape,r.shape);return t.runWebGPUProgram(o,[s,r],"float32")}const Tue={kernelName:ym,backendName:"webgpu",kernelFunc:Nue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return Bu(r,o,i,"prod",t)}const _ue={kernelName:xm,backendName:"webgpu",kernelFunc:$ue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eue=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=wre(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},Rue={kernelName:e1,backendName:"webgpu",kernelFunc:Eue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aue=Zn({opType:je.DIV}),Due={kernelName:Fh,backendName:"webgpu",kernelFunc:Aue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oue=vt({opType:ye.RECIPROCAL}),Pue={kernelName:td,backendName:"webgpu",kernelFunc:Oue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fue=vt({opType:ye.RELU}),Lue={kernelName:nd,backendName:"webgpu",kernelFunc:Fue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mue=vt({opType:ye.RELU6}),zue={kernelName:sd,backendName:"webgpu",kernelFunc:Mue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vue=class{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bue(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,size:i,halfPixelCenters:a}=s,[l,u]=i,c=o&&l>1?1:0,h=o&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[a?.5:0]}],f=new Vue(r.shape,l,u);return t.runWebGPUProgram(f,[r],"float32",p)}const Wue={kernelName:bm,backendName:"webgpu",kernelFunc:Bue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uue=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gue(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,h=[i&&u>1?a-1:a,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,w=new Uue(r.shape,i),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return t.runWebGPUProgram(w,[o],o.dtype,b)}const Hue={kernelName:s1,backendName:"webgpu",kernelFunc:Gue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jue=class{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function que(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=o&&l>1?1:0,h=o&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],f=new jue(r.shape,l,u,i);return t.runWebGPUProgram(f,[r],r.dtype,p)}const Kue={kernelName:vm,backendName:"webgpu",kernelFunc:que};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xue=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yue(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,[,a,l]=r.shape,[,u,c]=o.shape,h=[i&&u>1?a-1:a,i&&c>1?l-1:l],d=[i&&u>1?u-1:u,i&&c>1?c-1:c],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,w=new Xue(r.shape,i),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return t.runWebGPUProgram(w,[o],o.dtype,b)}const Que={kernelName:n1,backendName:"webgpu",kernelFunc:Yue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zue=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length;if(i===0)return xr({inputs:{x:r},backend:t});const a=r.shape,l=[1,1,1,1];a.forEach((g,y)=>{const x=y+4-i;l[x]=g});const u=et(o,r.shape),c=[0,0,0,0];u.forEach(g=>{const y=g+4-i;c[y]=1});const h=[{type:"int32",data:c}],d=Ae({inputs:{x:r},backend:t,attrs:{shape:l}}),p=new Zue(l),f=t.runWebGPUProgram(p,[d],d.dtype,h);t.disposeData(d.dataId);const m=Ae({inputs:{x:f},backend:t,attrs:{shape:a}});return t.disposeData(f.dataId),m}const ece={kernelName:Sm,backendName:"webgpu",kernelFunc:Jue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tce=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${we("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nce={kernelName:g1,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new tce(s.shape,o),[u,c]=X1(i,s.shape[1],s.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof o=="number"?h.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):h.push({type:"float32",data:o}),a.runWebGPUProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sce=vt({opType:ye.ROUND}),rce={kernelName:rd,backendName:"webgpu",kernelFunc:sce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oce=vt({opType:ye.RSQRT,cpuKernelImpl:vre}),ice={kernelName:od,backendName:"webgpu",kernelFunc:oce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ip=class{constructor(e,t,s,r,o,i,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=$e(e),this.dispatch=ve(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${a}_${l}_${o.length}`;const u=vn(o.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",o="";this.dispatchLayout.x.length===1?(r="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${o}
      ${we("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${Dl(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?yl("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ace(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ai(o,r,i),d=[h/u,u];if(h===0)return t.makeTensorInfo(i,r.dtype);const p=Ae({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Ae({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=f.dtype,g=Hs({backend:t,attrs:{shape:d,value:0,dtype:m}}),y=J(f.shape),x=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[y]}],w=new Ip(f.shape,a,p.shape.length,f.shape.length,c,d,m),b=t.runWebGPUProgram(w,[f,p],m,x,g),S=Ae({inputs:{x:b},backend:t,attrs:{shape:i}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(b.dataId),S}const lce={kernelName:r1,backendName:"webgpu",kernelFunc:ace};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uce=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${we("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cce(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new uce([o.shape[0],o.shape[1]],i),l=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(a,[r,o],"int32",l)}const hce={kernelName:i1,backendName:"webgpu",kernelFunc:cce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dce=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${r[a]}`),a<this.cRank&&o.push(`${r[a]}`);e=o.join(),t=i.join()}return`
      ${we("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pce(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new dce(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(i,[s,r,o],Qn(r.dtype,o.dtype))}const fce={kernelName:Cm,backendName:"webgpu",kernelFunc:pce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mce=vt({opType:ye.SELU}),gce={kernelName:id,backendName:"webgpu",kernelFunc:mce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yce=vt({opType:ye.SIGMOID}),xce={kernelName:cd,backendName:"webgpu",kernelFunc:yce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wce=vt({opType:ye.SIGN}),vce={kernelName:ud,backendName:"webgpu",kernelFunc:wce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bce=vt({opType:ye.SIN}),Sce={kernelName:ad,backendName:"webgpu",kernelFunc:bce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cce=vt({opType:ye.SINH}),kce={kernelName:ld,backendName:"webgpu",kernelFunc:Cce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ice=vt({opType:ye.SOFTPLUS}),Nce={kernelName:hd,backendName:"webgpu",kernelFunc:Ice};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tce{constructor(e,t,s,r,o,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[o[l]];this.outputShape=a,this.newDim=o,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${vn(r.length)}, paddedXShapeStrides : ${vn(i)}, `,s.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=vn(this.outputShape.length),t=oL(this.newDim);return`
      ${gy(this.paddedXShape,"PaddedX")}
      ${we("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${kL(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ce=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;A(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((x,w)=>x*w),l=[[0,0]];l.push(...i);for(let x=1+o.length;x<r.shape.length;++x)l.push([0,0]);const u=l.map((x,w)=>x[0]+r.shape[w]+x[1]),c=Fu(u,o,a,!1),h=Lu(c.length,o.length,!1),d=Mu(u,o,a,!1),p=Le(u),f=new Tce(r.shape,u,l,c,h,p.length),m=[{type:"int32",data:c},{type:"int32",data:p}];l.map(x=>m.push({type:"int32",data:[x[0],x[1]]}));const g=t.runWebGPUProgram(f,[r],r.dtype,m),y=Ae({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeData(g.dataId),y},_ce={kernelName:Nm,backendName:"webgpu",kernelFunc:$ce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ece{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=$e([t]),this.dispatch=ve(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${yl("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Rce{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=$e(t),this.dispatch=ve(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${yl("&result[segmentId]","1","int32")}
      }
    }
  `}}class Ace{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=$e(e),this.dispatch=ve(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n,e,t,s=!1,r){const i=J(n.shape)/n.shape[0],a=n.dtype,l=J(e.shape),u=r.readSync(t.dataId),h=l>0?u[l-1]+1:0;let d;const p=n.shape.slice();p[0]=h;const f=l*i,m=Hs({backend:r,attrs:{shape:p,value:0,dtype:a}});d=new Ece(p,f,a);let g=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const y=r.runWebGPUProgram(d,[n,e,t],a,g,m);if(s)return y;const x=Hs({backend:r,attrs:{shape:[h],value:0,dtype:"int32"}});d=new Rce(h,t.shape);const w=r.runWebGPUProgram(d,[t],"int32",null,x),b=Hs({backend:r,attrs:{shape:p,value:0,dtype:a}});d=new Ace(p,a),g=[{type:"int32",data:[i]}];const S=r.runWebGPUProgram(d,[y,w],a,g,b);return r.disposeData(y.dataId),r.disposeData(w.dataId),S}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dce(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return IL(s,r,o,!1,t)}const Oce={kernelName:a1,backendName:"webgpu",kernelFunc:Dce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pce(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;return IL(s,r,o,!0,t)}const Fce={kernelName:l1,backendName:"webgpu",kernelFunc:Pce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lce=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=Mce(this.rank,"uniforms.");return`
      ${we("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Mce(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>Vo(d)):l,c=Ze(r.shape,r.dtype,u),h=Tre(c,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new Lce(r.shape,o);return t.runWebGPUProgram(i,[r],r.dtype)}const zce={kernelName:yd,backendName:"webgpu",kernelFunc:fI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vce(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Ai(o,r,a),p=!1;if(o.dtype==="string"){const N=t.bufferSync(r),_=t.bufferSync(o),E=Vo(t.readSync(i.dataId)[0]),D=bre(N,_,a,d,c,u,l,h,E,p);return t.makeTensorInfo(a,D.dtype,D.values)}const f=[d/c,c],m=Ae({inputs:{x:r},backend:t,attrs:{shape:[u,l]}}),g=o.shape.length?Ae({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}):xr({inputs:{x:o},backend:t}),y=g.dtype,x=t.makeTensorInfo([],y,os(1,y)),w=Ae({inputs:{x:i},backend:t,attrs:{shape:Array(f.length).fill(1)}}),b=fI({inputs:{x:w},backend:t,attrs:{reps:f}}),S=J([u,c]),C=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[S]}];switch(u){case 0:break;case 1:{const N=new Ip([u,c],l,m.shape.length,g.shape.length,h,f,y,p);t.runWebGPUProgram(N,[g,m],y,C,b)}break;default:{const N=new Ip([u,c],l,m.shape.length,x.shape.length,h,f,y,p);t.runWebGPUProgram(N,[x,m],y,C,b)}{const N=new Ip([u,c],l,m.shape.length,g.shape.length,h,f,y);t.runWebGPUProgram(N,[g,m],y,C,b)}}const k=Ae({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(w.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),k}const Bce={kernelName:u1,backendName:"webgpu",kernelFunc:Vce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=et(i,r.shape)[0],l=uw(r,o,a),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Nd({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,f})}const Uce={kernelName:Tm,backendName:"webgpu",kernelFunc:Wce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gce=vt({opType:ye.SQRT}),Hce={kernelName:dd,backendName:"webgpu",kernelFunc:Gce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jce={kernelName:c1,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new Id(t.shape,ye.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qce=Zn({opType:je.SQUARED_DIFFERENCE}),Kce={kernelName:pd,backendName:"webgpu",kernelFunc:qce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xce({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new Id(s.shape,ye.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,o)}const Yce={kernelName:xd,backendName:"webgpu",kernelFunc:Xce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qce=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=vn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((o,i)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${r-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${we("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:b}=j1(r.shape,o,i,a,l,u,c,h,d);let S;if(m)S=Ae({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){A(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=H1(x,w,b),k=Nd({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});S=Ae({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}else if(t.shouldExecuteOnCPU([r])){const k=t.readSync(r.dataId),N=Ze(r.shape,r.dtype,k),_=kre(p,N,b,x);S=t.makeTensorInfo(f,r.dtype,_.values)}else{const k=new Qce(p),N=[{type:"int32",data:x},{type:"int32",data:b}],_=t.runWebGPUProgram(k,[r],r.dtype,N);S=Ae({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeData(_.dataId)}return S}const Jce={kernelName:d1,backendName:"webgpu",kernelFunc:Zce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ehe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,m]=Ire(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const the={kernelName:p1,backendName:"webgpu",kernelFunc:ehe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nhe=Zn({opType:je.SUB,cpuKernelImpl:Nre,supportsComplex:!0}),she={kernelName:fd,backendName:"webgpu",kernelFunc:nhe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rhe=vt({opType:ye.TAN}),ohe={kernelName:md,backendName:"webgpu",kernelFunc:rhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ihe=vt({opType:ye.TANH}),ahe={kernelName:gd,backendName:"webgpu",kernelFunc:ihe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lhe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ai(i,o,r.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const p=[],f=Ae({inputs:{x:o},backend:t,attrs:{shape:[l,a]}});p.push(f);const m=Ae({inputs:{x:i},backend:t,attrs:{shape:[l,u]}});p.push(m);const g=Ae({inputs:{x:r},backend:t,attrs:{shape:d}});p.push(g);const y=fI({inputs:{x:g},backend:t,attrs:{reps:Array(d.length).fill(1)}}),x=new Ip([l,u],a,f.shape.length,m.shape.length,c,d,r.dtype,!1),w=J([l,u]),b=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[w]}],S=t.runWebGPUProgram(x,[m,f],g.dtype,b,y);p.push(S);const C=Ae({inputs:{x:S},backend:t,attrs:{shape:r.shape}});return p.forEach(k=>t.disposeData(k.dataId)),C}const uhe={kernelName:o1,backendName:"webgpu",kernelFunc:lhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let che=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${we("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},hhe=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${we("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ec(n,e){e!==null&&n.disposeData(e.dataId)}function h_(n){let e=1;for(;e<n;)e*=2;return e}function dhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=r.shape,l=a[a.length-1];if(t.shouldExecuteOnCPU([r])){const S=t.readSync(r.dataId),[C,k]=$re(S,a,r.dtype,o,i);return[t.makeTensorInfo(C.shape,C.dtype,C.values),t.makeTensorInfo(k.shape,k.dtype,k.values)]}if(o===0)return a[a.length-1]=0,[t.makeTensorInfo(a,r.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(l===1)return[r,Hs({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const c=J(a)/l,h=Ae({inputs:{x:r},attrs:{shape:[c,l]},backend:t}),d=h_(o),p=h_(l);let f=null;const m=()=>f===null?[h,h]:[h,f],g=(S,C,k)=>{const N=m(),_=new che(k),D=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[S]},{type:"int32",data:[C]}],P=f;f=t.runWebGPUProgram(_,N,"int32",D),ec(t,P)};for(let S=1;S<d;S*=2){const C=S*2;for(let k=S;k>=1;k/=2)g(C,k,[c,p])}for(let S=p;S>d;S/=2){const C=m(),k=new hhe([c,S/2]),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],E=f;f=t.runWebGPUProgram(k,C,"int32",_),ec(t,E);const D=d/2,P=D*2;for(let F=D;F>=1;F/=2)g(P,F,f.shape)}let y=f;f=Nd({inputs:{x:f},backend:t,attrs:{begin:0,size:[c,o]}}),ec(t,y);let x=vL({inputs:{x:h,indices:f},backend:t,attrs:{axis:1,batchDims:1}});ec(t,h);const w=a.slice(0,-1);w.push(o),y=f,f=Ae({inputs:{x:f},attrs:{shape:w},backend:t}),ec(t,y);const b=x;return x=Ae({inputs:{x},attrs:{shape:w},backend:t}),ec(t,b),[x,f]}const phe={kernelName:f1,backendName:"webgpu",kernelFunc:dhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fhe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${we("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mhe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new fhe(g),x=i==="nearest"?1:2;let w;switch(a){case"constant":w=1;break;case"reflect":w=2;break;case"wrap":w=3;break;case"nearest":w=4;break;default:w=1;break}const b=[{type:"int32",data:[x]},{type:"int32",data:[w]},{type:"float32",data:[l]}];return t.runWebGPUProgram(y,[r,o],"float32",b)}const ghe={kernelName:m1,backendName:"webgpu",kernelFunc:mhe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yhe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=Nd({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=Ae({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>t.disposeData(m.dataId)),f}const xhe={kernelName:_m,backendName:"webgpu",kernelFunc:yhe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class whe{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=$e(e),this.dispatch=ve(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${we("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${yl("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=At([u],a);let h=r;c!=null&&(h=ki({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(h),u=Vt(1,a)[0]);const d=sI(h.shape,u,i),p=J([h.shape[u]]),f=Ae({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=r.dtype,g=[f.shape[0],i],y=Hs({backend:t,attrs:{shape:g,value:0,dtype:m}}),x=new whe(f.shape,g,m),w=[{type:"int32",data:[i]},{type:"int32",data:[J(f.shape)]}],b=t.runWebGPUProgram(x,[f,o],m,w,y),S=Ae({inputs:{x:b},backend:t,attrs:{shape:d}});l.push(b);let C=S;if(c!=null){l.push(S);const k=Ei(c);C=ki({inputs:{x:C},backend:t,attrs:{perm:k}})}return l.forEach(k=>t.disposeData(k.dataId)),C}const bhe={kernelName:Em,backendName:"webgpu",kernelFunc:vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const She=[Fne,Rre,Dre,Pre,Lre,Vre,qre,Xre,Qre,Jre,toe,soe,ooe,aoe,uoe,foe,goe,voe,Soe,koe,_oe,Doe,Foe,Voe,Woe,joe,Mne,Xoe,Joe,aie,pie,yie,vie,Sie,kie,Nie,$ie,Rie,Die,Pie,Lie,Vie,qie,Xie,Uie,Zie,tae,oae,aae,cae,fae,gae,xae,vae,Sae,kae,Iae,Tae,_ae,Dne,Rae,Lae,Dae,Pae,Vae,Wae,Gae,qae,Yae,Zae,ele,Lne,nle,Qoe,rle,ile,lle,cle,dle,fle,yle,ble,wle,Cle,Ile,Tle,Rle,Ole,hoe,Fle,Mle,jle,Vle,Gle,Kle,doe,Yle,Zle,eue,nue,aue,hae,uue,hue,pue,Loe,gue,xue,vue,Cue,Iue,Tue,_ue,Rue,Moe,Due,Pue,Lue,zue,One,Wue,Hue,Kue,Que,ece,nce,rce,ice,lce,hce,fce,gce,xce,vce,Sce,kce,Toe,Yce,Jce,the,oue,Nce,_ce,Oce,Fce,Bce,Uce,Hce,jce,Kce,she,dae,ohe,ahe,uhe,zce,phe,ghe,Ure,xhe,bhe,yue];for(const n of She)nk(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var NL=function(n,e){return(NL=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function TL(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}NL(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Ot=function(){return(Ot=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function gt(n,e,t,s){return new(t||(t=Promise))(function(r,o){function i(u){try{l(s.next(u))}catch(c){o(c)}}function a(u){try{l(s.throw(u))}catch(c){o(c)}}function l(u){var c;u.done?r(u.value):(c=u.value,c instanceof t?c:new t(function(h){h(c)})).then(i,a)}l((s=s.apply(n,e||[])).next())})}function yt(n,e){var t,s,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(l){return function(u){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,s&&(r=2&c[0]?s.return:c[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,c[1])).done)return r;switch(s=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,s=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(r=i.trys,!((r=r.length>0&&r[r.length-1])||c[0]!==6&&c[0]!==2)){i=0;continue}if(c[0]===3&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(c[0]===6&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(h){c=[6,h],s=0}finally{t=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function Gl(n,e,t){if(t||arguments.length===2)for(var s,r=0,o=e.length;r<o;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var Ii=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],of=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function v0(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function $L(n){return gt(this,void 0,void 0,function(){var e,t;return yt(this,function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof Nt?[4,Zk(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=v0(n.width),e.height=v0(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}})})}function _L(n){return gt(this,void 0,void 0,function(){var e,t,s,r,o,i;return yt(this,function(a){switch(a.label){case 0:return n instanceof Nt?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,Zk(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return o=document.createElement("canvas"),i=o.getContext("2d"),o.width=v0(n.width),o.height=v0(n.height),i.drawImage(n,0,0),[2,i.getImageData(0,0,o.width,o.height)]}})})}function Che(n){return gt(this,void 0,void 0,function(){var e,t;return yt(this,function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,$L(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,SP(e,4)]}})})}function EL(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var tp={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},khe=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,_L(this.mask)]})})},n.prototype.toTensor=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,Che(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function Ihe(n){return EL(n),"person"}var Nhe=function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new D5.Pose({locateFile:function(r,o){if(e.solutionPath){var i=e.solutionPath.replace(/\/+$/,"");return"".concat(i,"/").concat(r)}return"".concat(o,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var o=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(o.segmentation={maskValueToLabel:Ihe,mask:new khe(r.segmentationMask)}),s.poses=[o]}})}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map(function(o,i){return{x:o.x*s.width,y:o.y*s.height,z:o.z,score:o.visibility,name:of[i]}})};return t!=null&&(r.keypoints3D=t.map(function(o,i){return{x:o.x,y:o.y,z:o.z,score:o.visibility,name:of[i]}})),r},n.prototype.estimatePoses=function(e,t,s){return gt(this,void 0,void 0,function(){var r,o;return yt(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Nt?(o=ImageData.bind,[4,Zk(e)]):[3,2];case 1:return r=new(o.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,i.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return i.sent(),[2,this.poses]}})})},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n}();function The(n){return gt(this,void 0,void 0,function(){var e,t;return yt(this,function(s){switch(s.label){case 0:return e=function(r){if(r==null)return Ot({},tp);var o=Ot({},r);return o.runtime="mediapipe",o.enableSegmentation==null&&(o.enableSegmentation=tp.enableSegmentation),o.enableSmoothing==null&&(o.enableSmoothing=tp.enableSmoothing),o.smoothSegmentation==null&&(o.smoothSegmentation=tp.smoothSegmentation),o.modelType==null&&(o.modelType=tp.modelType),o}(n),[4,(t=new Nhe(e)).initialize()];case 1:return s.sent(),[2,t]}})})}function oh(n){return n instanceof Nt?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function RL(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function mI(n){return n instanceof Nt?n:SP(n)}function AL(n,e,t){return WS(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function WS(n,e){A(n.width!==0,function(){return"".concat(e," width cannot be 0.")}),A(n.height!==0,function(){return"".concat(e," height cannot be 0.")})}function Dv(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,o=n.locationData,i=o.relativeKeypoints[s].x*e.width,a=o.relativeKeypoints[s].y*e.height,l=o.relativeKeypoints[r].x*e.width,u=o.relativeKeypoints[r].y*e.height,c=2*Math.sqrt((l-i)*(l-i)+(u-a)*(u-a)),h=function(d,p,f){var m,g=d.locationData,y=f.rotationVectorStartKeypointIndex,x=f.rotationVectorEndKeypointIndex;m=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var w=g.relativeKeypoints[y].x*p.width,b=g.relativeKeypoints[y].y*p.height,S=g.relativeKeypoints[x].x*p.width,C=g.relativeKeypoints[x].y*p.height;return RL(m-Math.atan2(-(C-b),S-w))}(n,e,t);return{xCenter:i/e.width,yCenter:a/e.height,width:c/e.width,height:c/e.height,rotation:h}}function DL(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function Ov(n,e,t,s,r,o,i){return n[e][r]*(n[t][o]*n[s][i]-n[t][i]*n[s][o])}function Cs(n,e,t){var s=(e+1)%4,r=(e+2)%4,o=(e+3)%4,i=(t+1)%4,a=(t+2)%4,l=(t+3)%4;return Ov(n,s,r,o,i,a,l)+Ov(n,r,o,s,i,a,l)+Ov(n,o,s,r,i,a,l)}function d_(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,o=n;r<o.length;r++){var i=o[r],a=i.x-.5,l=i.y-.5,u=t.ignoreRotation?0:e.rotation,c=Math.cos(u)*a-Math.sin(u)*l,h=Math.sin(u)*a+Math.cos(u)*l;c=c*e.width+e.xCenter,h=h*e.height+e.yCenter;var d=i.z*e.width,p=Ot({},i);p.x=c,p.y=h,p.z=d,s.push(p)}return s}function OL(n,e){var t=function(s,r,o,i){var a=r-s,l=i-o;if(a===0)throw new Error("Original min and max are both ".concat(s,", range cannot be 0."));var u=l/a;return{scale:u,offset:o-s*u}}(0,255,e[0],e[1]);return ee(function(){return ae(G(n,t.scale),t.offset)})}function US(n,e,t){var s,r,o,i,a,l,u,c,h,d,p,f,m,g,y=e.outputTensorSize,x=e.keepAspectRatio,w=e.borderMode,b=e.outputTensorFloatRange,S=oh(n),C=function(_,E){return E?{xCenter:E.xCenter*_.width,yCenter:E.yCenter*_.height,width:E.width*_.width,height:E.height*_.height,rotation:E.rotation}:{xCenter:.5*_.width,yCenter:.5*_.height,width:_.width,height:_.height,rotation:0}}(S,t),k=function(_,E,D){if(D===void 0&&(D=!1),!D)return{top:0,left:0,right:0,bottom:0};var P=E.height,F=E.width;WS(E,"targetSize"),WS(_,"roi");var L,B,W=P/F,Y=_.height/_.width,z=0,H=0;return W>Y?(L=_.width,B=_.width*W,H=(1-Y/W)/2):(L=_.height/W,B=_.height,z=(1-W/Y)/2),_.width=L,_.height=B,{top:H,left:z,right:z,bottom:H}}(C,y,x),N=(s=C,r=S.width,o=S.height,i=!1,a=s.width,l=s.height,u=i?-1:1,c=Math.cos(s.rotation),h=Math.sin(s.rotation),d=s.xCenter,p=s.yCenter,f=1/r,m=1/o,(g=new Array(16))[0]=a*c*u*f,g[1]=-l*h*f,g[2]=0,g[3]=(-.5*a*c*u+.5*l*h+d)*f,g[4]=a*h*u*m,g[5]=l*c*m,g[6]=0,g[7]=(-.5*l*c-.5*a*h*u+p)*m,g[8]=0,g[9]=0,g[10]=a*f,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,DL(g));return{imageTensor:ee(function(){var _=mI(n),E=co(AL(N,S,y),[1,8]),D=w==="zero"?"constant":"nearest",P=ds.transform(Tn(xe(_,"float32")),E,"bilinear",D,0,[y.height,y.width]);return b!=null?OL(P,b):P}),padding:k,transformationMatrix:N}}function p_(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function $he(n){return ee(function(){var e=function(r){return ee(function(){return[qe(r,[0,0,0],[1,-1,1]),qe(r,[0,0,1],[1,-1,-1])]})}(n),t=e[0],s=e[1];return{boxes:Ct(s),logits:Ct(t)}})}function PL(n){return n!=null&&n.currentTime!=null}function f_(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,i=0;i<n.length;++i){var a=n[i];t=Math.min(t,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),o=Math.max(o,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:o,width:s-t,height:o-r},e}function _he(n,e,t,s){return gt(this,void 0,void 0,function(){var r,o,i,a,l;return yt(this,function(u){switch(u.label){case 0:return n.sort(function(c,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,c.score)}),r=co(n.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),o=$n(n.map(function(c){return c.score[0]})),[4,ds.nonMaxSuppressionAsync(r,o,e,t)];case 1:return[4,(i=u.sent()).array()];case 2:return a=u.sent(),l=n.filter(function(c,h){return a.indexOf(h)>-1}),Ve([r,o,i]),[2,l]}})})}function FL(n,e){return n.map(function(t){var s=Ot(Ot({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s})}function Ehe(n,e,t){return gt(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,m,g,y,x,w,b,S,C,k,N,_,E;return yt(this,function(D){switch(D.label){case 0:if(s=Ct(e,[0]),r=s.shape,o=r[0],i=r[1],a=r[2],n.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(a));return l=[],[4,s.buffer()];case 1:for(u=D.sent(),c=0;c<n.length;c++)if(h=n[c],d=Ot({},h),l.push(d),p=Math.trunc(d.x*i),f=Math.trunc(d.y*o),!(p<0||p>=i||f<0||p>=o)){for(m=Math.trunc((t.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(i,p+m+1),x=Math.max(0,f-m),w=Math.min(o,f+m+1),b=0,S=0,C=0,k=0,N=x;N<w;++N)for(_=g;_<y;++_)E=u.get(N,_,c),b+=E,k=Math.max(k,E),S+=_*E,C+=N*E;k>=t.minConfidenceToRefine&&b>0&&(d.x=S/i/b,d.y=C/o/b)}return s.dispose(),[2,l]}})})}function m_(n,e){var t=e.left,s=e.top,r=e.left+e.right,o=e.top+e.bottom;return n.map(function(i){return Ot(Ot({},i),{x:(i.x-t)/(1-r),y:(i.y-s)/(1-o),z:i.z/(1-r)})})}function Rhe(n,e,t){return Jc()==="webgl"?function(s,r,o){var i=o.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(i,`);

      setOutput(outputValue);
    }
`)},l=hu();return ee(function(){var u=l.compileAndRun(a,[s,r]);return ks().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(n,e,t):ee(function(){var s=Te(e,.5),r=_t(s),o=Te(1,Za(1,G(r,ae(5.68842,G(r,ae(-.748699,G(r,ae(-57.8051,G(r,ae(291.309,G(r,-624.717)))))))))));return ae(e,G(Te(n,e),G(o,t.combineWithPreviousRatio)))})}function Ahe(n,e,t){return gt(this,void 0,void 0,function(){var s,r,o,i,a;return yt(this,function(l){switch(l.label){case 0:return s=n[0],r=n[1],o=function(u,c,h){return ee(function(){var d,p,f,m;h.reverseOutputOrder?(p=Ct(qe(u,[0,h.boxCoordOffset+0],[-1,1])),d=Ct(qe(u,[0,h.boxCoordOffset+1],[-1,1])),m=Ct(qe(u,[0,h.boxCoordOffset+2],[-1,1])),f=Ct(qe(u,[0,h.boxCoordOffset+3],[-1,1]))):(d=Ct(qe(u,[0,h.boxCoordOffset+0],[-1,1])),p=Ct(qe(u,[0,h.boxCoordOffset+1],[-1,1])),f=Ct(qe(u,[0,h.boxCoordOffset+2],[-1,1])),m=Ct(qe(u,[0,h.boxCoordOffset+3],[-1,1]))),p=ae(G(Ne(p,h.xScale),c.w),c.x),d=ae(G(Ne(d,h.yScale),c.h),c.y),h.applyExponentialOnBoxSize?(f=G(Rs(Ne(f,h.hScale)),c.h),m=G(Rs(Ne(m,h.wScale)),c.w)):(f=G(Ne(f,h.hScale),c.h),m=G(Ne(m,h.wScale),c.h));var g=Te(d,Ne(f,2)),y=Te(p,Ne(m,2)),x=ae(d,Ne(f,2)),w=ae(p,Ne(m,2)),b=an([K(g,[h.numBoxes,1]),K(y,[h.numBoxes,1]),K(x,[h.numBoxes,1]),K(w,[h.numBoxes,1])],1);if(h.numKeypoints)for(var S=0;S<h.numKeypoints;++S){var C=h.keypointCoordOffset+S*h.numValuesPerKeypoint,k=void 0,N=void 0;h.reverseOutputOrder?(k=Ct(qe(u,[0,C],[-1,1])),N=Ct(qe(u,[0,C+1],[-1,1]))):(N=Ct(qe(u,[0,C],[-1,1])),k=Ct(qe(u,[0,C+1],[-1,1])));var _=ae(G(Ne(k,h.xScale),c.w),c.x),E=ae(G(Ne(N,h.yScale),c.h),c.y);b=an([b,K(_,[h.numBoxes,1]),K(E,[h.numBoxes,1])],1)}return b})}(r,e,t),i=ee(function(){var u=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(u=qs(s,-t.scoreClippingThresh,t.scoreClippingThresh)),u=Ar(u)):u}),[4,Dhe(o,i,t)];case 1:return a=l.sent(),Ve([o,i]),[2,a]}})})}function Dhe(n,e,t){return gt(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f;return yt(this,function(m){switch(m.label){case 0:return s=[],[4,n.data()];case 1:return r=m.sent(),[4,e.data()];case 2:for(o=m.sent(),i=0;i<t.numBoxes;++i)if(!(t.minScoreThresh!=null&&o[i]<t.minScoreThresh||(a=i*t.numCoords,l=Ohe(r[a+0],r[a+1],r[a+2],r[a+3],o[i],t.flipVertically,i),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(t.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)p=a+t.keypointCoordOffset+d,f={x:r[p+0],y:t.flipVertically?1-r[p+1]:r[p+1]},c.relativeKeypoints.push(f);s.push(l)}return[2,s]}})})}function Ohe(n,e,t,s,r,o,i){return{score:[r],ind:i,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-t:n,xMax:s,yMax:o?1-n:t,width:s-e,height:t-n}}}}function Phe(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function g_(n,e,t,s){return gt(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h;return yt(this,function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,o=r/e.numLandmarks,[4,n.data()];case 1:for(i=d.sent(),a=[],l=0;l<e.numLandmarks;++l)u=l*o,(h={x:0,y:0}).x=t?e.inputImageWidth-i[u]:i[u],o>1&&(h.y=s?e.inputImageHeight-i[u+1]:i[u+1]),o>2&&(h.z=i[u+2]),o>3&&(h.score=Phe(e.visibilityActivation,i[u+3])),a.push(h);for(c=0;c<a.length;++c)(h=a[c]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function y_(n,e,t){var s=n.width,r=n.height,o=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(o=function(c,h){return h.rotation!=null?c+=h.rotation:h.rotationDegree!=null&&(c+=Math.PI*h.rotationDegree/180),RL(c)}(o,t)),o===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var i=(e.width*s*t.shiftX*Math.cos(o)-e.height*r*t.shiftY*Math.sin(o))/e.width,a=(e.width*s*t.shiftX*Math.sin(o)+e.height*r*t.shiftY*Math.cos(o))/e.height;n.xCenter=n.xCenter+i,n.yCenter=n.yCenter+a}if(t.squareLong){var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}else if(t.squareShort){var u=Math.min(s*e.width,r*e.height);s=u/e.width,r=u/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function Fhe(n,e){return n.map(function(t){var s=Ot(Ot({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s})}var Ia=function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n}(),Pv=function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Ia(this.getAlpha(this.minCutOff)),this.dx=new Ia(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var o=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,i=this.dx.applyWithAlpha(o,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(i),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(a),l)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n}(),GS=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return Gl([],e,!0);o=1/s}return e.map(function(i,a){var l=Ot(Ot({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new Pv(t.config)}),this.yFilters=e.map(function(s){return new Pv(t.config)}),this.zFilters=e.map(function(s){return new Pv(t.config)}))},n}(),Fv=function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new Ia(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,o=Math.trunc(t);if(this.lastTimestamp>=o)return e;if(this.lastTimestamp===-1)r=1;else{for(var i=e*s-this.lastValue*this.lastValueScale,a=o-this.lastTimestamp,l=i,u=a,c=(1+this.window.length)*(1e6/30),h=0,d=this.window;h<d.length;h++){var p=d[h];if(u+p.duration>c)break;l+=p.distance,u+=p.duration}var f=l/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:i,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=o,this.lowPassFilter.applyWithAlpha(e,r)},n}(),Lhe=function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var o=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return Gl([],e,!0);o=1/s}return this.initializeFiltersIfEmpty(e),e.map(function(i,a){var l=Ot(Ot({},i),{x:r.xFilters[a].apply(i.x,t,o),y:r.yFilters[a].apply(i.y,t,o)});return i.z!=null&&(l.z=r.zFilters[a].apply(i.z,t,o)),l})},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(s){return new Fv(t.config)}),this.yFilters=e.map(function(s){return new Fv(t.config)}),this.zFilters=e.map(function(s){return new Fv(t.config)}))},n}(),Lv=function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new Lhe(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new GS(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,o){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var i=o!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(o,s):1,a=r?FL(e,s):e,l=this.keypointsFilter.apply(a,t,i);return r?Fhe(l,s):l},n}(),x_=function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(a){return new Ia(t.alpha)}));for(var s=[],r=0;r<e.length;++r){var o=e[r],i=Ot({},o);i.score=this.visibilityFilters[r].apply(o.score),s.push(i)}return s},n}(),Mhe={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},tc={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},zhe={maxPoses:1,flipHorizontal:!1},Vhe={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},Bhe=.3,w_={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Whe={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Uhe={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Ghe={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Hhe={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},jhe={kernelSize:7,minConfidenceToRefine:.5},v_={alpha:.1},qhe={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Khe={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Xhe={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Yhe={activation:"none"},Qhe={combineWithPreviousRatio:.7},Zhe=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,$L(this.mask)]})})},n.prototype.toImageData=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,_L(this.mask)]})})},n.prototype.toTensor=function(){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function Jhe(n){return EL(n),"person"}var ede=function(){function n(e,t,s,r,o,i){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=o,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(h){h.reduceBoxesInLowestLayer==null&&(h.reduceBoxesInLowestLayer=!1),h.interpolatedScaleAspectRatio==null&&(h.interpolatedScaleAspectRatio=1),h.fixedAnchorSize==null&&(h.fixedAnchorSize=!1);for(var d=[],p=0;p<h.numLayers;){for(var f=[],m=[],g=[],y=[],x=p;x<h.strides.length&&h.strides[x]===h.strides[p];){var w=p_(h.minScale,h.maxScale,x,h.strides.length);if(x===0&&h.reduceBoxesInLowestLayer)g.push(1),g.push(2),g.push(.5),y.push(.1),y.push(w),y.push(w);else{for(var b=0;b<h.aspectRatios.length;++b)g.push(h.aspectRatios[b]),y.push(w);if(h.interpolatedScaleAspectRatio>0){var S=x===h.strides.length-1?1:p_(h.minScale,h.maxScale,x+1,h.strides.length);y.push(Math.sqrt(w*S)),g.push(h.interpolatedScaleAspectRatio)}}x++}for(var C=0;C<g.length;++C){var k=Math.sqrt(g[C]);f.push(y[C]/k),m.push(y[C]*k)}var N=0,_=0;if(h.featureMapHeight.length>0)N=h.featureMapHeight[p],_=h.featureMapWidth[p];else{var E=h.strides[p];N=Math.ceil(h.inputSizeHeight/E),_=Math.ceil(h.inputSizeWidth/E)}for(var D=0;D<N;++D)for(var P=0;P<_;++P)for(var F=0;F<f.length;++F){var L={xCenter:(P+h.anchorOffsetX)/_,yCenter:(D+h.anchorOffsetY)/N,width:0,height:0};h.fixedAnchorSize?(L.width=1,L.height=1):(L.width=m[F],L.height=f[F]),d.push(L)}p=x}return d}(Mhe);var a=$n(this.anchors.map(function(h){return h.width})),l=$n(this.anchors.map(function(h){return h.height})),u=$n(this.anchors.map(function(h){return h.xCenter})),c=$n(this.anchors.map(function(h){return h.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?co([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return gt(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m,g,y,x,w,b,S,C,k,N,_,E;return yt(this,function(D){switch(D.label){case 0:return r=function(P){var F;if((F=P==null?zhe:Ot({},P)).maxPoses==null&&(F.maxPoses=1),F.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(F.maxPoses,". Should be > 0."));if(F.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return F}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:PL(e)?1e6*e.currentTime:null,o=oh(e),i=ee(function(){return xe(mI(e),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(i)]);case 1:if((l=D.sent()).length===0)return this.reset(),i.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,o),D.label=2;case 2:return[4,this.poseLandmarksByRoi(a,i)];case 3:return c=D.sent(),i.dispose(),c==null?(this.reset(),[2,[]]):(h=c.landmarks,d=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,g=this.poseLandmarkFiltering(h,d,f,o),y=g.actualLandmarksFiltered,x=g.auxiliaryLandmarksFiltered,w=g.actualWorldLandmarksFiltered,b=this.poseLandmarksToRoi(x,o),this.regionOfInterest=b,S=this.smoothSegmentation&&m!=null?this.poseSegmentationFiltering(m):m,(C=y!=null?FL(y,o):null)!=null&&C.forEach(function(P,F){P.name=of[F]}),(k=w)!=null&&k.forEach(function(P,F){P.name=of[F]}),N={score:p,keypoints:C,keypoints3D:k},S!==null&&(_=ee(function(){var P=Tn(S,2),F=Wo(P,[[0,0],[0,0],[0,1]]);return bk(F,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Ve(S),E={maskValueToLabel:Jhe,mask:new Zhe(_)},N.segmentation=E),[2,[N]])}})})},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=Rhe(t,e,Qhe),Ve(e)),Ve(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Ve([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Ve(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=co([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return gt(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,h;return yt(this,function(d){switch(d.label){case 0:return t=US(e,Whe),s=t.imageTensor,r=t.padding,o=this.detectorModel.predict(s),i=$he(o),a=i.boxes,[4,Ahe([l=i.logits,a],this.anchorTensor,Vhe)];case 1:return(u=d.sent()).length===0?(Ve([s,o,l,a]),[2,u]):[4,_he(u,this.maxPoses,Bhe)];case 2:return c=d.sent(),h=function(p,f){p===void 0&&(p=[]);for(var m=f.left,g=f.top,y=f.left+f.right,x=f.top+f.bottom,w=0;w<p.length;w++){var b=p[w],S=b.locationData.relativeBoundingBox,C=(S.xMin-m)/(1-y),k=(S.yMin-g)/(1-x),N=S.width/(1-y),_=S.height/(1-x);S.xMin=C,S.yMin=k,S.width=N,S.height=_,S.xMax=C+N,S.yMax=k+_;var E=b.locationData.relativeKeypoints;E&&E.forEach(function(D){var P=(D.x-m)/(1-y),F=(D.y-g)/(1-x);D.x=P,D.y=F})}return p}(c,r),Ve([s,o,l,a]),[2,h]}})})},n.prototype.poseDetectionToRoi=function(e,t){return y_(Dv(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,w_)},n.prototype.poseLandmarksByRoi=function(e,t){return gt(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d,p,f,m,g;return yt(this,function(y){switch(y.label){case 0:if(s=oh(t),r=US(t,Uhe,e),o=r.imageTensor,i=r.padding,a=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(o,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=y.sent())==null?(Ve(u),Ve(o),[2,null]):(h=c.landmarks,d=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,m=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,i,a,h,d,f,m)]);case 2:return g=y.sent(),Ve(u),Ve(o),[2,Ot({poseScore:p},g)]}})})},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,o,i,a,l){return gt(this,void 0,void 0,function(){var u,c,h,d,p,f;return yt(this,function(m){return u=m_(o,s),c=m_(i,s),h=d_(u,t),d=d_(c,t),p=function(g,y){for(var x=[],w=0,b=g;w<b.length;w++){var S=b[w],C=S.x,k=S.y,N=y.rotation,_=Math.cos(N)*C-Math.sin(N)*k,E=Math.sin(N)*C+Math.cos(N)*k,D=Ot({},S);D.x=_,D.y=E,x.push(D)}return x}(a,t),f=null,this.enableSegmentation&&(f=ee(function(){var g=l.shape,y=g[0],x=g[1],w=function(C){var k=DL(new Array(16).fill(0));k[0][0]=Cs(C,0,0),k[1][0]=-Cs(C,0,1),k[2][0]=Cs(C,0,2),k[3][0]=-Cs(C,0,3),k[0][2]=Cs(C,2,0),k[1][2]=-Cs(C,2,1),k[2][2]=Cs(C,2,2),k[3][2]=-Cs(C,2,3),k[0][1]=-Cs(C,1,0),k[1][1]=Cs(C,1,1),k[2][1]=-Cs(C,1,2),k[3][1]=Cs(C,1,3),k[0][3]=-Cs(C,3,0),k[1][3]=Cs(C,3,1),k[2][3]=-Cs(C,3,2),k[3][3]=Cs(C,3,3);for(var N=C[0][0]*k[0][0]+C[1][0]*k[0][1]+C[2][0]*k[0][2]+C[3][0]*k[0][3],_=0;_<k.length;_++)for(var E=0;E<k.length;E++)k[_][E]/=N;return k}(r),b=co(AL(w,{width:x,height:y},e),[1,8]),S=[1,y,x,1];return Ct(ds.transform(K(l,S),b,"bilinear","constant",0,[e.height,e.width]),[0,3])}),Ve(l)),[2,{landmarks:h,auxiliaryLandmarks:d,worldLandmarks:p,segmentationMask:f}]})})},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return gt(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u,c,h,d,p,f;return yt(this,function(m){switch(m.label){case 0:return t=e[0],s=e[1],r=e[2],o=e[3],i=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(a=m.sent()[0])<.5?[2,null]:[4,g_(t,Ghe)];case 2:return[4,Ehe(m.sent(),r,jhe)];case 3:return l=m.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,g_(o,Hhe)];case 4:return h=m.sent(),d=h.slice(0,33),p=function(g,y,x){x===void 0&&(x=!0);for(var w=[],b=0;b<g.length;b++){var S=Ot({},y[b]);x&&(S.score=g[b].score),w.push(S)}return w}(u,d,!0),f=this.enableSegmentation?function(g,y,x){return ee(function(){var w=Ct(g,[0]),b=w.shape[2];if(b===1){var S=w;switch(y.activation){case"none":break;case"sigmoid":S=Ar(S);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(y.activation,")"))}var C=x?ds.resizeBilinear(S,[x.height,x.width]):S;return Ct(C,[2])}throw new Error("Unsupported number of tensor channels ".concat(b))})}(i,Yhe):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:p,segmentationMask:f}]}})})},n.prototype.poseLandmarksToRoi=function(e,t){return y_(Dv(f_(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,w_)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var o,i,a;if(this.timestamp!=null&&this.enableSmoothing){var l=Dv(f_(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new x_(v_)),o=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new x_(v_)),i=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new Lv(qhe)),o=this.landmarksSmoothingFilterActual.apply(o,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new Lv(Khe)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new Lv(Xhe)),a=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else o=e,i=t,a=s;return{actualLandmarksFiltered:o,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:a}},n}();function tde(n){return gt(this,void 0,void 0,function(){var e,t,s,r,o,i;return yt(this,function(a){switch(a.label){case 0:return e=function(l){var u=Ot({},l??tc);if(u.enableSmoothing==null&&(u.enableSmoothing=tc.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=tc.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=tc.smoothSegmentation),u.modelType==null&&(u.modelType=tc.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=tc.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([nh(e.detectorModelUrl,{fromTFHub:t}),nh(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=a.sent(),o=r[0],i=r[1],[2,new ede(o,i,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var Ql,xi,LL=function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var o=r[s];if(o<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(o))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(s){return e-s.lastTimestamp<=t.maxAge})},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),o=[],i=0,a=Array.from(Array(e.length).keys());i<a.length;i++){var l=a[i];if(r.length!==0){for(var u=-1,c=-1,h=0,d=r;h<d.length;h++){var p=d[h],f=t[l][p];f>=this.minSimilarity&&f>c&&(u=p,c=f)}if(u>=0){var m=this.tracks[u];m=Object.assign(m,this.createTrack(e[l],s,m.id)),e[l].id=m.id;var g=r.indexOf(u);r.splice(g,1)}else o.push(l)}else o.push(l)}for(var y=0,x=o;y<x.length;y++){l=x[y];var w=this.createTrack(e[l],s);this.tracks.push(w),e[l].id=w.id}},n.prototype.updateTracks=function(e){this.tracks.sort(function(t,s){return s.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:Gl([],e.keypoints,!0).map(function(o){return Ot({},o)})};return e.box!==void 0&&(r.box=Ot({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(s){return!e.includes(s.id)})},n.prototype.reset=function(){this.tracks=[]},n}(),nde=function(n){function e(t){return n.call(this,t)||this}return TL(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(r){return s.tracks.map(function(o){return s.iou(r,o)})})},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),o=Math.max(t.box.yMin,s.box.yMin),i=Math.min(t.box.xMax,s.box.xMax),a=Math.min(t.box.yMax,s.box.yMax);if(r>=i||o>=a)return 0;var l=(i-r)*(a-o);return l/(t.box.width*t.box.height+s.box.width*s.box.height-l)},e}(LL),sde=function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return TL(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,o=t;r<o.length;r++){for(var i=o[r],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(i,c))}s.push(a)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,o=0,i=0,a=0;a<t.keypoints.length;++a){var l=t.keypoints[a],u=s.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){i+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),h=2*this.keypointFalloff[a];o+=Math.exp(-1*c/(2*r*Math.pow(h,2)))}}return i<this.minNumKeyoints?0:o/i},e.prototype.area=function(t){var s=this,r=t.filter(function(l){return l.score>s.keypointThreshold}),o=Math.min.apply(Math,Gl([1],r.map(function(l){return l.x}),!1)),i=Math.max.apply(Math,Gl([0],r.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,Gl([1],r.map(function(l){return l.y}),!1));return(i-o)*(Math.max.apply(Math,Gl([0],r.map(function(l){return l.y}),!1))-a)},e}(LL);function rde(n){switch(n){case xi.BlazePose:return of.reduce(function(e,t,s){return e[t]=s,e},{});case xi.PoseNet:case xi.MoveNet:return Ii.reduce(function(e,t,s){return e[t]=s,e},{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(Ql||(Ql={})),function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"}(xi||(xi={}));var b_=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],ML={modelType:"SinglePose.Lightning",enableSmoothing:!0},S_={},C_={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},Mv={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},k_={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function ode(n,e,t,s){for(var r={},o=0,i=Ii;o<i.length;o++){var a=i[o];r[a]=[e[t[a]].y*s.height,e[t[a]].x*s.width]}if(function(x,w){return(x[w.left_hip].score>.2||x[w.right_hip].score>.2)&&(x[w.left_shoulder].score>.2||x[w.right_shoulder].score>.2)}(e,t)){var l=(r.left_hip[0]+r.right_hip[0])/2,u=(r.left_hip[1]+r.right_hip[1])/2,c=function(x,w,b,S,C){for(var k=["left_shoulder","right_shoulder","left_hip","right_hip"],N=0,_=0,E=0;E<k.length;E++)(B=Math.abs(S-b[k[E]][0]))>N&&(N=B),(W=Math.abs(C-b[k[E]][1]))>_&&(_=W);for(var D=0,P=0,F=0,L=Object.keys(b);F<L.length;F++){var B,W,Y=L[F];x[w[Y]].score<.2||((B=Math.abs(S-b[Y][0]))>D&&(D=B),(W=Math.abs(C-b[Y][1]))>P&&(P=W))}return[N,_,D,P]}(e,t,r,l,u),h=c[0],d=c[1],p=c[2],f=c[3],m=Math.max(1.9*d,1.9*h,1.2*p,1.2*f),g=[l-(m=Math.min(m,Math.max(u,s.width-u,l,s.height-l))),u-m];if(m>Math.max(s.width,s.height)/2)return HS(n==null,s);var y=2*m;return{yMin:g[0]/s.height,xMin:g[1]/s.width,yMax:(g[0]+y)/s.height,xMax:(g[1]+y)/s.width,height:(g[0]+y)/s.height-g[0]/s.height,width:(g[1]+y)/s.width-g[1]/s.width}}return HS(n==null,s)}function HS(n,e){var t,s,r,o;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,o=0):(t=1,s=e.height/e.width,r=0,o=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:o,yMax:r+t,xMax:o+s,height:t,width:s}}function ide(n){var e,t=n==null?ML:Ot({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(b_.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(b_));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=Ql.BoundingBox),t.trackerType===Ql.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(s){var r=I_(Mv,s);return r.keypointTrackerParams=Ot({},Mv.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r}(t.trackerConfig):t.trackerConfig=Mv;else{if(t.trackerType!==Ql.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,I_(k_,e)):t.trackerConfig=k_}return t}function I_(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var ade=function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=rde(xi.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new GS(C_),this.cropRegionFilterYMin=new Ia(.9),this.cropRegionFilterXMin=new Ia(.9),this.cropRegionFilterYMax=new Ia(.9),this.cropRegionFilterXMax=new Ia(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===Ql.Keypoint?this.tracker=new sde(t.trackerConfig):t.trackerType===Ql.BoundingBox&&(this.tracker=new nde(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return gt(this,void 0,void 0,function(){var t,s,r,o,i;return yt(this,function(a){switch(a.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Jc()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=a.sent(),a.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},o=0,i=0;i<17;++i)r.keypoints[i]={y:s[3*i],x:s[3*i+1],score:s[3*i+2]},r.keypoints[i].score>.2&&(++o,r.score+=r.keypoints[i].score);return o>0&&(r.score/=o),[2,r]}})})},n.prototype.runMultiPersonPoseModel=function(e){return gt(this,void 0,void 0,function(){var t,s,r,o,i,a,l,u;return yt(this,function(c){switch(c.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Jc()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=c.sent(),c.label=3;case 3:for(t.dispose(),r=[],o=s.length/56,i=0;i<o;++i)for(r[i]={keypoints:[]},a=56*i+51,r[i].box={yMin:s[a],xMin:s[a+1],yMax:s[a+2],xMax:s[a+3],width:s[a+3]-s[a+1],height:s[a+2]-s[a]},l=56*i+55,r[i].score=s[l],r[i].keypoints=[],u=0;u<17;++u)r[i].keypoints[u]={y:s[56*i+3*u],x:s[56*i+3*u+1],score:s[56*i+3*u+2]};return[2,r]}})})},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=S_),gt(this,void 0,void 0,function(){var r,o,i,a,l,u;return yt(this,function(c){switch(c.label){case 0:return t=function(h){return h==null?S_:Ot({},h)}(t),e==null?(this.reset(),[2,[]]):(s==null?PL(e)&&(s=1e6*e.currentTime):s*=1e3,r=mI(e),o=oh(r),i=Tn(r,0),e instanceof Nt||r.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,o,s)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,o,s)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=Ii[u],a[l].keypoints[u].y*=o.height,a[l].keypoints[u].x*=o.width;return[2,a]}})})},n.prototype.estimateSinglePose=function(e,t,s){return gt(this,void 0,void 0,function(){var r,o,i,a,l=this;return yt(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=HS(this.cropRegion==null,t)),r=ee(function(){var c=co([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),h=wn([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return xe(ds.cropAndResize(e,c,h,d,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(o=u.sent(),r.dispose(),o.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<o.keypoints.length;++i)o.keypoints[i].y=this.cropRegion.yMin+o.keypoints[i].y*this.cropRegion.height,o.keypoints[i].x=this.cropRegion.xMin+o.keypoints[i].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(o.keypoints=this.keypointFilter.apply(o.keypoints,s,1)),a=ode(this.cropRegion,o.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[o]]}})})},n.prototype.estimateMultiplePoses=function(e,t,s){return gt(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m=this;return yt(this,function(g){switch(g.label){case 0:return t.width>t.height?(o=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=ds.resizeBilinear(e,[i,o]),l=o,u=32*Math.ceil(i/32),a=Wo(r,[[0,0],[0,u-i],[0,0],[0,0]])):(o=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,r=ds.resizeBilinear(e,[i,o]),l=32*Math.ceil(o/32),u=i,a=Wo(r,[[0,0],[0,0],[0,l-o],[0,0]])),r.dispose(),e.dispose(),c=xe(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(h=g.sent(),c.dispose(),h=h.filter(function(y){return y.score>=m.minPoseScore}),p=0;p<h.length;++p)for(d=0;d<h[p].keypoints.length;++d)h[p].keypoints[d].y*=u/i,h[p].keypoints[d].x*=l/o;if(this.enableTracking&&(this.tracker.apply(h,s),this.enableSmoothing)){for(p=0;p<h.length;++p)this.keypointFilterMap.has(h[p].id)||this.keypointFilterMap.set(h[p].id,new GS(C_)),h[p].keypoints=this.keypointFilterMap.get(h[p].id).apply(h[p].keypoints,s,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(y,x){f.has(x)||m.keypointFilterMap.delete(x)})}return[2,h]}})})},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),o=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:o,height:r-t,width:o-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n}();function lde(n){return n===void 0&&(n=ML),gt(this,void 0,void 0,function(){var e,t,s,r;return yt(this,function(o){switch(o.label){case 0:return e=ide(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,nh(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=o.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,nh(r,{fromTFHub:s})];case 3:t=o.sent(),o.label=4;case 4:return Jc()==="webgl"&&ne().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new ade(t,e)]}})})}var N_={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},T_=["MobileNetV1","ResNet50"],$_={MobileNetV1:[8,16],ResNet50:[16]},ude=[8,16,32],__={MobileNetV1:[.5,.75,1],ResNet50:[1]},E_=[1,2,4],R_={maxPoses:1,flipHorizontal:!1},cde={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},hde=[-123.15,-115.9,-103.06];function zv(n){return Math.floor(n/2)}var dde=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(zv(e),e);)this.exchange(e,zv(e)),e=zv(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n}();function pde(n,e,t,s,r,o){for(var i=o.shape,a=i[0],l=i[1],u=!0,c=Math.max(t-r,0),h=Math.min(t+r+1,a),d=c;d<h;++d){for(var p=Math.max(s-r,0),f=Math.min(s+r+1,l),m=p;m<f;++m)if(o.get(d,m,n)>e){u=!1;break}if(!u)break}return u}function fde(n){return gt(this,void 0,void 0,function(){return yt(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function zL(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function VL(n,e,t){var s=zL(n.heatmapY,n.heatmapX,n.id,t),r=s.y,o=s.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+r}}function BL(n,e,t,s){var r=t.x,o=t.y;return n.some(function(i){var a,l,u,c,h,d,p=i.keypoints;return a=o,l=r,u=p[s].y,c=p[s].x,(h=u-a)*h+(d=c-l)*d<=e})}var A_=Ii.reduce(function(n,e,t){return n[e]=t,n},{}),WL=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(n){var e=n[0],t=n[1];return[A_[e],A_[t]]}),Vv=WL.map(function(n){return n[1]}),D_=WL.map(function(n){return n[0]});function O_(n,e,t){return n<e?e:n>t?t:n}function Bv(n,e,t,s){return{y:O_(Math.round(n.y/e),0,t-1),x:O_(Math.round(n.x/e),0,s-1)}}function P_(n,e){return{x:n.x+e.x,y:n.y+e.y}}function F_(n,e,t,s,r,o,i,a){a===void 0&&(a=2);for(var l=s.shape,u=l[0],c=l[1],h={y:e.y,x:e.x},d=P_(h,function(x,w,b){var S=b.shape[2]/2;return{y:b.get(w.y,w.x,x),x:b.get(w.y,w.x,S+x)}}(n,Bv(h,o,u,c),i)),p=0;p<a;p++){var f=Bv(d,o,u,c),m=zL(f.y,f.x,t,r);d=P_({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=Bv(d,o,u,c),y=s.get(g.y,g.x,t);return{y:d.y,x:d.x,name:Ii[t],score:y}}function mde(n,e,t,s,r,o){var i=e.shape[2],a=Vv.length,l=new Array(i),u=n.part,c=n.score,h=VL(u,s,t);l[u.id]={score:c,name:Ii[u.id],y:h.y,x:h.x};for(var d=a-1;d>=0;--d){var p=Vv[d],f=D_[d];l[p]&&!l[f]&&(l[f]=F_(d,l[p],f,e,t,s,o))}for(d=0;d<a;++d)p=D_[d],f=Vv[d],l[p]&&!l[f]&&(l[f]=F_(d,l[p],f,e,t,s,r));return l}function gde(n,e,t){return t.reduce(function(s,r,o){var i=r.y,a=r.x,l=r.score;return BL(n,e,{y:i,x:a},o)||(s+=l),s},0)/t.length}function yde(n,e,t,s,r,o,i,a){return i===void 0&&(i=.5),a===void 0&&(a=20),gt(this,void 0,void 0,function(){var l,u,c,h,d,p,f,m,g,y,x,w;return yt(this,function(b){switch(b.label){case 0:return[4,fde([n,e,t,s])];case 1:for(l=b.sent(),u=l[0],c=l[1],h=l[2],d=l[3],p=[],f=function(S,C,k){for(var N=k.shape,_=N[0],E=N[1],D=N[2],P=new dde(_*E*D,function(Y){return Y.score}),F=0;F<_;++F)for(var L=0;L<E;++L)for(var B=0;B<D;++B){var W=k.get(F,L,B);W<S||pde(B,W,F,L,C,k)&&P.enqueue({score:W,part:{heatmapY:F,heatmapX:L,id:B}})}return P}(i,1,u),m=a*a;p.length<o&&!f.empty();)g=f.dequeue(),y=VL(g.part,r,c),BL(p,m,y,g.part.id)||(x=mde(g,u,c,r,h,d),w=gde(p,m,x),p.push({keypoints:x,score:w}));return[2,p]}})})}function UL(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var xde=function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=$e(this.outputShape),this.dispatch=ve(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(UL("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n}();function wde(n,e){if(hu()instanceof kd)return function(t,s){var r=hu(),o=new xde(s.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return ks().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var vde=function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=$e(t),this.dispatch=ve(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(UL("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n}();function bde(n,e){if(hu()instanceof kd)return function(t,s){var r=hu(),o=new vde(t.shape),i=r.runWebGPUProgram(o,[t,s],"float32");return ks().makeTensorFromTensorInfo(i)}(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function GL(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return ee(function(){var o,i,a=K(n,[t*s,r]),l=fu(a,0),u=Tn(Ne(l,Me(s,"int32")),1),c=Tn((o=l,i=s,ee(function(){var h=Ne(o,Me(i,"int32"));return Te(o,G(h,Me(i,"int32")))})),1);return an([u,c],1)})}function Sde(n,e,t){return ee(function(){var s=function(r,o){for(var i=[],a=0;a<Ii.length;a++){var l=r.get(a,0).valueOf(),u=r.get(a,1).valueOf(),c=Cde(l,u,a,o),h=c.x,d=c.y;i.push(d),i.push(h)}return co(i,[Ii.length,2])}(n,t);return ae(xe(G(n.toTensor(),Me(e,"int32")),"float32"),s)})}function Cde(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Ii.length)}}function kde(n,e,t){return gt(this,void 0,void 0,function(){var s,r,o,i,a,l,u,c,h,d;return yt(this,function(p){switch(p.label){case 0:return s=0,r=GL(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return o=p.sent(),i=o[0],a=o[1],l=o[2],[4,(u=Sde(l,t,a)).buffer()];case 2:return c=p.sent(),h=Array.from(function(f,m){for(var g=m.shape[0],y=new Float32Array(g),x=0;x<g;x++){var w=m.get(x,0),b=m.get(x,1);y[x]=f.get(w,b,x)}return y}(i,l)),d=h.map(function(f,m){return s+=f,{y:c.get(m,0),x:c.get(m,1),score:f,name:Ii[m]}}),r.dispose(),u.dispose(),[2,{keypoints:d,score:s/d.length}]}})})}function Ide(n,e,t){return gt(this,void 0,void 0,function(){var s,r,o;return yt(this,function(i){return s=GL(n),r=function(a,l,u){return ee(function(){var c=bde(a,u);return ae(xe(G(a,Me(l,"int32")),"float32"),c)})}(s,t,e),o=wde(n,s),[2,[r,o]]})})}function L_(n,e){return(n-1)%e==0}var M_="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",z_="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function V_(n,e){return function(t,s){return(t-1)%s==0}(n,e)?n:Math.floor(n/e)*e+1}var B_=function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;A(s[1]===-1&&s[2]===-1,function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"});var r,o,i=(r=t.inputResolution,o=t.outputStride,{height:V_(r.height,o),width:V_(r.width,o)});(function(a){A(ude.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(a,l){A(L_(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),A(L_(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(i,t.outputStride),this.inputResolution=i,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=R_),gt(this,void 0,void 0,function(){return yt(this,function(s){return[2,this.estimatePosesGPU(e,t,!1)]})})},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=R_),s===void 0&&(s=!1),gt(this,void 0,void 0,function(){var r,o,i,a,l,u,c,h,d,p,f,m,g,y,x,w,b,S;return yt(this,function(C){switch(C.label){case 0:return r=function(k){var N=k;if(N.maxPoses==null&&(N.maxPoses=1),N.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(N.maxPoses,". Should be > 0."));if(N.maxPoses>1){if((N=Ot(Ot({},cde),N)).scoreThreshold<0||N.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(N.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(N.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(N.nmsRadius,"."))}return N}(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,o=US(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=o.imageTensor,a=o.padding,l=this.architecture==="ResNet50"?ae(i,hde):OL(i,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=Ct(u[2],[0]),h=Ct(u[3],[0]),d=Ct(u[0],[0]),p=Ct(u[1],[0])):(c=Ct(u[0],[0]),h=Ct(u[1],[0]),d=Ct(u[2],[0]),p=Ct(u[3],[0])),f=Ar(h),this.maxPoses!==1?[3,5]:s?[4,Ide(f,c,this.outputStride)]:[3,2]);case 1:return g=C.sent(),x=g[0],y=g[1],m=[x,y],[3,4];case 2:return[4,kde(f,c,this.outputStride)];case 3:x=C.sent(),m=[x],C.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,yde(f,c,d,p,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:m=C.sent(),C.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");w=this.getCanvasInfo(oh(e),this.inputResolution,a)}else S=oh(e),b=function(k,N,_,E){var D=N.height,P=N.width,F=D/(_.height*(1-E.top-E.bottom)),L=P/(_.width*(1-E.left-E.right)),B=-E.top*_.height,W=-E.left*_.width;if(L===1&&F===1&&B===0&&W===0)return k;for(var Y=0,z=k;Y<z.length;Y++)for(var H=0,Z=z[Y].keypoints;H<Z.length;H++){var te=Z[H];te.x=(te.x+W)*L,te.y=(te.y+B)*F}return k}(m,S,this.inputResolution,a),r.flipHorizontal&&(b=function(k,N){for(var _=0,E=k;_<E.length;_++)for(var D=0,P=E[_].keypoints;D<P.length;D++){var F=P[D];F.x=N.width-1-F.x}return k}(b,S));return i.dispose(),l.dispose(),Ve(u),c.dispose(),h.dispose(),d.dispose(),p.dispose(),f.dispose(),[2,s?[m,w]:b]}})})},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,o=e.width,i=r/(t.height*(1-s.top-s.bottom)),a=o/(t.width*(1-s.left-s.right)),l=-s.top*t.height;return[-s.left*t.width,l,a,i,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n}();function Nde(n){return n===void 0&&(n=N_),gt(this,void 0,void 0,function(){var e,t,s,r,o;return yt(this,function(i){switch(i.label){case 0:return(e=function(c){var h=c||N_;if(h.architecture==null&&(h.architecture="MobileNetV1"),T_.indexOf(h.architecture)<0)throw new Error("Invalid architecture ".concat(h.architecture,". ")+"Should be one of ".concat(T_));if(h.inputResolution==null&&(h.inputResolution={height:257,width:257}),h.outputStride==null&&(h.outputStride=16),$_[h.architecture].indexOf(h.outputStride)<0)throw new Error("Invalid outputStride ".concat(h.outputStride,". ")+"Should be one of ".concat($_[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.multiplier==null&&(h.multiplier=1),__[h.architecture].indexOf(h.multiplier)<0)throw new Error("Invalid multiplier ".concat(h.multiplier,". ")+"Should be one of ".concat(__[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.quantBytes==null&&(h.quantBytes=4),E_.indexOf(h.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(h.quantBytes,". ")+"Should be one of ".concat(E_," ")+"for architecture ".concat(h.architecture,"."));if(h.architecture==="MobileNetV1"&&h.outputStride===32&&h.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return h}(n)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,l=e.quantBytes,u="model-stride".concat(a,".json"),t=l===4?z_+"float/"+u:z_+"quant".concat(l,"/")+u,[4,nh(e.modelUrl||t)]);case 1:return s=i.sent(),[2,new B_(s,e)];case 2:return r=function(c,h,d){var p={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return d===4?M_+"float/".concat(p[h],"/")+f:M_+"quant".concat(d,"/").concat(p[h],"/")+f}(e.outputStride,e.multiplier,e.quantBytes),[4,nh(e.modelUrl||r)];case 3:return o=i.sent(),[2,new B_(o,e)]}var a,l,u})})}function Tde(n,e){return gt(this,void 0,void 0,function(){var t,s;return yt(this,function(r){switch(n){case xi.PoseNet:return[2,Nde(e)];case xi.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,tde(e)];if(t.runtime==="mediapipe")return[2,The(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case xi.MoveNet:return[2,lde(e)];default:throw new Error("".concat(n," is not a supported model name."))}})})}var W_={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HL={kernelName:Rf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,bd(xe(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $de={kernelName:kh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=_t(xe(t,"float32")),r=is(Te(Me(1),s));return jt(Ne(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _de={kernelName:Ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=is(Te(_t(xe(t,"float32")),1));return Ne(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ede={kernelName:Eu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{let a=n;const l=Wn(t.shape,r);return l.length>0&&(a=De(a,l)),K(a,t.shape)},b:()=>{let a=n;const l=Wn(s.shape,r);return l.length>0&&(a=De(a,l)),K(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rde={kernelName:Af,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ade={kernelName:Df,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>wt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dde={kernelName:Of,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>wt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ode={kernelName:Nh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,is(Te(Me(1),_t(xe(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pde={kernelName:Th,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=is(ae(Me(1),_t(xe(t,"float32"))));return Ne(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fde={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{const a=ae(_t(t),_t(s));let l=G(n,Ne(s,a));const u=Wn(t.shape,r);return u.length>0&&(l=De(l,u)),K(l,t.shape)},b:()=>{const a=ae(_t(t),_t(s));let l=jt(G(n,Ne(t,a)));const u=Wn(s.shape,r);return u.length>0&&(l=De(l,u)),K(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lde={kernelName:$h,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,ae(_t(xe(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mde={kernelName:_h,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,Te(Me(1),_t(xe(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zde(n,e,t,s,r,o){const i=O(n,"dy","avgPool3dGrad"),a=O(e,"input","avgPool3dGrad");let l=i,u=a,c=!1;a.rank===4&&(c=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Os("avgPool3dGrad",r,o);const h={dy:l,input:u},d={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=q.runKernel(Cx,h,d);return c?K(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Vde=j({avgPool3dGrad_:zde});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bde={kernelName:Ff,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>Vde(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wde(n,e,t,s,r){const o=O(n,"dy","avgPoolGrad"),i=O(e,"input","avgPoolGrad");A(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,u=!1;i.rank===3&&(u=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:l,input:a},h={filterSize:t,strides:s,pad:r},d=q.runKernel(Sx,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Ude=j({avgPoolGrad_:Wde});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gde={kernelName:Pf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>Ude(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hde={kernelName:Lf,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>dt(n,r,!1,!0),b:()=>dt(s,n,!0,!1)}:!o&&i?{a:()=>dt(n,r,!1,!1),b:()=>dt(n,s,!0,!1)}:o&&!i?{a:()=>dt(r,n,!1,!0),b:()=>dt(s,n,!1,!1)}:{a:()=>dt(r,n,!0,!0),b:()=>dt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jde={kernelName:Mf,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>_1(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qde={kernelName:K5,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>De(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kde={kernelName:Rh,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xde={kernelName:Ah,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yde={kernelName:Dh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>fs(Si(ml(s,r),Du(s,o)),n,wt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qde={kernelName:zf,inputsToSave:["x"],gradFunc:HL.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zde={kernelName:Vf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,o=et(r,e[0].shape)[0],i=s.map(l=>l[o]);return mr(n,i,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jde={kernelName:Bf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=t;return A(Xa(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>hk(s.shape,n,r,i,a,l),filter:()=>jk(s,n,r.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epe={kernelName:Wf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>Ya(n,r,o,i,a,1,l),filter:()=>jk(n,s,r.shape,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tpe(n,e,t,s,r){let o=n;n.rank===4&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),A(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),A(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:t};return q.runKernel(_x,a,l)}const npe=j({conv3DBackpropFilter_:tpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spe={kernelName:Uf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;A(Xa(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>CO(i.shape,n,a,r,o),filter:()=>npe(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rpe={kernelName:Oh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(jt(Fk(xe(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ope={kernelName:Ph,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(Lk(xe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ipe={kernelName:Gf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=At([r],s.rank);let l=fk(n,r,o,!i);return a!=null&&(l=xt(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ape={kernelName:Hf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];A(Xa(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,u]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(Un(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Os("depthwiseConv2d",o,i),{x:()=>rP(l.shape,n,u,r,o,a,i),filter:()=>sP(l,n,u.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lpe={kernelName:jf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>q.runKernel(s0,o,t),filter:()=>q.runKernel(r0,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const upe={kernelName:Lh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>q.runKernel(zx,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cpe={kernelName:Mh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=G(Rs(jt(_t(t))),2/Math.sqrt(Math.PI));return{x:()=>G(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hpe={kernelName:zh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dpe={kernelName:Kf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ppe={kernelName:Vh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,Rs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fpe={kernelName:Bh,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mpe={kernelName:Wh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{const a=Ne(n,xe(s,"float32")),l=Wn(t.shape,r);return l.length>0?K(De(a,l),t.shape):a},b:()=>{let a=G(n,xe(t,"float32"));const l=Wn(s.shape,r);l.length>0&&(a=K(De(a,l),s.shape));const u=_t(s);return jt(Ne(a,xe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gpe={kernelName:Xf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,l=a??Me(1),u=Wn(o.shape,r.shape),c=[];if(o.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}const h=Te(r,o),d=G(n,l),p=Dk(ae(i,Me(s))),f=G(G(G(p,p),p),Me(-.5));return{x:()=>o.rank===1?K(G(G(n,no(K(p,[1,1,1,o.shape[0]]),c)),l),r.shape):K(G(G(n,p),l),r.shape),mean:()=>{let b=G(G(p,Me(-1)),d);return o.rank===1&&(b=De(b,u)),K(b,o.shape)},variance:()=>{let b=G(G(f,h),d);return o.rank===1&&(b=De(b,u)),K(b,o.shape)},scale:()=>{const b=G(h,p);let S=G(n,b);return o.rank===1&&(S=De(S,u)),K(S,o.shape)},offset:()=>{let b=n;return o.rank===1&&(b=De(b,u)),K(b,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ype={kernelName:Yf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:i}=t,a=et(o,s.shape)[0],l=(u,c,h)=>()=>{const d=u.shape,p=c.size,f=d.slice(0,a),m=f.length,g=d.slice(o,d.length).slice(1),y=g.length,x=U_(0,m),w=U_(m+1,m+1+y),b=G_([f,[p],g]),S=K(h,b),C=K(c,[p]),k=G_([[m],x,w]),N=xt(S,k);let _=Uk(N,C,u.shape[a]);const E=Ei(k);return _=xt(_,E),_};if(i===1){const u=s.shape[0],c=s.split(u,0);return{x:()=>yr(c.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function U_(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function G_(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpe={kernelName:Uh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>wt(t),b:()=>wt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wpe={kernelName:Gh,gradFunc:n=>({x:()=>xe(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vpe={kernelName:Hh,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bpe={kernelName:jh,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Spe={kernelName:qh,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cpe={kernelName:Zf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=Cr(s,0);return{x:()=>fs(o,n,G(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kpe={kernelName:Xh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,ae(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ipe={kernelName:Kh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,xe(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Npe={kernelName:X5,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=Rs(s);return Te(n,G(De(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tpe(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:o,beta:i};return q.runKernel(qx,a,l)}const $pe=j({localResponseNormalizationBackprop_:Tpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _pe={kernelName:rm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=t;return{x:()=>$pe(s,r,n,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n,e,t,s){return e.rank<t.rank&&(e=K(e,gn(e.shape,s))),n.rank<t.rank&&(n=K(n,gn(n.shape,s))),{x:()=>G(n,xe(Bo(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_={kernelName:om,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=et(r,o.shape),l=jL(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Epe={kernelName:Yh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>G(n,xe(ml(t,s),"float32")),b:()=>G(n,xe(Jp(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rpe(n,e,t,s,r,o,i){const a=O(n,"dy","maxPool3dGrad"),l=O(e,"input","maxPool3dGrad"),u=O(t,"output","maxPool3dGrad");let c=a,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=K(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=K(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),A(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),A(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Os("maxPool3dGrad",o,i);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:i},g=q.runKernel(Xx,f,m);return p?K(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const Ape=j({maxPool3dGrad_:Rpe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dpe={kernelName:am,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>Ape(n,s,r,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ope(n,e,t,s,r,o,i){const a=O(n,"dy","maxPoolGrad"),l=O(e,"input","maxPoolGrad"),u=O(t,"output","maxPoolGrad");A(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),A(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Os("maxPoolGrad",o,i);const c={dy:a,input:l,output:u},h={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return q.runKernel(Kx,c,h)}const Ppe=j({maxPoolGrad_:Ope});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fpe={kernelName:im,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>Ppe(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lpe={kernelName:lm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=et(r,s.shape),a=Sn(s.shape,o)[1],l=J(a);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=K(n,c);return Ne(G(h,cr(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mpe={kernelName:um,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=et(r,o.shape),l=jL(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zpe={kernelName:Qh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>G(n,xe(Du(t,s),"float32")),b:()=>G(n,xe(Cr(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vpe={kernelName:cm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>qe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bpe={kernelName:Zh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{const a=Wn(t.shape,r);return a.length>0?K(De(n,a),t.shape):n},b:()=>{const a=G(n,jt(Lm(Ne(t,s)))),l=Wn(s.shape,r);return l.length>0?K(De(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wpe={kernelName:Jh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{const a=G(n,xe(s,"float32")),l=Wn(t.shape,r);return l.length>0?K(De(a,l),t.shape):a},b:()=>{const a=G(n,xe(t,"float32")),l=Wn(s.shape,r);return l.length>0?K(De(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Upe={kernelName:hm,gradFunc:n=>({x:()=>jt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gpe={kernelName:fm,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>wn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hpe={kernelName:pm,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jpe={kernelName:mm,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return go(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_={kernelName:gm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>qe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe={kernelName:ed,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Ue(o.shape,i.shape);return{a:()=>{const c=xe(i,"float32");let h=G(n,G(c,na(o,Te(c,Me(1)))));const d=Wn(o.shape,a);return d.length>0&&(h=De(h,d)),K(h,o.shape)},b:()=>{const c=Cr(o,0),h=fs(c,Pr(o),wt(o));let d=G(n,G(r,h));const p=Wn(i.shape,a);return p.length>0&&(d=De(d,p)),K(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kpe={kernelName:ym,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=Cr(t,0);return{x:()=>fs(r,n,G(n,s)),alpha:()=>{let o=fs(r,wt(n),G(n,t));const i=Wn(s.shape,n.shape);return i.length>0&&(o=De(o,i)),K(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xpe(n,e,t){const s=n.shape.slice();s[t]=1;const r=K(e,s),o=d0(n,t,!0,!1),i=d0(n,t,!0,!0),a=G(o,i);return G(r,a)}function Ype(n,e,t){const s=n.shape.length,r=s-t.length,o=At(t,s);let i=n;o!=null&&(i=xt(n,o));const a=i.shape.slice(),u=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(u);const c=i.reshape(a);let h=Xpe(c,e,r);if(h=h.reshape(i.shape),o!=null){const d=Ei(o);h=xt(h,d)}return h}const Qpe={kernelName:xm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>Ype(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zpe={kernelName:Fh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{const a=Ne(n,xe(s,"float32")),l=Wn(t.shape,r);return l.length>0?K(De(a,l),t.shape):a},b:()=>{let a=G(n,xe(t,"float32"));const l=Wn(s.shape,r);l.length>0&&(a=K(De(a,l),s.shape));const u=_t(s);return jt(Ne(a,xe(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jpe={kernelName:td,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,jt(_t(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const efe={kernelName:sd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=G(Du(t,6),bd(t));return{x:()=>G(n,xe(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tfe={kernelName:nd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,xe(bd(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nfe={kernelName:wm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sfe={kernelName:bm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>q.runKernel(s1,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rfe={kernelName:vm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>q.runKernel(n1,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ofe={kernelName:Sm,gradFunc:(n,e,t)=>{const{dims:s}=t,r=et(s,n.shape);return{x:()=>mo(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ife={kernelName:rd,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const afe={kernelName:od,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>jt(Ne(n,G(na(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lfe={kernelName:Cm,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>xe(wt(t),"float32"),t:()=>G(n,xe(t,n.dtype)),e:()=>G(n,xe(N1(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ufe={kernelName:id,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Cr(t,Me(0)),r=Me(Vm),o=Me(Bm),i=G(n,o),a=G(G(n,r),Rs(xe(t,"float32")));return fs(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cfe={kernelName:cd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(t,Te(Me(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hfe={kernelName:ud,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dfe={kernelName:ad,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(b1(xe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pfe={kernelName:ld,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(pk(xe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ffe={kernelName:km,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,l]=zm(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>Wo(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mfe={kernelName:$m,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=G(n,s);return{logits:()=>Te(i,G(De(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gfe={kernelName:hd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,Ar(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_={kernelName:Nm,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>v1(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K_={kernelName:Tm,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>an(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yfe={kernelName:dd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,G(is(xe(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xfe={kernelName:c1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(xe(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wfe={kernelName:pd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Me(2);return{a:()=>G(n,G(r,Te(t,s))),b:()=>G(n,G(r,Te(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vfe={kernelName:xd,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bfe={kernelName:fd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ue(t.shape,s.shape);return{a:()=>{let a=n;const l=Wn(t.shape,r);return l.length>0&&(a=De(a,l)),K(a,t.shape)},b:()=>{let a=n;const l=Wn(s.shape,r);return l.length>0&&(a=De(a,l)),K(jt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sfe={kernelName:Im,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;et(o,s.shape).forEach(u=>{r[u]=1});const a=K(n,r),l=G(a,cr(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cfe={kernelName:md,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ne(n,_t(b1(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kfe={kernelName:gd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(Te(Me(1),_t(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ife={kernelName:yd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=wt(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=ae(i,qe(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=ae(i,qe(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)i=ae(i,qe(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)i=ae(i,qe(n,[a*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nfe={kernelName:Xl,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=Ei(r);return{x:()=>xt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tfe={kernelName:_m,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>yr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $fe={kernelName:Em,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_fe(n,t)}}};function _fe(n,e){const t=la(e,wt(e)),s=Mm(n,t);let r=ml(e,Me(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=Tn(r,a+1);r=Si(r,cr(s.shape,"bool"));const i=wt(s);return fs(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Efe={kernelName:Rm,gradFunc:n=>({x:()=>wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rfe=[HL,$de,_de,Ede,Rde,Ade,Dde,Ode,Pde,Fde,Lde,Mde,Bde,Gde,Hde,jde,qde,Kde,Xde,Yde,Qde,Zde,epe,Jde,spe,rpe,ope,ipe,ape,lpe,Zpe,upe,cpe,hpe,dpe,ppe,mpe,fpe,gpe,ype,xpe,wpe,vpe,bpe,Spe,Cpe,kpe,Ipe,Npe,_pe,H_,H_,Epe,Dpe,Fpe,Lpe,Mpe,zpe,Vpe,Bpe,Wpe,Upe,Gpe,Hpe,jpe,j_,j_,qpe,Kpe,Qpe,Jpe,efe,tfe,nfe,sfe,rfe,ofe,ife,afe,lfe,ufe,cfe,hfe,dfe,pfe,ffe,mfe,gfe,q_,q_,K_,K_,yfe,wfe,xfe,vfe,bfe,Sfe,Cfe,kfe,Ife,Nfe,Tfe,$fe,Efe];for(const n of Rfe)Q5(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.abs=function(){return this.throwIfDisposed(),An(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.acos=function(){return this.throwIfDisposed(),rO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.acosh=function(){return this.throwIfDisposed(),oO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.add=function(n){return this.throwIfDisposed(),ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.all=function(n,e){return this.throwIfDisposed(),lk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.any=function(n,e){return this.throwIfDisposed(),h0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.argMax=function(n){return this.throwIfDisposed(),fu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.argMin=function(n){return this.throwIfDisposed(),iO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),K(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.asType=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.as2D=function(n,e){return this.throwIfDisposed(),K(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),K(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),K(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),K(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.asin=function(){return this.throwIfDisposed(),aO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.asinh=function(){return this.throwIfDisposed(),lO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.atan=function(){return this.throwIfDisposed(),uO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.atan2=function(n){return this.throwIfDisposed(),cO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.atanh=function(){return this.throwIfDisposed(),hO(this)};oe().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),w1(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),v1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),Dm(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Pc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.cast=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.ceil=function(){return this.throwIfDisposed(),yO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),qs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Nt&&(n=[n]),an([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),ck(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),dk(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Ya(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.cos=function(){return this.throwIfDisposed(),b1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.cosh=function(){return this.throwIfDisposed(),pk(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),d0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),fk(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),IO(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Om(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),NO(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.divNoNan=function(n){return this.throwIfDisposed(),TO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.div=function(n){return this.throwIfDisposed(),Ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.dot=function(n){return this.throwIfDisposed(),$O(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.elu=function(){return this.throwIfDisposed(),Pm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.equal=function(n){return this.throwIfDisposed(),Bo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.erf=function(){return this.throwIfDisposed(),mk(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),RO(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.exp=function(){return this.throwIfDisposed(),Rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.expandDims=function(n){return this.throwIfDisposed(),Tn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.expm1=function(){return this.throwIfDisposed(),AO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.fft=function(){return this.throwIfDisposed(),P1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.floor=function(){return this.throwIfDisposed(),Lm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.floorDiv=function(n){return this.throwIfDisposed(),ak(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Mm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.greaterEqual=function(n){return this.throwIfDisposed(),ml(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.greater=function(n){return this.throwIfDisposed(),Cr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.ifft=function(){return this.throwIfDisposed(),nf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.irfft=function(){return this.throwIfDisposed(),zk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.isFinite=function(){return this.throwIfDisposed(),DO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.isInf=function(){return this.throwIfDisposed(),OO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.isNaN=function(){return this.throwIfDisposed(),PO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.leakyRelu=function(n){return this.throwIfDisposed(),C1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.lessEqual=function(n){return this.throwIfDisposed(),Du(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.less=function(n){return this.throwIfDisposed(),Jp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),FO(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logSigmoid=function(){return this.throwIfDisposed(),LO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logSoftmax=function(n){return this.throwIfDisposed(),xk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),I1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.log=function(){return this.throwIfDisposed(),Pr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.log1p=function(){return this.throwIfDisposed(),k1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Si(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logicalNot=function(){return this.throwIfDisposed(),N1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logicalOr=function(n){return this.throwIfDisposed(),wk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.logicalXor=function(n){return this.throwIfDisposed(),MO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),dt(this,n,e,t)};oe().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),T1(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.max=function(n,e){return this.throwIfDisposed(),uo(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.maximum=function(n){return this.throwIfDisposed(),la(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.mean=function(n,e){return this.throwIfDisposed(),hn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.min=function(n,e){return this.throwIfDisposed(),Zp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.minimum=function(n){return this.throwIfDisposed(),Za(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),bk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.mod=function(n){return this.throwIfDisposed(),VO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.mul=function(n){return this.throwIfDisposed(),G(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.neg=function(){return this.throwIfDisposed(),jt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Fm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.notEqual=function(n){return this.throwIfDisposed(),eh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Sk(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.onesLike=function(){return this.throwIfDisposed(),Fr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.pad=function(n,e){return this.throwIfDisposed(),Wo(this,n,e)};oe().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),BO(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.pow=function(n){return this.throwIfDisposed(),na(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.prelu=function(n){return this.throwIfDisposed(),E1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.prod=function(n,e){return this.throwIfDisposed(),WO(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.reciprocal=function(){return this.throwIfDisposed(),GO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.relu=function(){return this.throwIfDisposed(),Ri(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.relu6=function(){return this.throwIfDisposed(),Rk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.reshapeAs=function(n){return this.throwIfDisposed(),K(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.reshape=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),aP(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),lP(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.reverse=function(n){return this.throwIfDisposed(),mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.rfft=function(){return this.throwIfDisposed(),F1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.round=function(){return this.throwIfDisposed(),Ak(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.rsqrt=function(){return this.throwIfDisposed(),Dk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.selu=function(){return this.throwIfDisposed(),Ok(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Pk(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sigmoid=function(){return this.throwIfDisposed(),Ar(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sign=function(){return this.throwIfDisposed(),HO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sin=function(){return this.throwIfDisposed(),Fk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sinh=function(){return this.throwIfDisposed(),Lk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.slice=function(n,e){return this.throwIfDisposed(),qe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.softmax=function(n){return this.throwIfDisposed(),O1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.softplus=function(){return this.throwIfDisposed(),vd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),_1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.split=function(n,e){return this.throwIfDisposed(),mr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sqrt=function(){return this.throwIfDisposed(),is(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.square=function(){return this.throwIfDisposed(),_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Vk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.squeeze=function(n){return this.throwIfDisposed(),Ct(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Nt?[this,n]:[this,...n];return yr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.step=function(n){return this.throwIfDisposed(),bd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),jO(this,n,e,t,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sub=function(n){return this.throwIfDisposed(),Te(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.sum=function(n,e){return this.throwIfDisposed(),De(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.tan=function(){return this.throwIfDisposed(),qO(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.tanh=function(){return this.throwIfDisposed(),gu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.tile=function(n){return this.throwIfDisposed(),no(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.toBool=function(){return this.throwIfDisposed(),xe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.toFloat=function(){return this.throwIfDisposed(),xe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.toInt=function(){return this.throwIfDisposed(),xe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.topk=function(n,e){return this.throwIfDisposed(),YO(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.transpose=function(n){return this.throwIfDisposed(),xt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.unique=function(n){return this.throwIfDisposed(),QO(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Uk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.unstack=function(n){return this.throwIfDisposed(),go(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.where=function(n,e){return this.throwIfDisposed(),fs(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oe().prototype.zerosLike=function(){return this.throwIfDisposed(),wt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ci extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ci.prototype)}}class so extends Error{constructor(e){super(e),Object.setPrototypeOf(this,so.prototype)}}class X extends Error{constructor(e){super(e),Object.setPrototypeOf(this,X.prototype)}}class rt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rt.prototype)}}class gI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gI.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qL{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bu(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function hi(n,e){if(!n)throw new gI(e)}function X_(n,e){let t=0;for(const s of n)s===e&&t++;return t}function Vs(n){return n.length===1?n[0]:n}function Tt(n){return Array.isArray(n)?n:[n]}function Vi(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ol(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let jr={};function yI(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function jS(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>jS(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:jS(s))}}}function Um(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in jr)i=jr[o];else if(i=e[o],i==null)throw new X(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new X(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in t?[a,l]=t[i]:i in jr?[a,l]=jr.className:i in e&&([a,l]=e[i]),a==null)throw new X(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const p of Object.keys(jr))u[p]=jr[p];for(const p of Object.keys(t))u[p]=t[p];const c=o.config;c.customObjects=u;const h=Object.assign({},jr);for(const p of Object.keys(t))jr[p]=t[p];jS(o.config);const d=l(a,o.config,t,r);return jr=Object.assign({},h),d}else{const u=Object.assign({},jr);for(const h of Object.keys(t))jr[h]=t[h];const c=new a(o.config);return jr=Object.assign({},u),c}}}function Afe(n,e){return n<e?-1:n>e?1:0}function Vg(n,e){return-1*Afe(n,e)}function za(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function Dfe(n){if(n==null)throw new X(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Wu(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new X(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function xI(n,e,t=0,s=1/0){return hi(t>=0),hi(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function Xn(n,e){Array.isArray(n)?(A(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Xn(t,`element ${s+1} of ${e}`))):A(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${KL(n)}.`)}function KL(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>KL(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function Ofe(n,e,t){let s=t!=null?t():Ms(),r;return(...i)=>{const a=t!=null?t():Ms();return a-s<e||(s=a,r=n(...i)),r}}function XL(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Pfe=0;function YL(){return Pfe++}const Bg={};function gw(n=""){return n in Bg||(Bg[n]=0),Bg[n]+=1,n+Bg[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ffe=["channelsFirst","channelsLast"],Lfe=["nearest","bilinear"],Mfe=["valid","same","causal"],zfe=["max","avg"],Vfe=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nc=new Map;function kn(n){Wu(Ffe,"DataFormat",n)}function Bfe(n){Wu(Lfe,"InterpolationFormat",n)}function Wr(n){Wu(Mfe,"PaddingMode",n)}function QL(n){Wu(zfe,"PoolMode",n)}const Np=[],Y_="/";function Zl(n,e){Np.push(n);try{const t=e();return Np.pop(),t}catch(t){throw Np.pop(),t}}function Wfe(){return Np.length===0?"":Np.join(Y_)+Y_}function ZL(n){if(!eM(n))throw new Error("Not a valid tensor name: '"+n+"'");return Wfe()+n}function JL(n){if(!eM(n))throw new Error("Not a valid tensor name: '"+n+"'");nc.has(n)||nc.set(n,0);const e=nc.get(n);if(nc.set(n,nc.get(n)+1),e>0){const t=`${n}_${e}`;return nc.set(t,1),t}else return n}const Ufe=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function eM(n){return!!n.match(Ufe)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gfe(n){return n===parseInt(n.toString(),10)}function Va(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function ih(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function el(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ho(n,e){if(e<n)throw new X(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Wv;function Fn(){return Wv==null&&(Wv=hu().epsilon()),Wv}function jo(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wi(n,e){return xe(n,e)}function Gm(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),K(n,t)}function Hfe(n,e){return ee(()=>{if(n.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Gm(n,1);return qS(t,[1,e,1])})}function jfe(n){const e=[Va(n.shape)];return K(n,e)}function qfe(n){if(n.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Va(n.shape,1)];return K(n,e)}function Jl(n,e,t){return ee(()=>{switch(n.rank){case 1:return A1(n,e,t);case 2:return Mk(n,[e,0],[t,n.shape[1]]);case 3:return D1(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return tf(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return qe(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return qe(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Uv(n,e,t){return ee(()=>{switch(n.rank){case 1:return A1(n,e,t);case 2:return Mk(n,[0,e],[n.shape[0],t]);case 3:return D1(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return tf(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Wg(n,e,t,s){return ee(()=>{switch(n.rank){case 1:return A1(n,e,t);case 2:switch(s){case 1:return Jl(n,e,t);case 2:return Uv(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Jl(n,e,t);case 2:return D1(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Uv(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Jl(n,e,t);case 2:return tf(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return tf(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Uv(n,e,t);default:throw new X(`The axis is not within the rank of the tensor ${s}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function wI(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),an(n,e)}function Q_(n,e){switch(n.rank){case 1:return xO([n,e]);case 2:return wO([n,e],0);case 3:return vO([n,e],0);case 4:return bO([n,e],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function qS(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new X(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return no(n,e)}function yw(n,e=0,t=1,s,r){return Ek(n,e,t,s,r)}function vi(n,e,t,s){if(n.rank<2||e.rank<2)throw new rt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new rt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return kS({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?KS(n.rank,s,jo()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=K(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=K(xt(e,c),[l,-1]);const h=[...r,...u];return K(kS({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?KS(n.rank,s,jo()):null,activation:t}),h)}}function tM(n,e,t){return ee(()=>(Array.isArray(e)?e=$n(e,"int32"):e=xe(e,"int32"),Mm(n,e,t)))}function Hm(n){return G(n,n)}function KS(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new X(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1,1]):K(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1,1]):K(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,1,s[0]]):K(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?K(e,[1,s[0],1]):K(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?K(e,[1,1,s[0]]):K(e,[1].concat(s))}else if(n<3)return e;throw new X(`Unsupported input rank by biasAdd: ${e.rank}`)}function ei(n,e,t){return ee(()=>(t==null&&(t=jo()),kn(t),ae(n,KS(n.rank,e,t))))}function Kfe(n,e=1){if(e!==1)throw new rt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Pm(n)}function Xfe(n){return ee(()=>Ne(n,ae(An(n),1)))}function nM(n,e,t,s){return ee(()=>eP(n,e,t,s))}function Yfe(n){return ee(()=>{const e=ae(.5,G(.2,n));return qs(e,0,1)})}function jm(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Qfe=["fanIn","fanOut","fanAvg"],Zfe=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jfe(n){Wu(Qfe,"FanMode",n)}function eme(n){Wu(Zfe,"Distribution",n)}class yo extends Cd{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class sM extends yo{apply(e,t){return wn(e,t)}}sM.className="Zeros";pe(sM);class vI extends yo{apply(e,t){return cr(e,t)}}vI.className="Ones";pe(vI);class rM extends yo{constructor(e){if(super(),typeof e!="object")throw new X(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new X(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ee(()=>G(Me(this.value),cr(e,t)))}getConfig(){return{value:this.value}}}rM.className="Constant";pe(rM);class oM extends yo{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Pu(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}oM.className="RandomUniform";pe(oM);class iM extends yo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new rt(`randomNormal does not support dType ${t}.`);return yw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}iM.className="RandomNormal";pe(iM);class aM extends yo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new rt(`truncatedNormal does not support dType ${t}.`);return Wk(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}aM.className="TruncatedNormal";pe(aM);class lM extends yo{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return ee(()=>{if(e.length!==2||e[0]!==e[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return G(this.gain,yk(e[0]))})}getConfig(){return{gain:this.gain}}}lM.className="Identity";pe(lM);function tme(n,e="channelsLast"){let t,s;if(kn(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Va(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Va(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Va(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class wr extends yo{constructor(e){if(super(),e.scale<0)throw new X(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Jfe(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,eme(this.distribution),this.seed=e.seed}apply(e,t){const s=tme(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new rt(`${this.getClassName()} does not support dType ${t}.`);return Wk(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return Pu(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wr.className="VarianceScaling";pe(wr);class bI extends wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wr.className}}bI.className="GlorotUniform";pe(bI);class SI extends wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wr.className}}SI.className="GlorotNormal";pe(SI);class CI extends wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wr.className}}CI.className="HeNormal";pe(CI);class kI extends wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wr.className}}kI.className="HeUniform";pe(kI);class II extends wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return wr.className}}II.className="LeCunNormal";pe(II);class NI extends wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return wr.className}}NI.className="LeCunUniform";pe(NI);class uM extends yo{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ee(()=>{if(e.length<2)throw new rt("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=J(e.slice(0,-1)),r=e[e.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const i=[Math.max(r,s),Math.min(r,s)],a=yw(i,0,1,t,this.seed),l=uP.qr(a,!1);let u=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return u=G(u,h.sign()),s<r&&(u=u.transpose()),G(Me(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}uM.className="Orthogonal";pe(uM);const Z_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function J_(n,e={}){return Um(n,Qr.getMap().classNameMap,e,"initializer")}function on(n){return yI(n)}function Qt(n){if(typeof n=="string"){const e=n in Z_?Z_[n]:n;if(e==="GlorotNormal")return new SI;if(e==="GlorotUniform")return new bI;if(e==="HeNormal")return new CI;if(e==="HeUniform")return new kI;if(e==="LeCunNormal")return new II;if(e==="LeCunUniform")return new NI;{const t={};return t.className=e,t.config={},J_(t)}}else return n instanceof yo?n:J_(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XS(n){return Array.isArray(n)&&Array.isArray(n[0])}function b0(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ke(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new X(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function St(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new X(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function S0(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eE="Variable";class nme{constructor(e,t="float32",s=eE,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=YL(),s=s??eE,this.originalName=ZL(s),this.name=JL(this.originalName),this.trainable_=r,this.constraint=o,this.val=ZO(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),sme(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function sme(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function YS(n){return n.map(e=>e.read())}function TI(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ln{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ni{constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=YL(),i!=null&&(this.originalName=ZL(i),this.name=JL(this.originalName)),this.rank=t.length}}let rme=0;class xw{constructor(e,t){this.callArgs=t,this.id=rme++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ome=0;class ut extends Cd{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ome++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=Vi(s)+"_"+gw(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new so(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new X(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Vs(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Vs(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ci(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ci(`Layer ${this.name} is not connected, no input to return.`);return Vs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ci(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ci(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Vs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Tt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Tt(this.inputSpec);if(t.length!==s.length)throw new X(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new X(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const l=o.shape;for(const u in i.axes){const c=Number(u),h=i.axes[u],d=c>=0?l[c]:l[l.length+c];if(h!=null&&[h,null].indexOf(d)===-1)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${h} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const u=i.shape[l],c=o.shape[l];if(u!=null&&c!=null&&u!==c)throw new X(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Tt(e),r=lme(e),o=ume(e);if(r===o)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of Tt(e))i.push(a.shape);this.build(Vs(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=Tt(i),l=[];for(let u of a)s.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=Vs(l),this.activityRegularizer!=null)throw new rt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=ime(e),a=this.computeOutputShape(i);let l;const u=ame(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,h)=>new Ni(u,c,this,Tt(e),t,this.name,h)):l=new Ni(u,a,this,Tt(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new rt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ci(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ci(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new so(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return S0(this.weights)}build(e){this.built=!0}getWeights(e=!1){return YS(e?this.trainableWeights:this.weights)}setWeights(e){ee(()=>{const t=this.weights;if(t.length!==e.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=YS(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],l=e[o];if(!ot(i.shape,l.shape))throw new X(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}TI(s)})}addWeight(e,t,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new X(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():Qt("zeros"));const u=r.apply(t,s),c=new nme(u,s,e,i,a);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Tt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=Tt(t),i=Tt(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(e,t,s,r,o,i,a=null){const l=Tt(e);t=Tt(t),s=Tt(s),r=Tt(r),o=b0(o),i=b0(i);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new xw({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ime(n){n=Tt(n);const e=[];for(const t of n)e.push(t.shape);return Vs(e)}function ame(n){return"float32"}function cM(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],u=cM(i,a,l);for(const c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}function lme(n){let e=!0;for(const t of Tt(n))if(!(t instanceof Ni)){e=!1;break}return e}function ume(n){let e=!0;for(const t of Tt(n))if(t instanceof Ni){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qm extends ut{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:gw("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Ni(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new xw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}qm.className="InputLayer";pe(qm);function cme(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new qm({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hme(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return xe(e,n.dtype)}catch{throw new X(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Na{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Na)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hme(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new X(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ni){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ni){if(this.id2Value[e.id]==null)throw new X(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new X(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ve(this.id2Mask)}}const C0=new qL,k0=new qL;function dme(n){C0!=null&&C0.setMaxEntries(n),k0!=null&&k0.setMaxEntries(n)}function dp(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(f=>f.name),l=[],u=e.names();for(const f of a)u.indexOf(f)!==-1?l.push(e.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=a.join(",")+"|"+e.names().sort().join(",");let h=C0.get(c),d;if(h==null){const f=pme(i,e);h=f.sorted,d=f.recipientCounts,C0.put(c,h),k0.put(c,d)}d={},r||Object.assign(d,k0.get(c));const p=new Na(e);for(let f=0;f<h.length;++f){if(s!=null){const _=gS().numTensors;_>s.maxNumTensors&&(s.maxNumTensors=_),_<s.minNumTensors&&(s.minNumTensors=_)}const m=h[f],g=m.sourceLayer;if(g instanceof qm)continue;const y=[],x=[],w=[];let b=!1;for(const _ of m.inputs){const E=p.getValue(_),D=p.getMask(_);y.push(E),x.push(D),D!=null&&(b=!0),r||(d[_.name]--,d[_.name]===0&&!e.hasKey(_)&&a.indexOf(_.name)===-1&&!E.isDisposed&&_.sourceLayer.stateful!==!0&&w.push(E))}b&&(t=t||{},t.mask=x[0]);const S=Tt(g.apply(y,t));let C=null;g.supportsMasking&&(C=g.computeMask(y,x));const k=mme(m),N=Array.isArray(k)?k:[k];for(let _=0;_<N.length;++_){p.hasKey(N[_])||p.add(N[_],S[_],Array.isArray(C)?C[0]:C);const E=a.indexOf(N[_].name);E!==-1&&(l[E]=S[_])}r||Ve(w)}return p.disposeMasks(),o?l:l[0]}function pme(n,e){A(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=tE(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=tE(o,e);for(const l of i)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(u=>s[l].add(u))}}return{sorted:t,recipientCounts:fme(s)}}function fme(n){const e={};for(const t in n)e[t]=n[t].size;return e}function tE(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const u of a.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(a.name),!t.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function mme(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gme=ne();gme.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,dme);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $I(n,e){return ee(()=>is(De(G(n,n),e,!0)))}class Km extends Cd{getConfig(){return{}}}class hM extends Km{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ee(()=>{const t=$I(e,this.axis),s=qs(t,0,this.maxValue);return G(e,Ne(s,ae(Fn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}hM.className="MaxNorm";pe(hM);class dM extends Km{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ee(()=>Ne(e,ae(Fn(),$I(e,this.axis))))}getConfig(){return{axis:this.axis}}}dM.className="UnitNorm";pe(dM);class pM extends Km{apply(e){return Ri(e)}}pM.className="NonNeg";pe(pM);class fM extends Km{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ee(()=>{const t=$I(e,this.axis),s=ae(G(this.rate,qs(t,this.minValue,this.maxValue)),G(1-this.rate,t));return G(e,Ne(s,ae(Fn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}fM.className="MinMaxNorm";pe(fM);const nE={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zn(n){return yI(n)}function sE(n,e={}){return Um(n,Qr.getMap().classNameMap,e,"constraint")}function Vn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in nE?nE[n]:n,config:{}};return sE(t)}else return n instanceof Km?n:sE(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Il(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];Ve(s)}}function mM(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var rE;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(rE||(rE={}));const yme=125;class af{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class xme{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class wme extends af{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=ee(()=>ae(this.totals[r],G(o,s)));this.totals[r]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:ee(()=>{const r=G(Ne(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Kn(t[s])}))}}class vme extends af{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class bme extends af{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||RP,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=yme),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");iS(this.yieldEvery)&&(this.maybeWait=Ofe(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Il(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Il(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Il(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Il(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Il(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):iS(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Il(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Il(e),await this.trainEnd(e))}}function gM(n,e){return n==null&&(n={}),n instanceof af?[n]:Array.isArray(n)&&n[0]instanceof af?n:Tt(n).map(s=>new bme(s,e))}class qr{constructor(){}static registerCallbackConstructor(e,t){A(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),qr.checkForDuplicate(t),qr.constructors[e]==null&&(qr.constructors[e]=[]),qr.constructors[e].push(t)}static checkForDuplicate(e){for(const t in qr.constructors)qr.constructors[+t].forEach(r=>{if(r===e)throw new X("Duplicate callback constructor.")})}static clear(){qr.constructors={}}static createCallbacks(e){const t=[];for(const s in qr.constructors){const r=+s;e>=r&&t.push(...qr.constructors[r])}return t.map(s=>new s)}}qr.constructors={};function yM(n,e,t,s,r,o,i,a,l){const u=new vme,c=[new wme,...qr.createCallbacks(e)];n!=null&&c.push(...n),c.push(u);const h=new xme(c);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xi(n,e={},t=!1){return Um(n,Qr.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function I0(n,e){return ee(()=>{n.dtype!=="float32"&&(n=xe(n,"float32"));const t=De(Hm(n),e,!0),s=wd(t.shape,Fn()),r=is(la(t,s));return Ne(n,r)})}function ww(n,e){return ee(()=>hn(Hm(Te(e,n)),-1))}function _I(n,e){return ee(()=>hn(An(Te(e,n)),-1))}function EI(n,e){return ee(()=>{const t=Te(n,e),s=qs(An(n),Fn(),Number.MAX_VALUE),r=An(Ne(t,s));return G(100,hn(r,-1))})}function Sme(n,e){return ee(()=>{const t=qs(e,Fn(),Number.MAX_VALUE),s=Pr(ae(1,t)),r=qs(n,Fn(),Number.MAX_VALUE),o=Pr(ae(1,r));return hn(Hm(Te(s,o)),-1)})}function Cme(n,e){return ee(()=>{const t=la(0,Te(1,G(n,e)));return hn(Hm(t),-1)})}function kme(n,e){return ee(()=>{const t=la(0,Te(1,G(n,e)));return hn(t,-1)})}function Ime(n,e){return ee(()=>{const t=De(G(n,e),-1),s=uo(G(Te(1,n),e),-1);return la(0,ae(1,Te(s,t)))})}function Nme(n,e){return ee(()=>{const t=Math.log(2),s=Te(e,n),r=Te(ae(s,vd(G(-2,s))),t);return hn(r,-1)})}function lf(n,e,t=!1){return ee(()=>{if(t)e=O1(e);else{const s=De(e,e.shape.length-1,!0);e=Ne(e,s)}return e=qs(e,Fn(),1-Fn()),jt(De(G(xe(n,"float32"),Pr(e)),e.shape.length-1))})}function N0(n,e,t=!1){return ee(()=>{const s=xe(Lm(jfe(n)),"int32");e=qs(e,Fn(),1-Fn());const r=e.shape,o=K(Sk(s,r[r.length-1]),r);return lf(o,e,t)})}function Tme(n,e){if(!ot(n.shape,e.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return ee(()=>{const t=Ri(e),s=jt(An(e));return ae(Te(t,G(e,n)),k1(Rs(s)))})}function vw(n,e){return ee(()=>{let t;return t=qs(e,Fn(),1-Fn()),t=Pr(Ne(t,Te(1,t))),hn(Tme(n,t),-1)})}function $me(n,e){return ee(()=>{const t=qs(n,Fn(),1),s=qs(e,Fn(),1);return De(G(n,Pr(Ne(t,s))),-1)})}function _me(n,e){return ee(()=>{const t=Pr(ae(Fn(),e));return hn(Te(e,G(n,t)),-1)})}function xM(n,e){return ee(()=>{const t=I0(n,-1),s=I0(e,-1),r=G(t,s);return jt(De(r,-1))})}const T0={meanSquaredError:ww,meanAbsoluteError:_I,meanAbsolutePercentageError:EI,meanSquaredLogarithmicError:Sme,squaredHinge:Cme,hinge:kme,categoricalHinge:Ime,logcosh:Nme,categoricalCrossentropy:lf,sparseCategoricalCrossentropy:N0,binaryCrossentropy:vw,kullbackLeiblerDivergence:$me,poisson:_me,cosineProximity:xM};function Gv(n){if(typeof n=="string"){if(n in T0)return T0[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wM(n,e){return ee(()=>{const t=G(.5,Fr(e)),s=wi(Cr(e,t),n.dtype);return hn(Bo(n,s),-1)})}function vM(n,e){return ee(()=>wi(Bo(fu(n,-1),fu(e,-1)),"float32"))}function Eme(n,e){return ee(()=>xe(De(Si(Bo(n,1),Bo(e,1))),"float32"))}function Rme(n,e){return ee(()=>xe(De(Si(Bo(n,0),Bo(e,1))),"float32"))}function Ame(n,e){return ee(()=>{const t=Eme(n,e),s=Rme(n,e),r=ae(t,s);return xe(fs(Cr(r,0),Ne(t,r),0),"float32")})}function Dme(n,e){return vw(n,e)}function Ome(n,e){return n.rank===e.rank&&(n=Ct(n,[n.rank-1])),e=fu(e,-1),e.dtype!==n.dtype&&(e=xe(e,n.dtype)),xe(Bo(n,e),"float32")}const Pme=ww,Fme=ww,Lme=_I,Mme=_I,zme=EI,Vme=EI,bM=lf,Bme=xM,SM=N0,$0={binaryAccuracy:wM,categoricalAccuracy:vM,precision:Ame,categoricalCrossentropy:bM,sparseCategoricalCrossentropy:SM,mse:Pme,MSE:Fme,mae:Lme,MAE:Mme,mape:zme,MAPE:Vme,cosine:Bme};function Wme(n){if(typeof n=="string"&&n in $0)return $0[n];if(typeof n!="string"&&n!=null)return n;throw new X(`Unknown metric ${n}`)}function Ug(n){if(hi(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(T0))if(T0[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys($0))if($0[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ume(n){const e={Adagrad:()=>Zu.adagrad(.01),Adadelta:()=>Zu.adadelta(1,.95,Fn()),Adam:()=>Zu.adam(.001,.9,.999,Fn()),Adamax:()=>Zu.adamax(.002,.9,.999,Fn(),0),RMSProp:()=>Zu.rmsprop(.001,.9,0,Fn()),SGD:()=>Zu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new X(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oE=1*1024*1024;function iE(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!QS(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>oE&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${oE}.`)}}function QS(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!QS(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!QS(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gme(n,e,t,s=console.log){const r=jme(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let i;if(!r){o.push("Receives inputs"),i=[];for(const c in n.nodesByDepth)i.push(...n.nodesByDepth[c])}s("_".repeat(e)),_0(o,t,s),s("=".repeat(e));const a=n.layers;for(let c=0;c<a.length;++c)r?qme(a[c],t,s):Kme(a[c],t,i,s),s((c===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=Hme(n),u=S0(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function Hme(n){let e;return n.collectedTrainableWeights!=null?e=S0(n.collectedTrainableWeights):e=S0(n.trainableWeights),e}function jme(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function _0(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function qme(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];_0(a,e,t)}function Kme(n,e,t,s){let r,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=n.name,l=n.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,o,r,n.countParams().toString(),u];_0(c,e,s);for(let h=1;h<i.length;++h)_0(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CM(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function ZS(n,e){if(n===null)return null;if(typeof n=="string")return Ol(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];CM(e,r,o)?t.push(o):t.push(ZS(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=Ol(s);t[o]=ZS(r,o)}}return t}}function JS(n,e){if(n==null)return null;if(typeof n=="string")return Vi(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];CM(e,r,o)?t.push(o):t.push(JS(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=Vi(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=JS(r,s)}return t}}/** @license See the LICENSE file. */const kM="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Xme=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Co extends ut{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=gw(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],za(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);za(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.sourceLayer,b=x.nodeIndex,S=x.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(S)}for(const x of this.inputs){const w=x.sourceLayer,b=x.nodeIndex,S=x.tensorIndex;hi(b===0,"input layer has >1 nodes"),hi(S===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(S)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const w=this.inputLayers[x];if(!(w instanceof qm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},r={},o={},i={},a=[],l=(x,w,b,S,C,k)=>{(S==null||C==null||k==null)&&(S=x.sourceLayer,C=x.nodeIndex,k=x.tensorIndex);const N=S.inboundNodes[C];if(b.indexOf(N)!==-1)throw new so(`The tensor ${x.name} at layer "${S.name}" is part of a cycle.`);if(w.indexOf(N)!==-1)return;this.containerNodes.add(Co.nodeKey(S,C)),S.id in i||(i[S.id]=Object.keys(i).length),b.indexOf(N)===-1&&b.push(N);const _=N.inboundLayers.length;for(let E=0;E<_;E++){const D=N.inputTensors[E],P=N.inboundLayers[E],F=N.nodeIndices[E],L=N.tensorIndices[E];l(D,w,b,P,F,L)}for(w.push(N);b.indexOf(N)>=0;)b.splice(b.indexOf(N),1);a.push(N)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=a.slice().reverse();for(const x of h){s[x.id]=x,x.id in t||(t[x.id]=0);let w=t[x.id];const b=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];w=Math.max(w,b),r[x.outboundLayer.id]=w,o[x.outboundLayer.id]=x.outboundLayer,t[x.id]=w;for(let S=0;S<x.inboundLayers.length;S++){const C=x.inboundLayers[S],k=x.nodeIndices[S],N=C.inboundNodes[k],_=t[N.id]==null?0:t[N.id];t[N.id]=Math.max(w+1,_),s[N.id]=N}}const d={};for(const x in t){const w=t[x];w in d||(d[w]=[]),d[w].push(s[x])}const p={};for(const x in r){const w=r[x];w in p||(p[w]=[]),p[w].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(Vg);this.layers=[];for(const x of f){const w=p[x];w.sort((b,S)=>{const C=i[b.id],k=i[S.id];return C<k?-1:C>k?1:0});for(const b of w)b instanceof Co&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(Vg);const m=this.inputs.slice(),g=[];for(const x of f)for(const w of d[x]){const b=w.outboundLayer;if(b!=null){for(const S of w.inputTensors)if(m.indexOf(S)===-1)throw new so(`Graph disconnected: cannot obtain value for tensor ${S} at layer "${b.name}". The following previous layers were accessed without issue: ${g}`);for(const S of w.outputTensors)m.push(S);g.push(b.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const w=y.filter(b=>b===x).length;if(w!==1)throw new so(`The name "${x}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new xw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=Xme(e);o&&this.parseWeights(e);for(const a of this.layers)for(const[l,u]of a.weights.entries()){const c=o?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(s[c]!=null)throw new X(`Duplicate weight name: ${c}`);s[c]=u,r++}const i=[];for(const a in e){let l=a;if(s[a]==null){const u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[a]]);else if(t)throw new X(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new X(`${a.length} of ${r} weights are not set: ${a}`)}TI(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${kM}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=JS(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return ee(()=>{e=Tt(e);const s=new Na;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return dp(this.outputs,s,t)})}computeMask(e,t){return ee(()=>{e=Tt(e);let s;return t==null?s=bu(null,e.length):s=Tt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=b0(e);if(t.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],u=t[a],c=l.name+"_0_0";s[c]=u}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Vg);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const u of l){const c=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],y=u.nodeIndices[m],x=u.tensorIndices[m],w=`${g.name}_${y}_${x}`,b=s[w];h.push(b)}const d=c.computeOutputShape(Vs(h)),p=b0(d),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${l.name}_${u}_${c}`;i.push(h)}for(let a=0;a<i.length;a++){const l=i[a];hi(l in s),o.push(s[l])}return Vs(o)}runInternalGraph(e,t){t==null&&(t=bu(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],c=e[l],h=t[l];s[u.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Vg);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,y,x,w;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[b,S]=f[0];m.mask==null&&(m.mask=S),x=Tt(h.call(b,m)),w=Tt(h.computeMask(b,S)),g=[b],y=[S]}else g=f.map(b=>b[0]),y=f.map(b=>b[1]),m.mask==null&&(m.mask=y),x=Tt(h.call(g,m)),w=Tt(h.computeMask(g,y));if(h.activityRegularizer)throw new rt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<p.length;++b){const S=p[b],C=x[b],k=w[b];s[S.id]=[C,k]}}}}const o=[],i=[],a=[];for(const l of this.outputs){hi(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];a.push(u.shape),o.push(u),i.push(c)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Co?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Co.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new X("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new X(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new X(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ee(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Co.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),u=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=Co.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],x=d.nodeIndices[g],w=d.tensorIndices[g],b=Co.nodeKey(y,x);let S=t[b];S==null&&(S=0),m.push([y.name,S,w,f])}u.push(m)}}}const c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,s.push(c)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=Co.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.inputLayersTensorIndices[i];r.push([a.name,c,h])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=Co.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);const h=this.outputLayersTensorIndices[i];o.push([a.name,c,h])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function l(g,y){const x=[];let w;for(const b of y){const S=b[0],C=b[1],k=b[2];if(w=b[3]==null?{}:b[3],!(S in o)){a(g,y);return}const N=o[S];if(N.inboundNodes.length<=C){a(g,y);return}const _=N.inboundNodes[C];x.push(_.outputTensors[k])}x.length>0&&g.apply(Vs(x),w)}function u(g){const y=g.name,x=Xi(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(r),o[y]=x,g.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${b}`);a(x,b)})}const c=t.name,h=t.layers;for(const g of h)u(g);for(;!Dfe(i);)for(const g of h){const y=o[g.name];if(y.name in i){const x=i[y.name];delete i[y.name];for(const w of x)l(y,w)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],x=g[1],w=g[2];hi(y in o);const S=o[y].inboundNodes[x].outputTensors;d.push(S[w])}const m=t.outputLayers;for(const g of m){const y=g[0],x=g[1],w=g[2];hi(y in o);const S=o[y].inboundNodes[x].outputTensors;p.push(S[w])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ee(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yme(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function IM(n,e){return Yme(n,e,"classWeight")}async function NM(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const r=ee(()=>{if(n.shape.length===1)return qi(n);if(n.shape.length===2){if(n.shape[1]>1)return fu(n,1);if(n.shape[1]===1)return K(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Ve(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),$n(i,"float32")}else return null}function Qme(n,e){return G(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Zme=32;function TM(n,e){let t,s;const r=e;t=r.xs,s=r.ys,A(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=aE("input",n.inputNames,t),i=aE("output",n.outputNames,s),a=o[0].shape[0];A(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),A(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)A(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)A(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function aE(n,e,t){if(t instanceof Nt)return[t];if(Array.isArray(t))return A(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new X(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function Jme(n){if(n.length===3)throw new rt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function ege(n,e,t){const s=t.batchesPerEpoch!=null;if(A(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),A(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),A(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),A(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),A(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(lE(t.validationData))A(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=Jme(t.validationData);o=g.xs,i=g.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();const c=gM(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=yM(c,h,t.epochs,null,null,tge(e,t),null,r,u);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let y=0,x=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:S}=TM(n,w.value),C={};C.batch=x,C.size=b[0].shape[0],await d.onBatchBegin(x,C);const k=[];if(t.classWeight!=null){const E=IM(t.classWeight,n.outputNames);for(let D=0;D<E.length;++D)k.push(await NM(S[D],null,E[D]))}const N=b.concat(S).concat(k),_=a(N);Ve(N);for(let E=0;E<l.length;++E){const D=l[E],P=_[E];C[D]=P,Kn(P)}await d.onBatchEnd(x,C),mM(C),x++,y++}if(s?y>=t.batchesPerEpoch:w.done){if(r){let b;lE(t.validationData)?b=Tt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):b=Tt(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?Zme:t.validationBatchSize,verbose:0}));for(let S=0;S<n.metricsNames.length;++S)g[`val_${n.metricsNames[S]}`]=b[S]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function tge(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function lE(n){return typeof n.iterator=="function"}function nge(n){return typeof n.next=="function"}async function sge(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new rt("Verbose mode is not implemented yet.");A(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=nge(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const u=await i.next();if(o=ee(()=>{if(u.value){const{xs:c,ys:h}=TM(n,u.value),d=c.concat(h),p=ee(()=>r(d));if(Ve(d),l===0)for(let m=0;m<p.length;++m)o.push(Me(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=ee(()=>ae(o[m],G(f,g))),l>0&&Ve(y)}Ve(p),a+=f,++l}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=Ne(o[u],a),Ve(c)}return Vs(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hv(n){A(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function np(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Jl(s,e,t-e)):Jl(n,e,t-e)}function eC(n,e){return ee(()=>n==null?null:Array.isArray(n)?n.map(t=>eC(t,e)):tM(n,e.dtype==="int32"?e:xe(e,"int32")))}function jv(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function $M(n){const e=[];n instanceof Nt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Gm(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function So(n,e){if(n==null)return;const t=[];if(e instanceof Nt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Nt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rge(n){return n instanceof Nt}function tC(n){return Array.isArray(n)}function uE(n){return!rge(n)&&!tC(n)}function cE(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(tC(n)&&n.length>0)i=!0;else if(uE(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new X(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(uE(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new X(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(tC(n)){if(n=n,n.length!==e.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new X(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=$M(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new X(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c>=0&&u!==c)throw new X(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function oge(n,e,t){const s=za(n.map(o=>o.shape[0]));s.sort();const r=za(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!ot(s,r))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function ige(n,e,t){const s=[ww,vw,lf];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===lf&&o.shape[o.shape.length-1]===1)throw new X(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(d!=null&&h!==d)throw new X(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function hE(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new X(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new X(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new X(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const u=a.shape[l],c=t[i][l];if(c!=null&&c!==u)throw new X(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function age(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const lge="layers-model";class Fc extends Co{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Gme(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=Ume(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof gl))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new X(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(Gv(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Gv(a))}else{const i=Gv(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zl("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=age(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};Zl("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(u=>{const c="";let h,d,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===vw?["accuracy","acc"].indexOf(f)!==-1?d=wM:["crossentropy","ce"].indexOf(f)!==-1&&(d=Dme):this.lossFunctions[i]===N0?["accuracy","acc"].indexOf(f)!==-1?d=Ome:["crossentropy","ce"].indexOf(f)!==-1&&(d=SM):["accuracy","acc"].indexOf(f)!==-1?d=vM:["crossentropy","ce"].indexOf(f)!==-1&&(d=bM);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=d,h=c+y}else p=Wme(f),h=c+Ug(f);let m;Zl(h,()=>{m=p}),o(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Hv(r);const o=!0,i=this.standardizeUserDataXY(e,t,o,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,u=this.testLoop(l,a,r,s.verbose,s.steps);return Vs(u)}finally{So(i[0],e),So(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),sge(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new X(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new X(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new Na;if(e instanceof Nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new X(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new X(`No value is provided for the model's input ${l.name}`);i.add(l,u)}const a=dp(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=bu(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return ee(()=>{const r=this.checkNumSamples(e);if(s)throw new rt("Verbose predictLoop() is not implemented yet.");const o=jv(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)ee(()=>{const u=o[a][0],c=o[a][1],h=np(e,u,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Na(d);return dp(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return Vs(i.map(a=>an(a,0)))})}predict(e,t={}){const s=$M(e);hE(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Hv(r),this.predictLoop(s,r)}finally{So(s,e)}}predictOnBatch(e){hE(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new so("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===N0?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=cE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=cE(t,this.feedOutputNames,o,!1,"target"),oge(e,t),ige(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const c=IM(r,this.outputNames);u=[];for(let h=0;h<c.length;++h)u.push(await NM(l[h],null,c[h]))}return[a,l,u]}testLoop(e,t,s,r=0,o){return ee(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new rt("Verbose mode is not implemented yet.");if(o!=null)throw new rt("steps mode in testLoop() is not implemented yet");{const l=jv(i,s),u=$n(Ho(0,i));for(let c=0;c<l.length;++c){const h=l[c][0],d=l[c][1],p=Jl(u,h,d-h),f=eC(t,p),m=e(f);if(c===0)for(let g=0;g<m.length;++g)a.push(Me(0));for(let g=0;g<m.length;++g){const y=m[g];a[g]=ae(a[g],G(d-h,y))}}for(let c=0;c<a.length;++c)a[c]=Ne(a[c],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(X_(e,r)>1){const i=X_(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new Na(h),p=dp(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=Qme(y,o[m]));const x=hn(y);t.push(x),m===0?f=y:f=ae(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=hn(y(r[x],p[x]))}Kn(g),i.push(g)}return f=hn(f),this.calculateLosses().forEach(m=>{f=ae(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read()),u=!0;return[this.optimizer_.minimize(a,u,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>ee(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:r[u]});const a=new Na(i),l=dp(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){const c=this.lossFunctions[u],h=hn(c(o[u],l[u]));u===0?s=h:s=ae(s,h),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const c=this.metricsTensors[u][0],h=this.metricsTensors[u][1],d=hn(c(o[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,u,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;Hv(p);const f=!1,m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,p);r=m[0],o=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new rt("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const _=!0,E=await this.standardizeUserData(l,u,null,null,_,p);c=E[0],h=E[1],y=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const _=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];c=np(r,_,E),i=r,r=np(r,0,_),h=np(o,_,E),a=o,o=np(o,0,_),y=c.concat(h)}else s.validationSteps!=null&&(g=!0);const x=r.concat(o).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let S,C;g?(this.makeTestFunction(),S=this.testFunction,C=b.slice().concat(b.map(_=>"val_"+_))):(S=null,y=[],C=b.slice());const k=gM(s.callbacks,s.yieldEvery);return await this.fitLoop(w,x,b,p,s.epochs,s.verbose,k,S,y,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,So(r,e),So(o,t),So(i,e),So(a,t),So(c,l),So(h,u),d!=null&&Ve(d)}}async fitLoop(e,t,s,r,o,i,a,l,u,c,h,d,p,f){r==null&&(r=32),o==null&&(o=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=Ho(0,g)),i==null&&(i=1);const{callbackList:x,history:w}=yM(a,i,o,d,g,p,r,m,h);x.setModel(this),this.history=w,await x.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<o;++b){await x.onEpochBegin(b);const S={};if(p!=null)throw new rt("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new rt("batch shuffling is not implemneted yet");c&&F5(y);const C=$n(y),k=jv(g,r);for(let N=0;N<k.length;++N){const _={};if(await x.onBatchBegin(N,_),ee(()=>{const E=k[N][0],D=k[N][1],P=Jl(C,E,D-E);_.batch=N,_.size=D-E;const F=eC(t,P),L=e(F);for(let B=0;B<s.length;++B){const W=s[B],Y=L[B];_[W]=Y,Kn(Y)}if(N===k.length-1&&m){const B=this.testLoop(l,u,r);for(let W=0;W<s.length;++W){const Y=s[W],z=B[W];Kn(z),S["val_"+Y]=z}}}),await x.onBatchEnd(N,_),mM(_),this.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(b,S),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ege(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const u of a){const c=await u.data();l.push(c[0])}return Ve(a),So(s[0],e),So(s[1],t),Vs(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=gS().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-gS().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Vi(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Vi(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=Vi(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Vi(Ug(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Vi(Ug(e)));{const e={};for(const t in this.metrics)e[t]=Vi(Ug(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ZS(e.optimizer_config),s=Xi(t);let r;if(typeof e.loss=="string")r=Ol(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>Ol(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=Ol(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>Ol(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=Ol(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=X3(e);if(u.length===0)throw new X(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new X(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await yS(this.getNamedWeights(t)),r=!1,o=null,a={modelTopology:this.toJSON(o,r),format:lge,generatedBy:`TensorFlow.js tfjs-layers v${kM}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:c,specs:h}=await yS(await this.optimizer.getWeights(),u);s.specs.push(...h),s.data=j3([s.data,c])}return this.userDefinedMetadata!=null&&(iE(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){iE(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Fc.className="Model";pe(Fc);class _M extends Fc{}_M.className="Functional";pe(_M);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class uf extends Fc{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:gw("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new X(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof uf||e instanceof Fc;let s;if(t){if(s=e,s.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=cme({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=cM(this.outputs[0])}this.inboundNodes=[],new xw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:bu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(St(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Fc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new so("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new so("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new so("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new so("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");o=t}else A(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof uf))throw new rt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const c=Xi(l,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(e){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}uf.className="Sequential";pe(uf);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let xs=class extends Cd{getConfig(){return{}}};class EM extends xs{apply(e,t=1){return Kfe(e,t)}}EM.className="elu";pe(EM);class RM extends xs{apply(e){return Ok(e)}}RM.className="selu";pe(RM);class AM extends xs{apply(e){return Ri(e)}}AM.className="relu";pe(AM);class DM extends xs{apply(e){return ee(()=>Za(6,Ri(e)))}}DM.className="relu6";pe(DM);class OM extends xs{apply(e){return e}}OM.className="linear";pe(OM);class PM extends xs{apply(e){return Ar(e)}}PM.className="sigmoid";pe(PM);class FM extends xs{apply(e){return Yfe(e)}}FM.className="hardSigmoid";pe(FM);class LM extends xs{apply(e){return vd(e)}}LM.className="softplus";pe(LM);class MM extends xs{apply(e){return Xfe(e)}}MM.className="softsign";pe(MM);class zM extends xs{apply(e){return gu(e)}}zM.className="tanh";pe(zM);let RI=class extends xs{apply(e,t=-1){return O1(e,t)}};RI.className="softmax";pe(RI);class VM extends xs{apply(e,t=-1){return xk(e,t)}}VM.className="logSoftmax";pe(VM);class BM extends xs{apply(e){return ee(()=>ee(()=>{const t=Math.sqrt(2),s=G(.5,ae(1,mk(Ne(e,t))));return G(e,s)}))}}BM.className="gelu";pe(BM);class WM extends xs{apply(e){return ee(()=>G(.5,G(e,ae(1,gu(G(is(Ne(2,Math.PI)),ae(e,G(.044715,na(e,3)))))))))}}WM.className="gelu_new";pe(WM);class UM extends xs{apply(e){return ee(()=>G(e,gu(vd(e))))}}UM.className="mish";pe(UM);class GM extends xs{apply(e,t=1){return ee(()=>G(Ar(G(e,t)),e))}}GM.className="swish";pe(GM);function tl(n){return n.getClassName()}function qv(n,e={}){return Um(n,Qr.getMap().classNameMap,e,"activation")}function nl(n){if(n==null){const e={};return e.className="linear",e.config={},qv(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},qv(e)}else return n instanceof xs?n:qv(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uge(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class HM extends Cd{}class jM extends HM{constructor(e){super(),uge(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return ee(()=>{let t=wn([1]);return this.hasL1&&(t=ae(t,De(G(this.l1,An(e))))),this.hasL2&&(t=ae(t,De(G(this.l2,Hm(e))))),K(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}jM.className="L1L2";pe(jM);const dE={l1l2:"L1L2"};function Pt(n){return yI(n)}function pE(n,e={}){return Um(n,Qr.getMap().classNameMap,e,"regularizer")}function Jt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in dE?dE[n]:n,config:{}};return pE(t)}else return n instanceof HM?n:pE(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qM extends ut{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ke(e);let s=Ri(e);return this.maxValue!=null&&(s=qs(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}qM.className="ReLU";pe(qM);class KM extends ut{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ke(e);return C1(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}KM.className="LeakyReLU";pe(KM);class XM extends ut{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Qt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Jt(e.alphaRegularizer),this.alphaConstraint=Vn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=St(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Ln({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ke(e),E1(e,this.alpha.read())}getConfig(){const e={alphaInitializer:on(this.alphaInitializer),alphaRegularizer:Pt(this.alphaRegularizer),alphaConstraint:zn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}XM.className="PReLU";pe(XM);let YM=class extends ut{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new rt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ke(e);return Pm(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};YM.className="ELU";pe(YM);class QM extends ut{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ke(e);return G(s,xe(Cr(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}QM.className="ThresholdedReLU";pe(QM);class ZM extends ut{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new RI().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return ee(()=>{let s=Ke(e);const r=t.mask;if(r!=null){const o=G(Te(cr(s.shape),xe(r,s.dtype)),Me(-1e9));s=ae(s,o)}return this.axis instanceof Array?this.axis.length>1?Rs(Te(s,I1(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}ZM.className="Softmax";pe(ZM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lc(n,e,t){if(typeof n=="number")return bu(n,e);if(n.length!==e)throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!Gfe(r))throw new X(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Lo(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function di(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+el([t-e,0]);else if(s==="same")n=n*e;else throw new X(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AI(n,e){return ee(()=>(kn(e),e==="channelsFirst"?xt(n,[0,2,3,1]):n))}function JM(n,e){return ee(()=>(kn(e),e==="channelsFirst"?xt(n,[0,2,3,4,1]):n))}function cge(n,e,t,s=1,r="valid",o,i=1){return ee(()=>{if(o==null&&(o=jo()),kn(o),n.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=xt(n,[0,2,1])),r==="causal")throw new rt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=ck(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=ei(a,t)),a})}function fE(n,e,t,s=[1,1],r="valid",o,i,a=null){return ee(()=>{if(o==null&&(o=jo()),kn(o),n.rank!==3&&n.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=AI(n,o);if(r==="causal")throw new rt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=nP({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(l=xt(l,[0,3,1,2])),l})}function hge(n,e,t,s=[1,1,1],r="valid",o,i){return ee(()=>{if(o==null&&(o=jo()),kn(o),n.rank!==4&&n.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=JM(n,o);if(r==="causal")throw new rt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=SO(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=ei(a,t)),o==="channelsFirst"&&(a=xt(a,[0,4,1,2,3])),a})}class bw extends ut{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bw.verifyArgs(t),this.rank=e,Xn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new rt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lc(t.kernelSize,e,"kernelSize"),this.strides=Lc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Wr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,kn(this.dataFormat),this.activation=nl(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Vn(t.biasConstraint),this.biasRegularizer=Jt(t.biasRegularizer),this.activityRegularizer=Jt(t.activityRegularizer),this.dilationRate=Lc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(hi("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!xI(e.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tl(this.activation),useBias:this.useBias,biasInitializer:on(this.biasInitializer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),biasConstraint:zn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Td extends bw{constructor(e,t){super(e,t),this.kernel=null,Td.verifyArgs(t),this.filters=t.filters,Xn(this.filters,"filters"),this.kernelInitializer=Qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Vn(t.kernelConstraint),this.kernelRegularizer=Jt(t.kernelRegularizer)}build(e){e=St(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return ee(()=>{e=Ke(e);let s;const r=this.bias==null?null:this.bias.read(),o=XL(this.activation.getClassName());if(o!=null&&this.rank===2)s=fE(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=cge(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=fE(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=hge(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new rt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=St(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=Lo(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:on(this.kernelInitializer),kernelRegularizer:Pt(this.kernelRegularizer),kernelConstraint:zn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Xm extends Td{constructor(e){super(2,e),Xm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!xI(e.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Xm.className="Conv2D";pe(Xm);class Ym extends Td{constructor(e){super(3,e),Ym.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Ym.className="Conv3D";pe(Ym);class ez extends Xm{constructor(e){if(super(e),this.inputSpec=[new Ln({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=St(e),e.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ln({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return ee(()=>{let s=Ke(e);if(s.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],u=r[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=di(l,d,c,this.padding),m=di(u,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=xt(s,[0,2,3,1]));let y=dk(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=xt(y,[0,3,1,2])),this.bias!=null&&(y=ei(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=St(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=di(t[r],l,i,this.padding),t[o]=di(t[o],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ez.className="Conv2DTranspose";pe(ez);class tz extends Ym{constructor(e){if(super(e),this.inputSpec=[new Ln({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=St(e),e.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ln({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return ee(()=>{let s=Ke(e);if(s.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const u=r[l],c=r[i],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],y=this.strides[2],x=di(u,m,d,this.padding),w=di(c,g,p,this.padding),b=di(h,y,f,this.padding),S=[o,x,w,b,this.filters];this.dataFormat!=="channelsLast"&&(s=xt(s,[0,2,3,4,1]));let C=kO(s,this.kernel.read(),S,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=xt(C,[0,4,1,2,3])),this.bias!==null&&(C=ei(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=St(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[r]=di(t[r],c,a,this.padding),t[o]=di(t[o],h,l,this.padding),t[i]=di(t[i],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tz.className="Conv3DTranspose";pe(tz);class nz extends Td{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Qt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Jt(t.depthwiseRegularizer),this.depthwiseConstraint=Vn(t.depthwiseConstraint),this.pointwiseInitializer=Qt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Jt(t.pointwiseRegularizer),this.pointwiseConstraint=Vn(t.pointwiseConstraint)}build(e){if(e=St(e),e.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Ln({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return ee(()=>{e=Ke(e);let s;if(this.rank===1)throw new rt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=xt(e,[0,2,3,1])),s=Pk(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=ei(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=xt(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=on(this.depthwiseInitializer),e.pointwiseInitializer=on(this.pointwiseInitializer),e.depthwiseRegularizer=Pt(this.depthwiseRegularizer),e.pointwiseRegularizer=Pt(this.pointwiseRegularizer),e.depthwiseConstraint=zn(this.depthwiseConstraint),e.pointwiseConstraint=zn(this.pointwiseConstraint),e}}nz.className="SeparableConv";class sz extends nz{constructor(e){super(2,e)}}sz.className="SeparableConv2D";pe(sz);class Sw extends Td{constructor(e){super(1,e),Sw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!xI(e.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Sw.className="Conv1D";pe(Sw);class rz extends ut{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ee(()=>{if(e=Ke(e),this.dataFormat==="channelsLast"){const s=Wg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Wg(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Wg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Wg(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}rz.className="Cropping2D";pe(rz);class oz extends ut{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kn(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Bfe(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return ee(()=>{let s=Ke(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=xt(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?ds.resizeNearestNeighbor(s,[o,i]):ds.resizeBilinear(s,[o,i]);return xt(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?ds.resizeNearestNeighbor(s,[o,i]):ds.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}oz.className="UpSampling2D";pe(oz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dge(n,e,t=[1,1],s="valid",r,o){return ee(()=>{r==null&&(r=jo()),kn(r);let i=AI(n,r);if(n.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Om(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=xt(i,[0,3,1,2])),i})}class iz extends bw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Qt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Vn(e.depthwiseConstraint),this.depthwiseRegularizer=Jt(e.depthwiseRegularizer)}build(e){if(e=St(e),e.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ee(()=>{e=Ke(e);let s=dge(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=ei(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=St(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Lo(t,this.kernelSize[0],this.padding,this.strides[0]),i=Lo(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=on(this.depthwiseInitializer),e.depthwiseRegularizer=Pt(this.depthwiseRegularizer),e.depthwiseConstraint=zn(this.depthwiseRegularizer),e}}iz.className="DepthwiseConv2D";pe(iz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function az(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function lz(n,e,t,s=!1,r,o,i=!1,a=!1){return ee(()=>{const l=e.shape.length;if(l<3)throw new X(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ho(2,l));if(e=xt(e,u),o!=null)throw new rt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=xe(xe(r,"bool"),"float32"),r.rank===l-1&&(r=Tn(r,-1)),r=xt(r,u)),s&&(e=mo(e,0),r!=null&&(r=mo(r,0)));const c=[];let h,d=t;const p=e.shape[0],f=go(e);let m;r!=null&&(m=go(r));for(let y=0;y<p;++y){const x=f[y],w=ee(()=>n(x,d));if(r==null)h=w[0],d=w[1];else{const b=ee(()=>{const S=m[y],C=Te(Fr(S),S),k=ae(G(w[0],S),G(d[0],C)),N=d.map((_,E)=>ae(G(w[1][E],S),G(_,C)));return{output:k,newStates:N}});h=b.output,d=b.newStates}a&&c.push(h)}let g;return a&&(g=yr(c,1)),[h,g,d]})}class wl extends ut{constructor(e){super(e);let t;if(e.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new PI({cells:e.cell}):t=e.cell,t.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ln({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ho(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){XS(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return ee(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new rt("Constants support is not implemented in RNN yet.");XS(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Ln({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!ot(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new Ln({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ee(()=>{if(!this.stateful)throw new ci("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>wn([s,r])):this.states_=[wn([s,this.cell.stateSize])];else if(e==null)Ve(this.states_),this.keptStates!=null&&(Ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>wn([s,r])):this.states_[0]=wn([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ve(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!ot(o.shape,a))throw new X(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Kn(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=az(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Ln({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Ni){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ee(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ke(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new X(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},u=lz((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),c=u[0],h=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return ee(()=>{let t=wn(e.shape);return t=De(t,[1,2]),t=Gm(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?qS(t,[1,s]):t):this.cell.stateSize>1?[qS(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===wl.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=Xi(r,s);return new e(Object.assign(t,{cell:o}))}}wl.className="RNN";pe(wl);class Cw extends ut{}class DI extends Cw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xn(this.units,"units"),this.activation=nl(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Jt(e.kernelRegularizer),this.recurrentRegularizer=Jt(e.recurrentRegularizer),this.biasRegularizer=Jt(e.biasRegularizer),this.kernelConstraint=Vn(e.kernelConstraint),this.recurrentConstraint=Vn(e.recurrentConstraint),this.biasConstraint=Vn(e.biasConstraint),this.dropout=ih([1,el([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ih([1,el([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=St(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ee(()=>{if(e=e,e.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=sl({ones:()=>Fr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=sl({ones:()=>Fr(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=vi(G(e,i),this.kernel.read()):o=vi(e,this.kernel.read()),this.bias!=null&&(o=ei(o,this.bias.read())),a!=null&&(s=G(s,a));let l=ae(o,vi(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tl(this.activation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:zn(this.kernelConstraint),recurrentConstraint:zn(this.recurrentConstraint),biasConstraint:zn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}DI.className="SimpleRNNCell";pe(DI);class uz extends wl{constructor(e){e.cell=new DI(e),super(e)}call(e,t){return ee(()=>{this.cell.dropoutMask!=null&&(Ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}uz.className="SimpleRNN";pe(uz);class OI extends Cw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Xn(this.units,"units"),this.activation=nl(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=nl(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Jt(e.kernelRegularizer),this.recurrentRegularizer=Jt(e.recurrentRegularizer),this.biasRegularizer=Jt(e.biasRegularizer),this.kernelConstraint=Vn(e.kernelConstraint),this.recurrentConstraint=Vn(e.recurrentConstraint),this.biasConstraint=Vn(e.biasConstraint),this.dropout=ih([1,el([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ih([1,el([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=St(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ee(()=>{if(e=e,e.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=sl({ones:()=>Fr(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=sl({ones:()=>Fr(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,u;0<this.dropout&&this.dropout<1&&(e=G(e,o[0]));let c=vi(e,this.kernel.read());this.useBias&&(c=ei(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=G(r,i[0]));const h=this.recurrentKernel.read(),[d,p]=mr(h,[2*this.units,this.units],h.rank-1),f=vi(r,d),[m,g,y]=mr(c,3,c.rank-1),[x,w]=mr(f,2,f.rank-1);a=this.recurrentActivation.apply(ae(m,x)),l=this.recurrentActivation.apply(ae(g,w));const b=vi(G(l,r),p);u=this.activation.apply(ae(y,b));const S=ae(G(a,r),G(ae(1,jt(a)),u));return[S,S]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tl(this.activation),recurrentActivation:tl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:zn(this.kernelConstraint),recurrentConstraint:zn(this.recurrentConstraint),biasConstraint:zn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}OI.className="GRUCell";pe(OI);class cz extends wl{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new OI(e),super(e)}call(e,t){return ee(()=>{this.cell.dropoutMask!=null&&(Ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}cz.className="GRU";pe(cz);class kw extends Cw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Xn(this.units,"units"),this.activation=nl(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=nl(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Jt(e.kernelRegularizer),this.recurrentRegularizer=Jt(e.recurrentRegularizer),this.biasRegularizer=Jt(e.biasRegularizer),this.kernelConstraint=Vn(e.kernelConstraint),this.recurrentConstraint=Vn(e.recurrentConstraint),this.biasConstraint=Vn(e.biasConstraint),this.dropout=ih([1,el([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ih([1,el([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=St(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends yo{apply(l,u){const c=o.apply([i]),h=new vI().apply([i]),d=o.apply([i*2]);return Q_(Q_(c,h),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ee(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=sl({ones:()=>Fr(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=sl({ones:()=>Fr(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=G(e,i[0]));let d=vi(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=G(r,a[0])),d=ae(d,vi(r,this.recurrentKernel.read())),this.useBias&&(d=ei(d,this.bias.read()));const[p,f,m,g]=mr(d,4,d.rank-1);l=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),c=ae(G(u,o),G(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=G(h,this.activation.apply(c));return[y,y,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tl(this.activation),recurrentActivation:tl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),recurrentInitializer:on(this.recurrentInitializer),biasInitializer:on(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pt(this.kernelRegularizer),recurrentRegularizer:Pt(this.recurrentRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:zn(this.kernelConstraint),recurrentConstraint:zn(this.recurrentConstraint),biasConstraint:zn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}kw.className="LSTMCell";pe(kw);class hz extends wl{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new kw(e),super(e)}call(e,t){return ee(()=>{this.cell.dropoutMask!=null&&(Ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}hz.className="LSTM";pe(hz);class PI extends Cw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ee(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){XS(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{Zl(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(Xi(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return YS(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}TI(t)}}PI.className="StackedRNNCells";pe(PI);function sl(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(e(),t):nM(e(),t),a=()=>jm(i,e,s);return!r||r<=1?Kn(a().clone()):Array(r).fill(void 0).map(a).map(u=>Kn(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var pge=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class dz extends wl{constructor(e){if(e.unroll)throw new rt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new rt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ln({ndim:5})]}call(e,t){return ee(()=>{if(this.cell.dropoutMask!=null&&(Ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new X("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ee(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=wn(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){ee(()=>{if(!this.stateful)throw new ci("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wn(o)):this.states_=[wn(o)];else if(e==null)Ve(this.states_),this.keptStates!=null&&(Ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wn(o)):this.states_[0]=wn(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ve(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],u=o;if(!ot(l.shape,u))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Kn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],h=Lo(u,r[0],o,i[0],a[0]),d=Lo(c,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}dz.className="ConvRNN2D";class FI extends kw{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Xn(this.filters,"filters"),this.kernelSize=Lc(s,2,"kernelSize"),this.kernelSize.forEach(l=>Xn(l,"kernelSize")),this.strides=Lc(r||1,2,"strides"),this.strides.forEach(l=>Xn(l,"strides")),this.padding=o||"valid",Wr(this.padding),this.dataFormat=i||"channelsLast",kn(this.dataFormat),this.dilationRate=Lc(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Xn(l,"dilationRate"))}build(e){var t;e=St(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new X(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;l=new(t=class extends yo{apply(d,p){const f=u.apply([c]),m=cr([c]),g=u.apply([c*2]);return wI([f,m,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ee(()=>{if(e.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=sl({ones:()=>Fr(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(Z,te,re)=>!te||!te[re]?Z:G(te[re],Z);let c=u(r,l,0),h=u(r,l,1),d=u(r,l,2),p=u(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=sl({ones:()=>Fr(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),g=u(o,f,1),y=u(o,f,2),x=u(o,f,3);const w=3,[b,S,C,k]=mr(this.kernel.read(),a,w),[N,_,E,D]=this.useBias?mr(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,b,N,this.padding),h=this.inputConv(h,S,_,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,k,D,this.padding);const[P,F,L,B]=mr(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,P),g=this.recurrentConv(g,F),y=this.recurrentConv(y,L),x=this.recurrentConv(x,B);const W=this.recurrentActivation.apply(ae(c,m)),Y=this.recurrentActivation.apply(ae(h,g)),z=ae(G(Y,i),G(W,this.activation.apply(ae(d,y)))),H=G(this.recurrentActivation.apply(ae(p,x)),this.activation.apply(z));return[H,H,z]})}getConfig(){const e=super.getConfig(),t=pge(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=Ya(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?ei(o,s,this.dataFormat):o}recurrentConv(e,t){return Ya(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}FI.className="ConvLSTM2DCell";pe(FI);class pz extends dz{constructor(e){const t=new FI(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}pz.className="ConvLSTM2D";pe(pz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LI extends ut{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return jm(()=>nM(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}LI.className="Dropout";pe(LI);class fz extends LI{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}fz.className="SpatialDropout1D";pe(fz);class mz extends ut{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Xn(this.units,"units"),this.activation=nl(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Vn(e.kernelConstraint),this.biasConstraint=Vn(e.biasConstraint),this.kernelRegularizer=Jt(e.kernelRegularizer),this.biasRegularizer=Jt(e.biasRegularizer),this.activityRegularizer=Jt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=St(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=St(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e),r=XL(this.activation.getClassName());let o;return r!=null?o=vi(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=vi(s,this.kernel.read()),this.bias!=null&&(o=ei(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:tl(this.activation),useBias:this.useBias,kernelInitializer:on(this.kernelInitializer),biasInitializer:on(this.biasInitializer),kernelRegularizer:Pt(this.kernelRegularizer),biasRegularizer:Pt(this.biasRegularizer),activityRegularizer:Pt(this.activityRegularizer),kernelConstraint:zn(this.kernelConstraint),biasConstraint:zn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}mz.className="Dense";pe(mz);class gz extends ut{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=St(e);for(const t of e.slice(1))if(t==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Va(e,1)]}call(e,t){return ee(()=>{this.invokeCallHook(e,t);let s=Ke(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=xt(s,r)}return qfe(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}gz.className="Flatten";pe(gz);class yz extends ut{constructor(e){super(e),this.supportsMasking=!0,this.activation=nl(e.activation)}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e);return this.activation.apply(s)})}getConfig(){const e={activation:tl(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}yz.className="Activation";pe(yz);class xz extends ut{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ee(()=>(e=Ke(e),Hfe(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}xz.className="RepeatVector";pe(xz);class wz extends ut{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const u=r[l];if(this.isUnknown(u))if(i===null)i=l;else throw new X("Can only specifiy one unknown dimension.");else o*=u}const a=Va(e);if(i!==null){if(o===0||a%o!==0)throw new X(s);r[i]=a/o}else if(a!==o)throw new X(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return K(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}wz.className="Reshape";pe(wz);class vz extends ut{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ho(1,e.dims.length+1);if(!ot(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ln({ndim:this.dims.length+1})]}computeOutputShape(e){e=St(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return xt(Ke(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}vz.className="Permute";pe(vz);class bz extends ut{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ke(e),r=-1;return h0(eh(s,this.maskValue),r)}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e),r=-1,o=!0,i=h0(eh(s,this.maskValue),r,o);return G(s,xe(i,s.dtype))})}}bz.className="Masking";pe(bz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sz extends ut{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Tt(e.inputLength))}this.inputDim=e.inputDim,Xn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Xn(this.outputDim,"outputDim"),this.embeddingsInitializer=Qt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Jt(e.embeddingsRegularizer),this.activityRegularizer=Jt(e.activityRegularizer),this.embeddingsConstraint=Vn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ee(()=>this.maskZero?(e=Ke(e),eh(e,wt(e))):null)}computeOutputShape(e){if(e=St(e),this.inputLength==null)return[...e,this.outputDim];const t=Tt(this.inputLength);if(t.length!==e.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return ee(()=>{this.invokeCallHook(e,t);let s=Ke(e);s.dtype!=="int32"&&(s=wi(s,"int32"));const r=tM(this.embeddings.read(),K(s,[s.size]));return K(r,St(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:on(this.embeddingsInitializer),embeddingsRegularizer:Pt(this.embeddingsRegularizer),activityRegularizer:Pt(this.activityRegularizer),embeddingsConstraint:zn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Sz.className="Embedding";pe(Sz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Uu extends ut{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new rt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[St(e)]),e=e,e.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=za(t),t.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&za(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ee(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=el(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=Gm(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const u=l.rank;if(u==null){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=K(l,[h].concat(Va(c.slice(1))));p=xt(p,[1,0]),p=K(p,d),s.push(p),o=!0}else if(u>1){const c=Ho(1,u).concat([0]);s.push(xt(l,c)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,u=l.length,c=l[u-1],h=[c].concat(l.slice(0,l.length-1));i=K(xt(K(i,[-1,c]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Ho(0,a-1));i=xt(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=za(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return ee(()=>{if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an Array");if(!Array.isArray(e))throw new X("`inputs` should be an Array");if(t.length!==e.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Tn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Si(s,t[r]);return s})}}class Cz extends Uu{constructor(e){super(e)}mergeFunction(e){return ee(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ae(t,e[s]);return t})}}Cz.className="Add";pe(Cz);class kz extends Uu{constructor(e){super(e)}mergeFunction(e){return ee(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=G(t,e[s]);return t})}}kz.className="Multiply";pe(kz);class Iz extends Uu{constructor(e){super(e)}mergeFunction(e){return ee(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ae(t,e[s]);return G(1/e.length,t)})}}Iz.className="Average";pe(Iz);class Nz extends Uu{constructor(e){super(e)}mergeFunction(e){return ee(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=la(t,e[s]);return t})}}Nz.className="Maximum";pe(Nz);class Tz extends Uu{constructor(e){super(e)}mergeFunction(e){return ee(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Za(t,e[s]);return t})}}Tz.className="Minimum";pe(Tz);class $z extends Uu{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(ot(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ee(()=>wI(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new X("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new X(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ee(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(xe(Fr(e[i]),"bool")):t[i].rank<e[i].rank?r.push(Tn(t[i],-1)):r.push(t[i]);const o=an(r,this.axis);return lk(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}$z.className="Concatenate";pe($z);function sp(n,e){for(;n<0;)n+=e;return n}function fge(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new rt("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),A(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new rt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return ee(()=>{let i;if(s>r){i=s-r;const l=[];for(let u=0;u<i;++u)l.push(1);e=K(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let u=0;u<i;++u)l.push(1);n=K(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=De(G(n,e),o[0]):a=De(G(xt(n,[1,0]),e),o[1]);else{const l=o[0]!==n.shape.length-1,u=o[1]===e.shape.length-1;a=dt(n,e,l,u)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const u=[];for(let c=l;c<l+i;++c)u.push(c);a=Ct(a,u)}return a.shape.length===1&&(a=Tn(a,1)),a})}class _z extends Uu{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new rt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new X(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>sp(o,e[i].shape.length)):r=[sp(this.axes,t.shape.length),sp(this.axes,s.shape.length)],this.normalize&&(t=I0(t,r[0]),s=I0(s,r[1])),fge(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[sp(this.axes,e.length),sp(this.axes,t.length)],s}computeOutputShape(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new rt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}_z.className="Dot";pe(_z);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ez extends ut{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e);return jm(()=>ae(yw(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}Ez.className="GaussianNoise";pe(Ez);class Rz extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ee(()=>{this.invokeCallHook(e,t);const s=Ke(e);return this.rate>0&&this.rate<1?jm(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return G(s,yw(s.shape,1,o))},()=>s,t.training||!1):s})}}Rz.className="GaussianDropout";pe(Rz);class Az extends ut{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ke(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ee(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return jm(()=>{const o=Ke(e),i=1.6732632423543772,a=1.0507009873554805,l=-i*a;let u=ml(Pu(s),this.rate);u=wi(u,"float32");const c=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-c*l*this.rate,d=ae(G(o,u),G(ae(u,-1),l));return ae(G(d,c),h)},()=>Ke(e),t.training||!1)}return e})}}Az.className="AlphaDropout";pe(Az);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cf(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=pO(n,e,t,s,r,o);else if(n.rank===3)i=fO(n,e,t,s,r,o);else if(n.rank===4)i=mO(n,e,t,s,r,o);else throw new rt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function mge(n,e,t,s,r=.001){return ee(()=>{const o=$1(n,s),i=o.mean,a=o.variance;return[cf(n,i,a,t,e,r),i,a]})}function gge(n,e,t,s,r=.001){return ee(()=>{const o=$1(n,s),i=o.mean,a=o.variance,l=[];for(const f of Ho(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const u=K(i,l),c=K(a,l),h=e==null?null:K(e,l),d=t==null?null:K(t,l);return[cf(n,u,c,d,h,r),i,a]})}function yge(n,e,t,s,r=.001){return ot(s.slice().sort(),Ho(0,n.rank-1))?mge(n,e,t,s,r):gge(n,e,t,s,r)}class Dz extends ut{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Qt(e.betaInitializer||"zeros"),this.gammaInitializer=Qt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Qt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Vn(e.betaConstraint),this.gammaConstraint=Vn(e.gammaConstraint),this.betaRegularizer=Jt(e.betaRegularizer),this.gammaRegularizer=Jt(e.gammaRegularizer)}build(e){e=St(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new X(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ln({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ee(()=>{const s=t.training==null?!1:t.training,r=Ke(e),o=r.shape,i=o.length,a=Ho(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const u=bu(1,i);u[l]=o[l];const c=a.slice();c.sort();const h=!ot(c,Ho(0,i).slice(0,i-1)),d=()=>{if(h){const x=K(this.movingMean.read(),u),w=K(this.movingVariance.read(),u),b=this.center?K(this.beta.read(),u):null,S=this.scale?K(this.gamma.read(),u):null;return cf(r,x,w,b,S,this.epsilon)}else return cf(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=yge(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(x,w,b)=>{ee(()=>{const S=1-b,C=x.read(),k=G(Te(C,w),S);x.write(Te(C,k))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:on(this.betaInitializer),gammaInitializer:on(this.gammaInitializer),movingMeanInitializer:on(this.movingMeanInitializer),movingVarianceInitializer:on(this.movingVarianceInitializer),betaRegularizer:Pt(this.betaRegularizer),gammaRegularizer:Pt(this.gammaRegularizer),betaConstraint:zn(this.betaConstraint),gammaConstraint:zn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Dz.className="BatchNormalization";pe(Dz);class Oz extends ut{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Qt(e.betaInitializer||"zeros"),this.gammaInitializer=Qt(e.gammaInitializer||"ones"),this.betaRegularizer=Jt(e.betaRegularizer),this.gammaRegularizer=Jt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=St(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==za(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ke(e),r=s.shape,o=r.length;return ee(()=>{let{mean:a,variance:l}=$1(s,this.axis,!0);const u=bu(1,o);for(const m of this.axis)u[m]=r[m];const c=m=>m!=null&&m.shape.length!==o?K(m,u):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=no(a,p),l=no(l,p),h!=null&&(h=no(h,f)),d!=null&&(d=no(d,f)),cf(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:on(this.betaInitializer),gammaInitializer:on(this.gammaInitializer),betaRegularizer:Pt(this.betaRegularizer),gammaRegularizer:Pt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Oz.className="LayerNormalization";pe(Oz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xge(n,e,t){return ee(()=>{if(n.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=jo()),t!=="channelsLast"&&t!=="channelsFirst")throw new X(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Wo(n,s)})}class Pz extends ut{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?jo():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Ln({ndim:4})]}computeOutputShape(e){e=St(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return ee(()=>xge(Ke(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Pz.className="ZeroPadding2D";pe(Pz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Iw(n,e,t,s,r,o){return ee(()=>{kn(r),QL(o),Wr(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=jo()),o==null&&(o="max"),n=AI(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=T1(n,e,t,a):i=w1(n,e,t,a),r==="channelsFirst"&&(i=xt(i,[0,3,1,2])),i})}function Fz(n,e,t,s,r,o){return ee(()=>{kn(r),QL(o),Wr(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=jo()),o==null&&(o="max"),n=JM(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=zO(n,e,t,a):i=dO(n,e,t,a),r==="channelsFirst"&&(i=xt(i,[0,4,1,2,3])),i})}class Lz extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Xn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Wr(this.padding),this.inputSpec=[new Ln({ndim:3})]}computeOutputShape(e){e=St(e);const t=Lo(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ee(()=>{this.invokeCallHook(e,t),e=Gm(Ke(e),2);const s=this.poolingFunction(Ke(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ct(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Mz extends Lz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Iw(e,t,s,r,o,"max")}}Mz.className="MaxPooling1D";pe(Mz);class zz extends Lz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Iw(e,t,s,r,o,"avg")}}zz.className="AveragePooling1D";pe(zz);class Vz extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Xn(this.poolSize,"poolSize"),Xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kn(this.dataFormat),Wr(this.padding),this.inputSpec=[new Ln({ndim:4})]}computeOutputShape(e){e=St(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Lo(t,this.poolSize[0],this.padding,this.strides[0]),s=Lo(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return ee(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ke(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bz extends Vz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Iw(e,t,s,r,o,"max")}}Bz.className="MaxPooling2D";pe(Bz);class Wz extends Vz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Iw(e,t,s,r,o,"avg")}}Wz.className="AveragePooling2D";pe(Wz);class Uz extends ut{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Xn(this.poolSize,"poolSize"),Xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kn(this.dataFormat),Wr(this.padding),this.inputSpec=[new Ln({ndim:5})]}computeOutputShape(e){e=St(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Lo(t,this.poolSize[0],this.padding,this.strides[0]),s=Lo(s,this.poolSize[1],this.padding,this.strides[1]),r=Lo(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return ee(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ke(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gz extends Uz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Fz(e,t,s,r,o,"max")}}Gz.className="MaxPooling3D";pe(Gz);class Hz extends Uz{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return kn(o),Wr(r),Fz(e,t,s,r,o,"avg")}}Hz.className="AveragePooling3D";pe(Hz);class jz extends ut{constructor(e){super(e),this.inputSpec=[new Ln({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new rt}}class qz extends jz{constructor(e){super(e||{})}call(e,t){return ee(()=>{const s=Ke(e);return hn(s,1)})}}qz.className="GlobalAveragePooling1D";pe(qz);class Kz extends jz{constructor(e){super(e||{})}call(e,t){return ee(()=>{const s=Ke(e);return uo(s,1)})}}Kz.className="GlobalMaxPooling1D";pe(Kz);class Xz extends ut{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,kn(this.dataFormat),this.inputSpec=[new Ln({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new rt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Yz extends Xz{call(e,t){return ee(()=>{const s=Ke(e);return this.dataFormat==="channelsLast"?hn(s,[1,2]):hn(s,[2,3])})}}Yz.className="GlobalAveragePooling2D";pe(Yz);class Qz extends Xz{call(e,t){return ee(()=>{const s=Ke(e);return this.dataFormat==="channelsLast"?uo(s,[1,2]):uo(s,[2,3])})}}Qz.className="GlobalMaxPooling2D";pe(Qz);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zz extends ut{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=Xi(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class Jz extends Zz{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=St(e),e.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=St(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return ee(()=>(e=Ke(e),lz((i,a)=>[Ke(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Jz.className="TimeDistributed";pe(Jz);function wge(n){Wu(Vfe,"BidirectionalMergeMode",n)}const vge="concat";class eV extends Zz{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=Xi(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Xi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?vge:e.mergeMode,wge(this.mergeMode),e.weights)throw new rt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):Vs(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=az(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const u=s.length;if(u%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const c=s.map(h=>new Ln({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(r!=null)throw new rt("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Ni;for(const u of i)if(u instanceof Ni!==l)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(i),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(u,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ee(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=mo(o,1));let a;return this.mergeMode==="concat"?a=wI([r,o]):this.mergeMode==="sum"?a=ae(r,o):this.mergeMode==="ave"?a=G(.5,ae(r,o)):this.mergeMode==="mul"?a=G(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Zl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=Xi(t.layer);if(delete t.layer,t.numConstants!=null)throw new rt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}eV.className="Bidirectional";pe(eV);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tV extends ut{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ee(()=>(e=Ke(e),e.dtype!=="float32"&&(e=wi(e,"float32")),ae(G(e,this.scale),this.offset)))}}tV.className="Rescaling";pe(tV);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:bge,cropAndResize:Sge}=ds;class nV extends ut{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,l){return ee(()=>{let u,c=!1;const h=t/i,d=s/a,p=(r+t)/i,f=(o+s)/a,m=[h,d,p,f],g=[];e.rank===3?(c=!0,u=yr([e])):u=e;for(let S=0;S<u.shape[0];S++)g.push(m);const y=Fo(g,[g.length,4]),x=th(0,g.length,1,"int32"),b=Sge(u,y,x,[r,o],"nearest");return wi(c?Ke(go(b)):b,l)})}upsize(e,t,s,r){return ee(()=>{const o=bge(e,[t,s]);return wi(o,r)})}call(e,t){return ee(()=>{const s=Ke(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(s,l,u,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=St(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}nV.className="CenterCrop";pe(nV);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cge(n,e,t,s){let r=Ke(n);if(r.dtype!=="int32"&&(r=wi(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=Tn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Tn(r,-1)),r.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=CS(a,s,t,i):l=CS(a,[],t,i),e!=="tfIdf")return l;if(s)return G(l,s);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sV extends ut{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=St(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ee(()=>{e=Ke(e),e.dtype!=="int32"&&(e=wi(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ke(t.countWeights)}const r=uo(e),o=Zp(e),i=Cr(this.numTokens,r).bufferSync().get(0),a=ml(o,0).bufferSync().get(0);if(!(i&&a))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return Cge(e,this.outputMode,this.numTokens,s)})}}sV.className="CategoryEncoding";pe(sV);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kge=["bilinear","nearest"],mE=new Set(kge);class rV extends ut{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(mE.has(e.interpolation))this.interpolation=e.interpolation;else throw new X(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=St(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ee(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return ds.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return ds.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...mE]} are supported`)})}}rV.className="Resizing";pe(rV);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class oV{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}oV.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class iV extends ut{constructor(e){super(e),this.randomGenerator=new oV(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}iV.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ige=["bilinear","nearest"],gE=new Set(Ige);class aV extends iV{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new X(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new X(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new X(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(gE.has(s))this.interpolation=s;else throw new X(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=St(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return ee(()=>{const s=Ke(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=Pu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return ds.resizeBilinear(e,i);case"nearest":return ds.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...gE]} are supported`)}})}}aV.className="RandomWidth";pe(aV);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var yE;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(yE||(yE={}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nge=Gk;class Nw extends wx{nextDataId(){return Nw.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V2(this,ks())}write(e,t,s){this.firstUse&&(this.firstUse=!1,ne().get("IS_NODE")&&Nr(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Sh(s[0])){const o=s.map(i=>ji(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Uo(r,o)}return dy(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Vo(r));return Ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ze(e.shape,e.dtype,t)}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ms();return e(),{kernelMs:Ms()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Oe([e],"where");const t=this.readSync(e.dataId);return Nge(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Nw.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */rk("cpu",()=>new Nw,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV=$t(Lh,n=>n>=0?n:Math.exp(n)-1),Tge={kernelName:Lh,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;Oe([r],"leakyRelu");const i=J(r.shape),a=t.data.get(r.dataId).values,l=Bn("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?o*a[u]:a[u];return t.makeTensorInfo(r.shape,"float32",l)}const $ge={kernelName:Zf,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ge=Cn((n,e)=>n<0?e*n:n);function cV(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Oe([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,l]=_ge(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(l,"float32",a)}const Ege={kernelName:ym,backendName:"cpu",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hV=$t(nd,n=>Math.max(0,n)),Rge={kernelName:nd,backendName:"cpu",kernelFunc:hV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV=$t(sd,n=>Math.min(Math.max(0,n),6)),Age={kernelName:sd,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(n,e,t,s,r){if(t==="linear")return Ci({inputs:{x:e},backend:n});if(t==="relu")return hV({inputs:{x:e},backend:n});if(t==="elu")return lV({inputs:{x:e},backend:n});if(t==="relu6")return dV({inputs:{x:e},backend:n});if(t==="prelu")return cV({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return uV({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return UF({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=J(r.shape),a=W2(o,i),l=J(a);A(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Dge={kernelName:wm,backendName:"cpu",kernelFunc:Mt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;Oe([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=a?o.shape[u-1]:o.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],p=a?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=J(f),y=J(m),w=Ue(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);A(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const b=i?[g,c,d]:[g,d,c],S=a?[y,p,h]:[y,h,p],C=Mt({inputs:{x:r},backend:t,attrs:{shape:b}}),k=Mt({inputs:{x:o},backend:t,attrs:{shape:S}}),N=i?C.shape[1]:C.shape[2],_=i?C.shape[2]:C.shape[1],E=a?k.shape[1]:k.shape[2],D=Math.max(g,y),P=t.data.get(C.dataId).values,F=t.data.get(k.dataId).values,L=Le(C.shape),B=Le(k.shape),[W,Y,z]=i?[L[0],1,L[1]]:[L[0],L[1],1],[H,Z,te]=a?[1,B[1],B[0]]:[B[1],1,B[0]],re=_*E,le=Ze([D,_,E],C.dtype),he=le.values,ie=t.blockSize;for(let de=0;de<D;de++){const be=de%g,ce=de%y;for(let Pe=0;Pe<_;Pe+=ie){const Be=Math.min(Pe+ie,_);for(let We=0;We<E;We+=ie){const ct=Math.min(We+ie,E);for(let Xe=0;Xe<N;Xe+=ie){const lt=Math.min(Xe+ie,N);for(let fe=Pe;fe<Be;fe++)for(let Ie=We;Ie<ct;Ie++){let Je=0;for(let Ge=Xe;Ge<lt;Ge++){const nt=P[be*W+fe*Y+Ge*z],st=F[Ge*H+Ie*Z+ce*te];Je+=nt*st}he[de*re+(fe*E+Ie)]+=Je}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo(k),t.makeTensorInfo(w,le.dtype,le.values)}const Oge={kernelName:Lf,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pge(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=pV({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:t}),i&&(p=rh({inputs:{a:d,b:i},backend:t}),m.push(d),d=p),c&&(f=E0(t,d,c,a,h),m.push(d),d=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return d}const Fge={kernelName:qp,backendName:"cpu",kernelFunc:Pge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lge=$t(kh,n=>Math.acos(n)),Mge={kernelName:kh,backendName:"cpu",kernelFunc:Lge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zge=$t(Ih,n=>Math.acosh(n)),Vge={kernelName:Ih,backendName:"cpu",kernelFunc:zge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bge(n){const{inputs:e,backend:t}=n,s=e;Oe(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=Ze(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const Wge={kernelName:Af,backendName:"cpu",kernelFunc:Bge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Oe(r,"all");const a=et(o,r.shape);let l=a;const u=At(l,r.shape.length);let c=r;u!=null&&(c=Ks({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Vt(l.length,r.shape.length)),En("all",l,c.shape.length);const[h,d]=Sn(c.shape,l),p=J(d),f=os(J(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let w=m[x];for(let b=0;b<p;++b){const S=m[x+b];w=w&&S}f[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=gn(h,a),x=Mt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}const Gge={kernelName:vx,backendName:"cpu",kernelFunc:Uge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Oe(r,"any");const a=et(o,r.shape);let l=a;const u=At(l,r.shape.length);let c=r;u!=null&&(c=Ks({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Vt(l.length,r.shape.length)),En("any",l,c.shape.length);const[h,d]=Sn(c.shape,l),p=J(d),f=os(J(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let w=m[x];for(let b=0;b<p;++b){const S=m[x+b];w=w||S}f[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=gn(h,a),x=Mt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}const jge={kernelName:bx,backendName:"cpu",kernelFunc:Hge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Oe(r,"argMax");let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Ks({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),i=[i[0]],En("argMax",i,l.shape.length);const[c,h]=Sn(l.shape,i),d=J(c),p=os(d,"int32"),f=J(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let x=m[y],w=0;for(let b=0;b<f;++b){const S=m[y+b];S>x&&(x=S,w=b)}p[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const Kge={kernelName:Df,backendName:"cpu",kernelFunc:qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Oe(r,"argMin");let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=Ks({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),i=[i[0]],En("argMin",i,l.shape.length);const[c,h]=Sn(l.shape,i),d=J(c),p=os(d,"int32"),f=J(h),m=t.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let x=m[y],w=0;for(let b=0;b<f;++b){const S=m[y+b];S<x&&(x=S,w=b)}p[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",p)}const Yge={kernelName:Of,backendName:"cpu",kernelFunc:Xge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qge=$t(Nh,n=>Math.asin(n)),Zge={kernelName:Nh,backendName:"cpu",kernelFunc:Qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jge=$t(Th,n=>Math.asinh(n)),eye={kernelName:Th,backendName:"cpu",kernelFunc:Jge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tye=$t($h,n=>Math.atan(n)),nye={kernelName:$h,backendName:"cpu",kernelFunc:tye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sye=Cn((n,e)=>Math.atan2(n,e)),rye=Gn(Eh,sye),oye={kernelName:Eh,backendName:"cpu",kernelFunc:rye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iye=$t(_h,n=>Math.atanh(n)),aye={kernelName:_h,backendName:"cpu",kernelFunc:iye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ze(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let b=0;b<r.batchSize;++b){const S=b*y,C=b*s[0];for(let k=0;k<r.inChannels;++k)for(let N=0;N<r.outHeight;++N){const _=N*i-d,E=Math.max(0,_),D=Math.min(r.inHeight,c+_),P=S+N*x;for(let F=0;F<r.outWidth;++F){const L=F*a-p,B=Math.max(0,L),W=Math.min(r.inWidth,h+L);let Y=f,z=0,H=0;for(let te=E;te<D;te+=l){const re=C+te*s[1];for(let le=B;le<W;le+=u){const he=re+le*s[2],ie=n[he+k];o==="max"&&ie>Y?Y=ie:o==="avg"&&(z+=ie,H++)}if(isNaN(Y))break}const Z=P+F*w+k;g[Z]=o==="avg"?z/H:Y}}}return m}function fV(n,e,t,s,r=!1,o=!1){const i=Ze(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ze(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const w=x*a-p;let b=w;for(;b<0;)b+=u;const S=Math.min(s.inHeight,h+w);for(let C=0;C<s.outWidth;++C){const k=C*l-f;let N=k;for(;N<0;)N+=c;const _=Math.min(s.inWidth,d+k);let E=Number.NEGATIVE_INFINITY,D=-1;for(let P=b;P<S;P+=u){const F=P-w;for(let L=N;L<_;L+=c){const B=L-k,W=m.get(g,P,L,y);W>E&&(E=W,r?D=o?((g*s.inHeight+P)*s.inWidth+L)*s.inChannels+y:(P*s.inWidth+L)*s.inChannels+y:D=F*d+B)}}i.set(D,g,x,C,y)}}return i}function mV(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ze(r.outShape,t),b=w.values,S=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let _=0;_<r.batchSize;++_){const E=_*S,D=_*s[0];for(let P=0;P<r.inChannels;++P)for(let F=0;F<r.outDepth;++F){const L=F*i-m;let B=L;for(;B<0;)B+=u;const W=Math.min(r.inDepth,d+L),Y=E+F*C;for(let z=0;z<r.outHeight;++z){const H=z*a-g;let Z=H;for(;Z<0;)Z+=c;const te=Math.min(r.inHeight,p+H),re=Y+z*k;for(let le=0;le<r.outWidth;++le){const he=le*l-y;let ie=he;for(;ie<0;)ie+=h;const de=Math.min(r.inWidth,f+he),be=re+le*N;let ce=x,Pe=0,Be=0;for(let ct=B;ct<W;ct+=u){const Xe=D+ct*s[1];for(let lt=Z;lt<te;lt+=c){const fe=Xe+lt*s[2];for(let Ie=ie;Ie<de;Ie+=h){const Je=fe+Ie*s[3],Ge=n[Je+P];if(o==="max"&&Ge>ce?ce=Ge:o==="avg"&&(Pe+=Ge,Be++),isNaN(ce))break}if(isNaN(ce))break}if(isNaN(ce))break}const We=be+P;b[We]=o==="avg"?Pe/Math.max(Be,1):ce}}}}return w}function lye(n,e){const t=Ze(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const x=y*s-d;let w=x;for(;w<0;)w+=i;const b=Math.min(e.inDepth,u+x);for(let S=0;S<e.outHeight;++S){const C=S*r-p;let k=C;for(;k<0;)k+=a;const N=Math.min(e.inHeight,c+C);for(let _=0;_<e.outWidth;++_){const E=_*o-f;let D=E;for(;D<0;)D+=l;const P=Math.min(e.inWidth,h+E);let F=Number.NEGATIVE_INFINITY,L=-1;for(let B=w;B<b;B+=i){const W=B-x;for(let Y=k;Y<N;Y+=a){const z=Y-C;for(let H=D;H<P;H+=l){const Z=H-E,te=n.get(m,B,Y,H,g);te>=F&&(F=te,L=W*c*h+z*c+Z)}}}t.set(L,m,y,S,_,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Oe(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;A(Un(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ys(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&ot(c.inShape,c.outShape))h=Ci({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Le(r.shape),f=MI(d,r.shape,r.dtype,p,c,"avg");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const cye={kernelName:Pf,backendName:"cpu",kernelFunc:uye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Oe(r,"avgPool3d");const c=Vr(r.shape,o,i,1,a,l,u),h=t.data.get(r.dataId).values,d=mV(h,r.shape,r.dtype,Le(r.shape),c,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const dye={kernelName:Ff,backendName:"cpu",kernelFunc:hye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pye(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Oe([r,o],"avgPool3DGrad");const c=Vr(o.shape,i,a,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,b=c.effectiveFilterDepth,S=c.effectiveFilterHeight,C=c.effectiveFilterWidth,k=b-1-c.padInfo.front,N=C-1-c.padInfo.left,_=S-1-c.padInfo.top,E=Ze(o.shape,"float32"),D=1/(f*m*g),P=t.bufferSync(r);for(let F=0;F<c.batchSize;++F)for(let L=0;L<c.inChannels;++L)for(let B=0;B<c.inDepth;++B)for(let W=0;W<c.inHeight;++W)for(let Y=0;Y<c.inWidth;++Y){const z=B-k,H=W-_,Z=Y-N;let te=0;for(let re=0;re<b;re+=y){const le=(z+re)/h;if(!(le<0||le>=c.outDepth||Math.floor(le)!==le))for(let he=0;he<S;he+=x){const ie=(H+he)/d;if(!(ie<0||ie>=c.outHeight||Math.floor(ie)!==ie))for(let de=0;de<C;de+=w){const be=(Z+de)/p;if(be<0||be>=c.outWidth||Math.floor(be)!==be)continue;const ce=P.get(F,le,ie,be,L);te+=ce}}}E.set(te*D,F,B,W,Y,L)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const fye={kernelName:Cx,backendName:"cpu",kernelFunc:pye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mye(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Oe([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ys(i.shape,a,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,b=y-1-c.padInfo.top,S=Ze(i.shape,"float32"),C=1/(p*f),k=t.data.get(r.dataId).values,N=Ze(r.shape,"float32",k);for(let _=0;_<c.batchSize;++_)for(let E=0;E<c.inChannels;++E)for(let D=0;D<c.inHeight;++D)for(let P=0;P<c.inWidth;++P){const F=D-b,L=P-w;let B=0;for(let W=0;W<y;W+=m){const Y=(F+W)/h;if(!(Y<0||Y>=c.outHeight||Math.floor(Y)!==Y))for(let z=0;z<x;z+=g){const H=(L+z)/d;if(H<0||H>=c.outWidth||Math.floor(H)!==H)continue;const Z=N.get(_,Y,H,E);B+=Z}}S.set(B*C,_,D,P,E)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const gye={kernelName:Sx,backendName:"cpu",kernelFunc:mye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=e;A(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Oe([r,a,l,o,i],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const c=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,x=d.length,w=h.length;let b=0,S=0,C=0,k=0;for(let N=0;N<c.length;++N)m[N]=f[b++]+(c[N]-h[S++])*p[C++]/Math.sqrt(d[k++]+u),b>=g&&(b=0),S>=w&&(S=0),C>=y&&(C=0),k>=x&&(k=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const xye={kernelName:Xf,backendName:"cpu",kernelFunc:yye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;Oe([r],"batchToSpaceND");const a=o.reduce((y,x)=>y*x),l=Fu(r.shape,o,a),u=Lu(l.length,o.length),c=Mu(r.shape,o,a),h=Y1(i,o.length),d=Q1(c,i,o.length),p=Mt({inputs:{x:r},backend:t,attrs:{shape:l}}),f=Ks({inputs:{x:p},backend:t,attrs:{perm:u}}),m=Mt({inputs:{x:f},backend:t,attrs:{shape:c}}),g=vu({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const vye={kernelName:Mf,backendName:"cpu",kernelFunc:wye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=lI(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const Sye={kernelName:kx,backendName:"cpu",kernelFunc:bye};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cye(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Ue(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const kye={kernelName:Nx,backendName:"cpu",kernelFunc:Cye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iye=$t(Dh,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),Nye={kernelName:Dh,backendName:"cpu",kernelFunc:Iye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tye=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(J(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values;for(let u=0;u<a.length;u++){const c=a[u],h=l[u];s[u]=Math.hypot(c,h)}return t.makeOutput(s,e.shape,"float32")},$ye={kernelName:zf,backendName:"cpu",kernelFunc:Tye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ah(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const _ye={kernelName:Hx,backendName:"cpu",kernelFunc:ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lh(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=et(r,e[0].shape)[0],i=e.map(m=>m.shape);q1(i,o);let a=Gs(e.map(m=>m.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(m=>J(m.shape)>0);if(l.length===1)return Ci({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const m=l.map(b=>wu({inputs:{input:b},backend:t})),g=l.map(b=>ah({inputs:{input:b},backend:t})),y=lh({inputs:m,backend:t,attrs:{axis:o}}),x=lh({inputs:g,backend:t,attrs:{axis:o}}),w=ar({inputs:{real:y,imag:x},backend:t});return m.forEach(b=>t.disposeIntermediateTensorInfo(b)),g.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),w}const u=l.map(m=>{const y=[-1,J(m.shape.slice(o))];return Mt({inputs:{x:m},backend:t,attrs:{shape:y}})}),c=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=Gs(u.map(m=>m.shape),1);const h=u[0].shape[0]===1,d=gF(c,a,e[0].dtype,h),p=Gs(l.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Eye={kernelName:Vf,backendName:"cpu",kernelFunc:lh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Oe([r,o],"conv2d");const h=Sr(l),d=zt(r.shape,o.shape,i,u,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,w=d.dataFormat==="channelsLast",b=new Mn(d.outShape,r.dtype),S=Le(r.shape),C=Le(o.shape),k=S[0],N=w?S[1]:S[2],_=w?S[2]:1,E=w?1:S[1],D=b.strides[0],P=w?b.strides[1]:b.strides[2],F=w?b.strides[2]:1,L=w?1:b.strides[1],B=t.data.get(r.dataId).values,W=t.data.get(o.dataId).values,Y=b.values;for(let z=0;z<d.batchSize;++z){const H=z*k,Z=z*D;for(let te=0;te<d.outHeight;++te){const re=Z+te*P,le=te*d.strideHeight-x;for(let he=0;he<p;++he){const ie=le+he*m;if(ie<0||ie>=d.inHeight)continue;const de=he*C[0],be=H+ie*N;for(let ce=0;ce<d.outWidth;++ce){const Pe=re+ce*F,Be=ce*d.strideWidth-y;for(let We=0;We<f;++We){const ct=Be+We*g;if(ct<0||ct>=d.inWidth)continue;const Xe=de+We*C[1],lt=be+ct*_;let fe=Xe;for(let Ie=0;Ie<d.inChannels;++Ie){const Je=B[lt+Ie*E];for(let Ge=0;Ge<d.outChannels;++Ge)Y[Pe+Ge*L]+=Je*W[fe+Ge];fe+=d.outChannels}}}}}}return t.makeTensorInfo(b.shape,b.dtype,Y)}const Rye={kernelName:Bf,backendName:"cpu",kernelFunc:gV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Oe([r,o],"conv2dBackpropFilter");const h=Sr(l),d=zt(r.shape,c,i,1,a,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new Mn(d.filterShape,"float32"),w=d.padInfo.left,b=d.padInfo.top,S=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,k=new Mn(r.shape,r.dtype,S),N=new Mn(o.shape,o.dtype,C);for(let _=0;_<m;++_){const E=Math.max(0,Math.ceil((b-_)/p)),D=Math.min(d.outHeight,(d.inHeight+b-_)/p);for(let P=0;P<g;++P){const F=Math.max(0,Math.ceil((w-P)/f)),L=Math.min(d.outWidth,(d.inWidth+w-P)/f);for(let B=0;B<d.inChannels;++B)for(let W=0;W<d.outChannels;++W){let Y=0;for(let z=0;z<d.batchSize;++z)for(let H=E;H<D;++H){const Z=_+H*p-b;for(let te=F;te<L;++te){const re=P+te*f-w;y?Y+=k.get(z,Z,re,B)*N.get(z,H,te,W):Y+=k.get(z,B,Z,re)*N.get(z,W,H,te)}}x.set(Y,_,P,B,W)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const Dye={kernelName:$x,backendName:"cpu",kernelFunc:Aye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oye(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s;Oe([r,o],"conv2dBackpropInput");const h=Le(o.shape),d=Le(r.shape);let p=Sr(u);const f=zt(i,o.shape,a,1,l,c,!1,p),m=new Mn(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,x=t.data.get(o.dataId).values,[w,b,S]=h,{batchSize:C,filterHeight:k,filterWidth:N,inChannels:_,inHeight:E,inWidth:D,outChannels:P,outHeight:F,outWidth:L,strideHeight:B,strideWidth:W}=f;p=f.dataFormat;const Y=k-1-f.padInfo.top,z=N-1-f.padInfo.left,H=p==="channelsLast",Z=m.strides[0],te=H?m.strides[1]:m.strides[2],re=H?m.strides[2]:1,le=H?1:m.strides[1],he=d[0],ie=H?d[1]:d[2],de=H?d[2]:1,be=H?1:d[1];for(let ce=0;ce<C;++ce)for(let Pe=0;Pe<_;++Pe)for(let Be=0;Be<E;++Be){const We=Be-Y,ct=Math.max(0,Math.ceil(We/B)),Xe=Math.min(F,(k+We)/B);for(let lt=0;lt<D;++lt){const fe=lt-z,Ie=Math.max(0,Math.ceil(fe/W)),Je=Math.min(L,(N+fe)/W);let Ge=0;for(let st=ct;st<Xe;++st){const en=st*B-We;for(let Bt=Ie;Bt<Je;++Bt){const vs=Bt*W-fe,ln=he*ce+ie*st+de*Bt,Js=w*(k-1-en)+b*(N-1-vs)+S*Pe;for(let Fs=0;Fs<P;++Fs){const Ur=y[ln+be*Fs],ti=x[Js+Fs];Ge+=Ur*ti}}}const nt=Z*ce+te*Be+re*lt+le*Pe;g[nt]=Ge}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const Pye={kernelName:Wf,backendName:"cpu",kernelFunc:Oye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;Oe([r,o],"conv3d");const u=Jo(r.shape,o.shape,i,l,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,w=g.top,b=new Mn(u.outShape,r.dtype),S=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,k=b.values,N=Le(r.shape),_=Le(o.shape);for(let E=0;E<u.batchSize;++E){const D=E*N[0],P=E*b.strides[0];for(let F=0;F<u.outDepth;++F){const L=P+F*b.strides[1],B=F*u.strideDepth-y;for(let W=0;W<c;++W){const Y=B+W*p;if(Y<0||Y>=u.inDepth)continue;const z=W*_[0],H=D+Y*N[1];for(let Z=0;Z<u.outHeight;++Z){const te=L+Z*b.strides[2],re=Z*u.strideHeight-w;for(let le=0;le<h;++le){const he=re+le*f;if(he<0||he>=u.inHeight)continue;const ie=z+le*_[1],de=H+he*N[2];for(let be=0;be<u.outWidth;++be){const ce=te+be*u.outChannels,Pe=be*u.strideWidth-x;for(let Be=0;Be<d;++Be){const We=Pe+Be*m;if(We<0||We>=u.inWidth)continue;const ct=ie+Be*_[2],Xe=de+We*u.inChannels;let lt=ct;for(let fe=0;fe<u.inChannels;++fe){const Ie=S[Xe+fe];for(let Je=0;Je<u.outChannels;++Je)k[ce+Je]+=Ie*C[lt+Je];lt+=u.outChannels}}}}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const Lye={kernelName:Uf,backendName:"cpu",kernelFunc:Fye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;Oe([r,o],"conv3dBackpropFilterV2");const u=Le(r.shape),c=Le(o.shape),h=Jo(r.shape,l,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new Mn(h.filterShape,"float32"),w=x.values,[b,S,C,k]=x.strides,N=t.data.get(o.dataId).values,[_,E,D,P]=c,F=t.data.get(r.dataId).values,[L,B,W,Y]=u,z=h.padInfo.front,H=h.padInfo.left,Z=h.padInfo.top;for(let te=0;te<m;++te){const re=Math.max(0,Math.ceil((z-te)/d)),le=Math.min(h.outDepth,(h.inDepth+z-te)/d),he=te*b;for(let ie=0;ie<g;++ie){const de=Math.max(0,Math.ceil((Z-ie)/p)),be=Math.min(h.outHeight,(h.inHeight+Z-ie)/p),ce=ie*S+he;for(let Pe=0;Pe<y;++Pe){const Be=Math.max(0,Math.ceil((H-Pe)/f)),We=Math.min(h.outWidth,(h.inWidth+H-Pe)/f),ct=Pe*C+ce;for(let Xe=0;Xe<h.inChannels;++Xe){const lt=Xe*k+ct;for(let fe=0;fe<h.outChannels;++fe){let Ie=0;for(let Je=0;Je<h.batchSize;++Je){const Ge=Je*L,nt=Je*_;for(let st=re;st<le;++st){const Bt=(te+st*d-z)*B+Ge,vs=st*E+nt;for(let ln=de;ln<be;++ln){const Fs=(ie+ln*p-Z)*W+Bt,Ur=ln*D+vs;for(let ti=Be;ti<We;++ti){const Fd=(Pe+ti*f-H)*Y+Fs,Ku=ti*P+Ur;Ie+=F[Fd+Xe]*N[Ku+fe]}}}}w[lt+fe]=Ie}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const zye={kernelName:_x,backendName:"cpu",kernelFunc:Mye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vye(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;Oe([r],"conv3dBackpropInputV2");const u=Le(r.shape),c=Le(o.shape),h=Jo(l,o.shape,a,1,i),d=new Mn(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,x=t.data.get(r.dataId).values,[w,b,S,C]=u,k=t.data.get(o.dataId).values,[N,_,E,D]=c,{batchSize:P,filterDepth:F,filterHeight:L,filterWidth:B,inChannels:W,inDepth:Y,inHeight:z,inWidth:H,outChannels:Z,outDepth:te,outHeight:re,outWidth:le,strideDepth:he,strideHeight:ie,strideWidth:de}=h,be=F-1-h.padInfo.front,ce=L-1-h.padInfo.top,Pe=B-1-h.padInfo.left;for(let Be=0;Be<P;++Be)for(let We=0;We<W;++We)for(let ct=0;ct<Y;++ct){const Xe=ct-be,lt=Math.max(0,Math.ceil(Xe/he)),fe=Math.min(te,(F+Xe)/he);for(let Ie=0;Ie<z;++Ie){const Je=Ie-ce,Ge=Math.max(0,Math.ceil(Je/ie)),nt=Math.min(re,(L+Je)/ie);for(let st=0;st<H;++st){const en=st-Pe,Bt=Math.max(0,Math.ceil(en/de)),vs=Math.min(le,(B+en)/de);let ln=0;for(let Js=lt;Js<fe;++Js){const Fs=Js*he-Xe;for(let Ur=Ge;Ur<nt;++Ur){const ti=Ur*ie-Je;for(let da=Bt;da<vs;++da){const Fd=da*de-en,Ku=w*Be+b*Js+S*Ur+C*da,sg=N*(F-1-Fs)+_*(L-1-ti)+E*(B-1-Fd)+D*We;for(let ni=0;ni<Z;++ni){const Ld=x[Ku+ni],rg=k[sg+ni];ln+=Ld*rg}}}}p[f*Be+m*ct+g*Ie+y*st+We]=ln}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const Bye={kernelName:Ex,backendName:"cpu",kernelFunc:Vye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wye=$t(Oh,n=>Math.cos(n)),Uye={kernelName:Oh,backendName:"cpu",kernelFunc:Wye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gye=$t(Ph,n=>Math.cosh(n)),Hye={kernelName:Ph,backendName:"cpu",kernelFunc:Gye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jye(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[m,g]=a,y=Ze([f,m,g,p],"float32"),x=t.data.get(o.dataId).values,w=t.data.get(i.dataId).values,b=t.data.get(r.dataId).values,S=Le(r.shape),C=Le(y.shape);for(let k=0;k<f;k++){const N=k*4,_=x[N],E=x[N+1],D=x[N+2],P=x[N+3],F=w[k];if(F>=c)continue;const L=m>1?(D-_)*(h-1)/(m-1):0,B=g>1?(P-E)*(d-1)/(g-1):0;for(let W=0;W<m;W++){const Y=m>1?_*(h-1)+W*L:.5*(_+D)*(h-1);if(Y<0||Y>h-1){for(let z=0;z<g;z++)for(let H=0;H<p;H++){const Z=H+z*C[2]+W*C[1]+k*C[0];y.values[Z]=u}continue}if(l==="bilinear"){const z=Math.floor(Y),H=Math.ceil(Y),Z=Y-z;for(let te=0;te<g;te++){const re=g>1?E*(d-1)+te*B:.5*(E+P)*(d-1);if(re<0||re>d-1){for(let de=0;de<p;de++){const be=de+te*C[2]+W*C[1]+k*C[0];y.values[be]=u}continue}const le=Math.floor(re),he=Math.ceil(re),ie=re-le;for(let de=0;de<p;de++){let be=de+le*S[2]+z*S[1]+F*S[0];const ce=b[be];be=de+he*S[2]+z*S[1]+F*S[0];const Pe=b[be];be=de+le*S[2]+H*S[1]+F*S[0];const Be=b[be];be=de+he*S[2]+H*S[1]+F*S[0];const We=b[be],ct=ce+(Pe-ce)*ie,Xe=Be+(We-Be)*ie;be=de+te*C[2]+W*C[1]+k*C[0],y.values[be]=ct+(Xe-ct)*Z}}}else for(let z=0;z<g;++z){const H=g>1?E*(d-1)+z*B:.5*(E+P)*(d-1);if(H<0||H>d-1){for(let re=0;re<p;re++){const le=re+z*C[2]+W*C[1]+k*C[0];y.values[le]=u}continue}const Z=Math.round(H),te=Math.round(Y);for(let re=0;re<p;re++){const le=re+Z*S[2]+te*S[1]+F*S[0],he=re+z*C[2]+W*C[1]+k*C[0];y.values[he]=b[le]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const qye={kernelName:Ax,backendName:"cpu",kernelFunc:jye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Oe(r,"cumprod");const l=At([o],r.shape.length);let u=r;l!=null&&(u=Ks({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Vt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Qn(u.dtype,"int32"),d=G2(J(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const w=m(y,x);if(x===0)d[w]=i?1:p[w];else{const b=m(y,x-1);d[w]=i?p[b]*d[b]:p[w]*d[b]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Ei(l),x=Ks({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const Xye={kernelName:Rx,backendName:"cpu",kernelFunc:Kye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Oe(r,"cumsum");const l=At([o],r.shape.length);let u=r;l!=null&&(u=Ks({inputs:{x:r},backend:t,attrs:{perm:l}}));const c=Vt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Qn(u.dtype,"int32"),d=os(J(u.shape),h),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=a?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const w=m(y,x);if(x===0)d[w]=i?0:p[w];else{const b=m(y,x-1);d[w]=i?p[b]+d[b]:p[w]+d[b]}}const g=t.makeTensorInfo(u.shape,h,d);if(l!=null){const y=Ei(l),x=Ks({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const Qye={kernelName:Gf,backendName:"cpu",kernelFunc:Yye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=lI(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=pF(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Jye={kernelName:Dx,backendName:"cpu",kernelFunc:Zye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;A(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let y=0;y<a;++y)for(let x=0;x<h;++x){const w=Math.floor(x/o),b=x%o;for(let S=0;S<d;++S){const C=Math.floor(S/o),k=S%o,N=(b*o+k)*p;for(let _=0;_<p;++_){const D=_+N+c*(C+u*(w+l*y));m[g++]=f[D]}}}return t.makeTensorInfo([a,h,d,p],r.dtype,m)}const t0e={kernelName:Ox,backendName:"cpu",kernelFunc:e0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;Oe([r,o],"depthwiseConv2DNative");const c=Le(r.shape),h=Le(o.shape);let d=l;d==null&&(d=[1,1]),A(Un(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=zt(r.shape,o.shape,i,d,a,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=p,w=x.left,b=x.top,S=p.outChannels/p.inChannels,C=new Mn(p.outShape,r.dtype),k=t.data.get(r.dataId).values,N=t.data.get(o.dataId).values,_=C.values;for(let E=0;E<p.batchSize;++E){const D=E*c[0],P=E*C.strides[0];for(let F=0;F<p.outHeight;++F){const L=P+F*C.strides[1],B=F*p.strideHeight-b;for(let W=0;W<f;++W){const Y=B+W*g;if(Y<0||Y>=p.inHeight)continue;const z=W*h[0],H=D+Y*c[1];for(let Z=0;Z<p.outWidth;++Z){const te=L+Z*C.strides[2],re=Z*p.strideWidth-w;for(let le=0;le<m;++le){const he=re+le*y;if(he<0||he>=p.inWidth)continue;const ie=z+le*h[1],de=H+he*p.inChannels;let be=te,ce=ie;for(let Pe=0;Pe<p.inChannels;++Pe){const Be=k[de+Pe];for(let We=0;We<S;++We)_[be+We]+=Be*N[ce+We];be+=S,ce+=S}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const n0e={kernelName:Hf,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s;Oe([r,o],"depthwiseConv2dNativeBackpropFilter");const h=zt(r.shape,c,i,a,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Mn(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,w=h.outChannels/h.inChannels,b=t.data.get(r.dataId).values,S=new Mn(r.shape,r.dtype,b),C=t.data.get(o.dataId).values,k=new Mn(o.shape,o.dtype,C);for(let N=0;N<f;++N){const _=Math.max(0,Math.ceil((x-N)/d)),E=Math.min(h.outHeight,(h.inHeight+x-N)/d);for(let D=0;D<m;++D){const P=Math.max(0,Math.ceil((y-D)/p)),F=Math.min(h.outWidth,(h.inWidth+y-D)/p);for(let L=0;L<h.outChannels;++L){const B=Math.trunc(L/w),W=L%w;let Y=0;for(let z=0;z<h.batchSize;++z)for(let H=_;H<E;++H){const Z=N+H*d-x;for(let te=P;te<F;++te){const re=D+te*p-y;Y+=S.get(z,Z,re,B)*k.get(z,H,te,L)}}g.set(Y,N,D,B,W)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const r0e={kernelName:Px,backendName:"cpu",kernelFunc:s0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0e(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s;Oe([r,o],"depthwiseConv2DNativeBackpropInput");const h=Le(r.shape),d=Le(o.shape),p=zt(c,o.shape,i,a,l,u,!0),f=new Mn(p.inShape,"float32"),m=f.values,[g,y,x]=f.strides,w=t.data.get(r.dataId).values,[b,S,C]=h,k=t.data.get(o.dataId).values,[N,_,E]=d,{batchSize:D,filterHeight:P,filterWidth:F,inChannels:L,inHeight:B,inWidth:W,outChannels:Y,outHeight:z,outWidth:H,strideHeight:Z,strideWidth:te}=p,re=P-1-p.padInfo.top,le=F-1-p.padInfo.left,he=Y/L;for(let ie=0;ie<D;++ie)for(let de=0;de<L;++de)for(let be=0;be<B;++be){const ce=be-re,Pe=Math.max(0,Math.ceil(ce/Z)),Be=Math.min(z,(P+ce)/Z);for(let We=0;We<W;++We){const ct=We-le,Xe=Math.max(0,Math.ceil(ct/te)),lt=Math.min(H,(F+ct)/te);let fe=0;for(let Ie=Pe;Ie<Be;++Ie){const Je=Ie*Z-ce;for(let Ge=Xe;Ge<lt;++Ge){const nt=Ge*te-ct,st=b*ie+S*Ie+C*Ge,en=N*(P-1-Je)+_*(F-1-nt)+E*de;for(let Bt=0;Bt<he;++Bt){const vs=de*he+Bt,ln=w[st+vs],Js=k[en+Bt];fe+=ln*Js}}}m[g*ie+y*be+x*We+de]=fe}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const i0e={kernelName:Fx,backendName:"cpu",kernelFunc:o0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0e(n){const{inputs:e,backend:t}=n,{x:s}=e,r=J(s.shape),o=t.data.get(s.dataId).values,i=Ze([r,r],s.dtype),a=i.values;for(let u=0;u<o.length;u++)a[u*r+u]=o[u];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const l0e={kernelName:Lx,backendName:"cpu",kernelFunc:a0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0e={kernelName:jf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,l=e,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:w,strideHeight:b,strideWidth:S,filterHeight:C,filterWidth:k,dilationHeight:N,dilationWidth:_,outShape:E}=fl(s.shape,r.shape,o,i,"NHWC",a),D=J(E),P=E.length,F=dn(s.dtype,D);for(let B=0;B<p;++B)for(let W=0;W<y;++W){const Y=W*b-w.top;for(let z=0;z<x;++z){const H=z*S-w.left;for(let Z=0;Z<g;++Z){let te=Number.MIN_SAFE_INTEGER;for(let le=0;le<C;++le){const he=Y+le*N;if(he>=0&&he<f)for(let ie=0;ie<k;++ie){const de=H+ie*_;if(de>=0&&de<m){const be=yi([B,he,de,Z],c,Le(s.shape)),ce=yi([le,ie,Z],d,Le(r.shape)),Pe=u[be]+h[ce];Pe>te&&(te=Pe)}}}const re=yi([B,W,z,Z],P,Le(E));F[re]=te}}}return{dataId:l.write(Au(F,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0e={kernelName:r0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=lo(s.shape,u.data.get(s.dataId).values),h=lo(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:w,strideWidth:b,filterHeight:S,filterWidth:C,dilationHeight:k,dilationWidth:N,outShape:_}=fl(s.shape,r.shape,i,a,"NHWC",l);A(o.rank===_.length,()=>`Error in ${r0}, dy must have the same rank as output ${_.length}, but got ${o.rank}`);const E=lo(_,u.data.get(o.dataId).values),D=v3(r.shape,r.dtype);for(let F=0;F<d;++F)for(let L=0;L<g;++L){const B=L*w-x.top;for(let W=0;W<y;++W){const Y=W*b-x.left;for(let z=0;z<m;++z){let H=Number.MIN_SAFE_INTEGER,Z=0,te=0;for(let re=0;re<S;++re){const le=B+re*k;if(le>=0&&le<p)for(let he=0;he<C;++he){const ie=Y+he*N;if(ie>=0&&ie<f){const de=c[F][le][ie][z]+h[re][he][z];de>H&&(H=de,Z=re,te=he)}}}D[Z][te][z]+=E[F][L][W][z]}}}return{dataId:u.write(Au(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h0e={kernelName:s0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,u=e,c=lo(s.shape,u.data.get(s.dataId).values),h=lo(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:w,strideWidth:b,filterHeight:S,filterWidth:C,dilationHeight:k,dilationWidth:N,outShape:_}=fl(s.shape,r.shape,i,a,"NHWC",l);A(o.rank===_.length,()=>`Error in ${s0}, dy must have the same rank as output ${_.length}, but got ${o.rank}`);const E=lo(_,u.data.get(o.dataId).values),D=v3(s.shape,s.dtype);for(let F=0;F<d;++F)for(let L=0;L<g;++L){const B=L*w-x.top;for(let W=0;W<y;++W){const Y=W*b-x.left;for(let z=0;z<m;++z){let H=Number.MIN_SAFE_INTEGER,Z=B<0?0:B,te=Y<0?0:Y;for(let re=0;re<S;++re){const le=B+re*k;if(le>=0&&le<p)for(let he=0;he<C;++he){const ie=Y+he*N;if(ie>=0&&ie<f){const de=c[F][le][ie][z]+h[re][he][z];de>H&&(H=de,Z=le,te=ie)}}}D[F][Z][te][z]+=E[F][L][W][z]}}}return{dataId:u.write(Au(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0e(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},u=(l==null?void 0:l.alpha)||1,c=(a==null?void 0:a.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=o.getContext(c,(a==null?void 0:a.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=t.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const b=[0,0,0,255*u];for(let C=0;C<f;C++){const k=m[w*f+C];if(r.dtype==="float32"){if(k<0||k>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${k}.`)}else if(r.dtype==="int32"&&(k<0||k>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${k}.`);f===1?(b[0]=k*g,b[1]=k*g,b[2]=k*g):b[C]=k*g}const S=w*4;y[S+0]=Math.round(b[0]),y[S+1]=Math.round(b[1]),y[S+2]=Math.round(b[2]),y[S+3]=Math.round(b[3])}o.width=p,o.height=d;const x=new ImageData(y,p,d);return h.putImageData(x,0,0),r}const p0e={kernelName:j2,backendName:"cpu",kernelFunc:d0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Oe(r,"sum");let a;r.dtype==="bool"?a=Ja({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=Ci({inputs:{x:r},backend:t});const l=a.shape.length,u=et(o,a.shape),c=At(u,l);let h=u,d=a;c!=null&&(d=Ks({inputs:{x:a},backend:t,attrs:{perm:c}}),h=Vt(h.length,l)),En("sum",h,d.shape.length);const[p,f]=Sn(d.shape,h),m=Qn(d.dtype,"int32");let g=g0(t,p,m);const y=J(f),x=t.data.get(g.dataId).values,w=t.data.get(d.dataId).values;for(let b=0;b<x.length;++b){const S=b*y;let C=0;for(let k=0;k<y;++k)C+=w[S+k];x[b]=C}if(i){const b=gn(g.shape,u),S=g;g=Mt({inputs:{x:g},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(S)}return t.disposeIntermediateTensorInfo(a),c!=null&&t.disposeIntermediateTensorInfo(d),g}const f0e={kernelName:Im,backendName:"cpu",kernelFunc:Qm};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m0e(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=rw(r,o.length);iw(i.length,l,o);const{path:u,steps:c}=aw(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=ow(p,l[g]);let w;lw(y)?w=o[g]:(w=Ks({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(w));const b=w.shape.slice();for(let S=0;S<x.length;++S)b.splice(x[S],0,1);ot(w.shape,b)||(w=Mt({inputs:{x:w},backend:t,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=fw({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Qm({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const g0e={kernelName:Mx,backendName:"cpu",kernelFunc:m0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y0e(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Oe([s,r],"eluGrad");const o=new Float32Array(J(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const u=i[l];u>=0?o[l]=a[l]:o[l]=a[l]*(u+1)}return t.makeTensorInfo(r.shape,"float32",o)}const x0e={kernelName:zx,backendName:"cpu",kernelFunc:y0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w0e=Z1,v0e=J1,b0e=ew,S0e=tw,C0e=nw,k0e=sw,I0e=$t(Mh,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+w0e*t);return e*(1-((((k0e*s+C0e)*s+S0e)*s+b0e)*s+v0e)*s*Math.exp(-t*t))}),N0e={kernelName:Mh,backendName:"cpu",kernelFunc:I0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R0(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(A(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),Mt({inputs:{x:r},backend:t,attrs:{shape:a}})}const T0e={kernelName:Kf,backendName:"cpu",kernelFunc:R0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $0e=Cn((n,e)=>n/e),zI=Gn(Fh,$0e),nC={kernelName:Fh,backendName:"cpu",kernelFunc:zI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],c=J(u),h=Bn("float32",c),d=Bn("float32",c);for(let g=0;g<r;g++){const y=vu({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,o]}}),x=vu({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,o]}}),w=ar({inputs:{real:y,imag:x},backend:t}),{real:b,imag:S}=_0e(w,e,t),C=Uo(b,S);for(let k=0;k<o;k++){const N=nI(C,k);h[g*o+k]=N.real,d[g*o+k]=N.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(w)}const p=t.makeTensorInfo(u,"float32",h),f=t.makeTensorInfo(u,"float32",d),m=ar({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function _0e(n,e,t){const s=J(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(E0e(s)){const a=sC(o,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",a.real),c=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",hl(s,"float32")),d=Ci({inputs:{x:h},backend:t}),p=nC.kernelFunc({inputs:{a:u,b:h},backend:t}),f=nC.kernelFunc({inputs:{a:c,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=Uo(o,i),l=R0e(a,s,e);return FP(l)}}function E0e(n){return(n&n-1)===0}function sC(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=Uo(n,e),i=t/2,a=LP(o),l=a.real,u=a.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=ar({inputs:{real:h,imag:d},backend:r}),f=MP(o),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),w=r.makeTensorInfo(y,"float32",g),b=ar({inputs:{real:x,imag:w},backend:r}),S=sC(l,u,i,s,r),C=S.real,k=S.imag,N=[C.length],_=r.makeTensorInfo(N,"float32",C),E=r.makeTensorInfo(N,"float32",k),D=ar({inputs:{real:_,imag:E},backend:r}),P=sC(m,g,i,s,r),F=P.real,L=P.imag,B=[F.length],W=r.makeTensorInfo(B,"float32",F),Y=r.makeTensorInfo(B,"float32",L),z=ar({inputs:{real:W,imag:Y},backend:r}),H=VP(t,s),Z=[H.real.length],te=r.makeTensorInfo(Z,"float32",H.real),re=r.makeTensorInfo(Z,"float32",H.imag),le=ar({inputs:{real:te,imag:re},backend:r}),he=fw({inputs:{a:le,b:z},backend:r}),ie=rh({inputs:{a:D,b:he},backend:r}),de=dI({inputs:{a:D,b:he},backend:r}),be=wu({inputs:{input:ie},backend:r}),ce=wu({inputs:{input:de},backend:r}),Pe=ah({inputs:{input:ie},backend:r}),Be=ah({inputs:{input:de},backend:r}),We=lh({inputs:[be,ce],backend:r,attrs:{axis:0}}),ct=lh({inputs:[Pe,Be],backend:r,attrs:{axis:0}}),Xe=r.data.get(We.dataId).values,lt=r.data.get(ct.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(We),r.disposeIntermediateTensorInfo(ct),{real:Xe,imag:lt}}function R0e(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=BP(r*a,e,t),u=nI(n,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}t&&(o/=e,i/=e),zP(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0e(n){const{inputs:e,backend:t}=n,{input:s}=e,r=J(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Mt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=xV(a,!1,t),u=Mt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const D0e={kernelName:Vx,backendName:"cpu",kernelFunc:A0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||_u(r),a=dn(i,J(s));return P0e(a,r,i),e.makeTensorInfo(s,i,a)}const O0e={kernelName:Bx,backendName:"cpu",kernelFunc:VI};function P0e(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F0e={kernelName:Wx,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=Bn(s.dtype,J(s.shape)),[i,a,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*l*a*u;for(let f=0;f<a;f++){const m=f*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let x=0;x<u;x++){const w=Math.round(l-g-1),b=p+m+y+x;let S=c[b];if(w>=0&&w<l){const C=w*u,k=p+m+C+x;S=c[k]}o[b]=S}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=gV({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const y=Mt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=rh({inputs:{a:m,b:y},backend:t}),t.disposeIntermediateTensorInfo(y)}else m=rh({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const y=Mt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=E0(t,m,p,y,f),t.disposeIntermediateTensorInfo(y)}else m=E0(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const M0e={kernelName:Kp,backendName:"cpu",kernelFunc:L0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=yV({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=rh({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=E0(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const V0e={kernelName:Xp,backendName:"cpu",kernelFunc:z0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0e(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=J(s.shape),i=r.shape,a=i[i.length-1],[l,u,c,h]=U1(s,r);if(u===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(r.dataId).values,p=t.bufferSync(s),f=kF(d,p,s.dtype,u,a,c,h,s.shape,o);return t.makeTensorInfo(l,s.dtype,f.values)}const W0e={kernelName:Ux,backendName:"cpu",kernelFunc:B0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;Oe([r,o],"gatherV2");const l=et(i,r.shape)[0],u=t.data.get(o.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){const S=u[b];A(S<=c-1&&S>=0,()=>`GatherV2: the index value ${S} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=J(o.shape),p=cw(r,o,l,h),f=Mt({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Mt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=t.bufferSync(m),x=t.bufferSync(f),w=IF(x,y,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,w.dtype,w.values)}const G0e={kernelName:Yf,backendName:"cpu",kernelFunc:U0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0e(n){const{inputs:e,backend:t}=n,{input:s}=e,r=J(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=Mt({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=xV(a,!0,t),u=Mt({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const j0e={kernelName:Gx,backendName:"cpu",kernelFunc:H0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0e=$t(Hh,n=>Number.isFinite(n)?1:0,"bool"),K0e={kernelName:Hh,backendName:"cpu",kernelFunc:q0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X0e=$t(jh,n=>Math.abs(n)===1/0?1:0,"bool"),Y0e={kernelName:jh,backendName:"cpu",kernelFunc:X0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q0e=$t(qh,n=>Number.isNaN(n)?1:0,"bool"),Z0e={kernelName:qh,backendName:"cpu",kernelFunc:Q0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J0e(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=EF(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const exe={kernelName:jx,backendName:"cpu",kernelFunc:J0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const txe=$t(Xh,n=>Math.log1p(n)),nxe={kernelName:Xh,backendName:"cpu",kernelFunc:txe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sxe=Cn((n,e)=>n&&e),rxe=Gn(tm,sxe,null,"bool"),oxe={kernelName:tm,backendName:"cpu",kernelFunc:rxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ixe=$t(nm,n=>n?0:1,"bool"),axe={kernelName:nm,backendName:"cpu",kernelFunc:ixe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lxe=Cn((n,e)=>n||e),uxe=Gn(sm,lxe,null,"bool"),cxe={kernelName:sm,backendName:"cpu",kernelFunc:uxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;Oe(r,"LRN");const u=r.shape[3],c=u-1,h=t.data.get(r.dataId).values,d=J(r.shape),p=new Float32Array(d);function f(m){const g=m%u;let y=m-g+Math.max(0,g-o);const x=m-g+Math.min(g+o,c);let w=0;for(;y<=x;y++){const b=h[y];w+=b*b}return w}for(let m=0;m<d;m++){const g=f(m),y=h[m]*Math.pow(i+a*g,-l);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const dxe={kernelName:rm,backendName:"cpu",kernelFunc:hxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s;Oe(i,"LRNGrad");const h=J(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let x=0;x<y;x++){const w=x%d,b=x-w+Math.max(0,w-a),S=x-w+Math.min(d,w+a+1);let C=0;for(let k=b;k<S;k++)C+=Math.pow(f[k],2);C=u*C+l;for(let k=b;k<S;k++){let N=-2*u*c*f[k]*m[x]/C;x===k&&(N+=Math.pow(C,-c)),N*=p[x],g[k]+=N}}return t.makeTensorInfo(i.shape,r.dtype,g)}const fxe={kernelName:qx,backendName:"cpu",kernelFunc:pxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let l=r.shape;const u=l.length,c=et(o,l);let h=c;const d=At(h,u);let p=a.data.get(r.dataId).values;if(d!=null){const b=new Array(u);for(let S=0;S<b.length;S++)b[S]=l[d[S]];p=cI(p,l,r.dtype,d,b),h=Vt(h.length,u),l=b}Oe(r,"max"),En("max",h,u);const[f,m]=Sn(l,h),g=J(m),y=AF(p,g,f,r.dtype),x=a.write(y,f,r.dtype);let w=f;return i&&(w=gn(f,c)),{dataId:x,shape:w,dtype:r.dtype}}const mxe={kernelName:om,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Oe(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;A(Un(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ys(r.shape,o,i,u,a,l);let h;if(c.filterWidth===1&&c.filterHeight===1&&ot(c.inShape,c.outShape))h=Ci({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,p=Le(r.shape),f=MI(d,r.shape,r.dtype,p,c,"max");h=t.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const yxe={kernelName:im,backendName:"cpu",kernelFunc:gxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s;Oe(r,"maxPool3d");const c=Vr(r.shape,o,i,1,a,l,u),h=t.data.get(r.dataId).values,d=mV(h,r.shape,r.dtype,Le(r.shape),c,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const wxe={kernelName:am,backendName:"cpu",kernelFunc:xxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vxe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=s;Oe([r,o],"maxPool3DGrad");const c=Vr(o.shape,i,a,1,l,u),h=t.bufferSync(o),d=lye(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,b=c.effectiveFilterHeight,S=c.effectiveFilterWidth,C=w-1-c.padInfo.front,k=S-1-c.padInfo.left,N=b-1-c.padInfo.top,_=Ze(o.shape,"float32"),E=t.bufferSync(r);for(let D=0;D<c.batchSize;++D)for(let P=0;P<c.inChannels;++P)for(let F=0;F<c.inDepth;++F)for(let L=0;L<c.inHeight;++L)for(let B=0;B<c.inWidth;++B){const W=F-C,Y=L-N,z=B-k;let H=0;for(let Z=0;Z<w;Z+=g){const te=(W+Z)/p;if(!(te<0||te>=c.outDepth||Math.floor(te)!==te))for(let re=0;re<b;re+=y){const le=(Y+re)/f;if(!(le<0||le>=c.outHeight||Math.floor(le)!==le))for(let he=0;he<S;he+=x){const ie=(z+he)/m;if(ie<0||ie>=c.outWidth||Math.floor(ie)!==ie)continue;const de=w*b*S-1-d.get(D,te,le,ie,P),be=Z*b*S+re*S+he,ce=de===be?1:0;if(ce===0)continue;const Pe=E.get(D,te,le,ie,P);H+=Pe*ce}}}_.set(H,D,F,L,B,P)}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const bxe={kernelName:Xx,backendName:"cpu",kernelFunc:vxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sxe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Oe([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ys(a.shape,l,u,1,c,h),p=t.data.get(a.dataId).values,f=Ze(d.outShape,a.dtype,fV(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,b=d.effectiveFilterWidth,S=b-1-d.padInfo.left,C=w-1-d.padInfo.top,k=Ze(a.shape,"float32"),N=t.data.get(r.dataId).values,_=Ze(r.shape,"float32",N);for(let E=0;E<d.batchSize;++E)for(let D=0;D<d.inChannels;++D)for(let P=0;P<d.inHeight;++P)for(let F=0;F<d.inWidth;++F){const L=P-C,B=F-S;let W=0;for(let Y=0;Y<w;Y+=y){const z=(L+Y)/m;if(!(z<0||z>=d.outHeight||Math.floor(z)!==z))for(let H=0;H<b;H+=x){const Z=(B+H)/g;if(Z<0||Z>=d.outWidth||Math.floor(Z)!==Z)continue;const te=w*b-1-f.get(E,z,Z,D),re=Y*b+H,le=te===re?1:0;if(le===0)continue;const he=_.get(E,z,Z,D);W+=he*le}}k.set(W,E,P,F,D)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const Cxe={kernelName:Kx,backendName:"cpu",kernelFunc:Sxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kxe(n,e,t,s,r){const o=Le(e),i=MI(n,e,t,o,r,"max"),a=fV(n,e,t,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ixe={kernelName:Yx,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;Oe(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ys(s.shape,r,o,[1,1],i),[h,d]=kxe(u,s.shape,s.dtype,a,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=et(o,r.shape),u=Sn(r.shape,a)[1],c=J(u),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=Ja({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=zI({inputs:{a:p,b:d},backend:t});h.push(f);const m=Qm({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:i}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const Txe={kernelName:lm,backendName:"cpu",kernelFunc:Nxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $xe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Oe(r,"min");const a=et(o,r.shape);let l=a;const u=At(l,r.shape.length);let c=r;u!=null&&(c=Ks({inputs:{x:r},backend:t,attrs:{perm:u}}),l=Vt(l.length,r.shape.length)),En("min",l,c.shape.length);const[h,d]=Sn(c.shape,l),p=J(d),f=os(J(h),c.dtype),m=t.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let w=m[x];for(let b=0;b<p;++b){const S=m[x+b];(Number.isNaN(S)||S<w)&&(w=S)}f[y]=w}u!=null&&t.disposeIntermediateTensorInfo(c);const g=t.makeTensorInfo(h,c.dtype,f);if(i){const y=gn(h,a),x=Mt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),x}return g}const _xe={kernelName:um,backendName:"cpu",kernelFunc:$xe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Exe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;Oe(r,"mirrorPad");const a=o.map((w,b)=>w[0]+r.shape[b]+w[1]),l=o.map(w=>w[0]),u=o.map((w,b)=>w[0]+r.shape[b]),c=i==="reflect"?0:1,h=t.data.get(r.dataId).values,d=r.shape.length,p=Le(r.shape),f=J(a),m=a.length,g=Le(a),y=Bn(r.dtype,f);for(let w=0;w<f;w++){let b=Ch(w,m,g);for(let C=0;C<m;C++)b[C]<l[C]?b[C]=l[C]*2-b[C]-c:b[C]>=u[C]&&(b[C]=(u[C]-1)*2-b[C]+c);b=b.map((C,k)=>C-l[k]);const S=yi(b,d,p);y[w]=h[S]}return{dataId:t.write(y,a,r.dtype),shape:a,dtype:r.dtype}}const Rxe={kernelName:cm,backendName:"cpu",kernelFunc:Exe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Axe=Cn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),Dxe=Gn(Zh,Axe),Oxe={kernelName:Zh,backendName:"cpu",kernelFunc:Dxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=et([a],r.shape),u=wV({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=gn(u.shape,l),h=Mt({inputs:{x:u},backend:t,attrs:{shape:c}}),d=dI({inputs:{a:r,b:h},backend:t}),p=vF({inputs:{x:d},backend:t}),f=Qm({inputs:{x:p},backend:t,attrs:{axis:l,keepDims:!1}}),m=Mt({inputs:{x:f},backend:t,attrs:{shape:c}}),g=zI({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Pxe={kernelName:$m,backendName:"cpu",kernelFunc:vV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fxe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;Oe(r,"multinomial");const l=a?r:vV({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=t.data.get(l.dataId).values,d=[u,o],p=os(J(d),"int32");for(let f=0;f<u;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const y=R1.alea(i.toString()),x=f*o;for(let w=0;w<o;++w){const b=y();p[x+w]=g.length;for(let S=0;S<g.length;S++)if(b<g[S]){p[x+w]=S;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",p)}const Lxe={kernelName:Qx,backendName:"cpu",kernelFunc:Fxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mxe=B1;function zxe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;Oe(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,{selectedIndices:h}=Mxe(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Vxe={kernelName:Zx,backendName:"cpu",kernelFunc:zxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bxe=qk;function Wxe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s;Oe(r,"NonMaxSuppressionPadded");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=Bxe(c,h,i,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const Uxe={kernelName:q2,backendName:"cpu",kernelFunc:Wxe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gxe=W1;function Hxe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s;Oe(r,"NonMaxSuppressionWithScore");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=Gxe(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const jxe={kernelName:Jx,backendName:"cpu",kernelFunc:Hxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qxe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;Oe(r,"oneHot");const u=J(r.shape),c=new Float32Array(u*i);c.fill(l);const h=t.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<i&&(c[d*i+h[d]]=a);return t.makeTensorInfo([...r.shape,i],o,c)}const Kxe={kernelName:fm,backendName:"cpu",kernelFunc:qxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=wu({inputs:{input:s},backend:t}),o=A0({inputs:{x:r},backend:t}),i=ah({inputs:{input:s},backend:t}),a=A0({inputs:{x:i},backend:t}),l=ar({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return VI({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Xxe={kernelName:Rm,backendName:"cpu",kernelFunc:A0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=wu({inputs:{input:s},backend:t}),o=bV({inputs:{x:r},backend:t}),i=ah({inputs:{input:s},backend:t}),a=A0({inputs:{x:i},backend:t}),l=ar({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return VI({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const Yxe={kernelName:pm,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return R0({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Zs(o,c.shape,"All tensors passed to stack must have matching shapes"),A(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=R0({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=lh({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const Qxe={kernelName:mm,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;Oe(r,"pad");const a=o.map((x,w)=>x[0]+r.shape[w]+x[1]),l=o.map(x=>x[0]),u=t.data.get(r.dataId).values,c=J(r.shape),h=r.shape.length,d=Le(r.shape),p=J(a),f=a.length,m=Le(a),g=Bn(r.dtype,p);i!==0&&g.fill(i);for(let x=0;x<c;x++){const b=Ch(x,h,d).map((C,k)=>C+l[k]),S=yi(b,f,m);g[S]=u[x]}return{dataId:t.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const CV={kernelName:gm,backendName:"cpu",kernelFunc:Zxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jxe=Cn((n,e)=>Math.pow(n,e)),e1e=Gn(ed,Jxe),t1e={kernelName:ed,backendName:"cpu",kernelFunc:e1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1e(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,a=r.map(g=>t.data.get(g.dataId).values),l=r.map(g=>g.shape),u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values,[h,d,p]=MF(a,l,u,o.shape,o.dtype,c,i.shape),f=h.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,o.dtype,d);return f.concat([m])}const s1e={kernelName:K2,backendName:"cpu",kernelFunc:n1e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r1e(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=zF(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const o1e={kernelName:X2,backendName:"cpu",kernelFunc:r1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1e(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=VF(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const a1e={kernelName:Y2,backendName:"cpu",kernelFunc:i1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1e(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=BF(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const u1e={kernelName:e1,backendName:"cpu",kernelFunc:l1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c1e=$t(td,n=>1/n),h1e={kernelName:td,backendName:"cpu",kernelFunc:c1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d1e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Oe(r,"resizeBilinear");const l=Le(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(J([h,u,c,f])),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c];let w=0;const b=y[0]/x[0],S=y[1]/x[1];for(let C=0;C<h;C++)for(let k=0;k<u;k++){let N;i?N=b*(k+.5)-.5:N=b*k;const _=Math.max(0,Math.floor(N)),E=N-_,D=Math.min(d-1,Math.ceil(N)),P=C*l[0]+_*l[1],F=C*l[0]+D*l[1];for(let L=0;L<c;L++){let B;i?B=S*(L+.5)-.5:B=S*L;const W=Math.max(0,Math.floor(B)),Y=B-W,z=Math.min(p-1,Math.ceil(B)),H=P+W*l[2],Z=F+W*l[2],te=P+z*l[2],re=F+z*l[2];for(let le=0;le<f;le++){const he=m[H+le],ie=m[Z+le],de=m[te+le],be=m[re+le],ce=he+(de-he)*Y,Pe=ie+(be-ie)*Y,Be=ce+(Pe-ce)*E;g[w++]=Be}}}return t.makeTensorInfo([h,u,c,f],"float32",g)}const p1e={kernelName:bm,backendName:"cpu",kernelFunc:d1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Oe([o,r],"resizeBilinearGrad");const a=Le(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],x=m[1]/g[1],w=t.data.get(o.dataId).values;let b=0;for(let S=0;S<l;S++){const C=S*a[0];for(let k=0;k<d;k++){const N=k*y,_=Math.floor(N),E=Math.min(Math.ceil(N),u-1),D=C+_*a[1],P=C+E*a[1],F=N-_,L=1-F;for(let B=0;B<p;B++){const W=B*x,Y=Math.floor(W),z=Math.min(Math.ceil(W),c-1),H=W-Y,Z=1-H,te=D+Y*a[2],re=D+z*a[2],le=P+Y*a[2],he=P+z*a[2],ie=L*Z,de=L*H,be=F*Z,ce=F*H;for(let Pe=0;Pe<h;Pe++){const Be=w[b++];f[te+Pe]+=Be*ie,f[re+Pe]+=Be*de,f[le+Pe]+=Be*be,f[he+Pe]+=Be*ce}}}}return t.makeTensorInfo([l,c,u,h],"float32",f)}const m1e={kernelName:s1,backendName:"cpu",kernelFunc:f1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Oe(r,"resizeNearestNeighbor");const l=Le(r.shape),[u,c]=a,[h,d,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c],w=y[0]/x[0],b=y[1]/x[1];let S=0;for(let C=0;C<h;C++){const k=C*l[0];for(let N=0;N<u;N++){const _=i?w*(N+.5):w*N;let E=Math.min(d-1,o?Math.round(_):Math.floor(_));i&&(E=Math.max(0,E));const D=k+E*l[1];for(let P=0;P<c;P++){const F=i?b*(P+.5):b*P;let L=Math.min(p-1,o?Math.round(F):Math.floor(F));i&&(L=Math.max(0,L));const B=D+L*l[2];for(let W=0;W<f;W++){const Y=m[B+W];g[S++]=Y}}}}return t.makeTensorInfo([h,u,c,f],r.dtype,g)}const y1e={kernelName:vm,backendName:"cpu",kernelFunc:g1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x1e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Oe([o,r],"resizeNearestNeighborGrad");const a=Le(r.shape),l=Le(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*h*d),g=t.data.get(o.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],x=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=y[0]/x[0],b=y[1]/x[1],S=1/w,C=1/b,k=Math.ceil(S)*2+2,N=Math.ceil(C)*2+2;for(let _=0;_<u;_++){const E=_*a[0];for(let D=0;D<c;D++){const P=E+D*a[1],F=Math.floor(D*S),L=Math.floor(F-k/2);for(let B=0;B<h;B++){const W=P+B*a[2],Y=Math.floor(B*C),z=Math.floor(Y-N/2);for(let H=0;H<d;H++){let Z=0;for(let te=0;te<k;te++){const re=te+L;if(re<0||re>=p)continue;const le=E+re*l[1],he=re*w,ie=Math.min(c-1,i?Math.round(he):Math.floor(he));if(D===ie)for(let de=0;de<N;de++){const be=de+z;if(be<0||be>=f)continue;const ce=le+be*l[2],Pe=be*b,Be=Math.min(h-1,i?Math.round(Pe):Math.floor(Pe));B===Be&&(Z+=g[ce+H])}}m[W+H]=Z}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const w1e={kernelName:n1,backendName:"cpu",kernelFunc:x1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;Oe(r,"reverse");const i=r.shape.length,a=et(o,r.shape);if(i===0)return Ci({inputs:{x:r},backend:t});const l=new Mn(r.shape,r.dtype),u=t.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const b1e={kernelName:Sm,backendName:"cpu",kernelFunc:v1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S1e={kernelName:g1,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=Bn(s.dtype,J(s.shape)),[u,c,h,d]=s.shape,[p,f]=X1(i,c,h),m=255,g=Math.sin(r),y=Math.cos(r),x=a.data.get(s.dataId).values;for(let b=0;b<u;b++){const S=b*h*c*d;for(let C=0;C<c;C++){const k=C*(h*d);for(let N=0;N<h;N++){const _=N*d;for(let E=0;E<d;E++){const D=[u,C,N,E],P=D[2],F=D[1];let L=(P-p)*y-(F-f)*g,B=(P-p)*g+(F-f)*y;L=Math.round(L+p),B=Math.round(B+f);let W=o;if(typeof o!="number"&&(E===3?W=m:W=o[E]),L>=0&&L<h&&B>=0&&B<c){const z=B*(h*d),H=L*d,Z=S+z+H+E;W=x[Z]}const Y=S+k+_+E;l[Y]=W}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C1e=$t(rd,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),k1e={kernelName:rd,backendName:"cpu",kernelFunc:C1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I1e(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ai(o,r,i),d=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=Ul(p,f,i,h,u,l,a,c,0,d);return t.makeTensorInfo(i,m.dtype,m.values)}const N1e={kernelName:r1,backendName:"cpu",kernelFunc:I1e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T1e(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function $1e(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function _1e(n,e,t,s,r,o){const i=dn("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),u=a*r;for(let c=0;c<r;++c)i[u+c]=o==="left"?T1e(l,e[c+u]):$1e(l,e[c+u])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1e(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=_1e(a,l,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",u)}const R1e={kernelName:i1,backendName:"cpu",kernelFunc:E1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A1e(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;Oe([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=Qn(r.dtype,o.dtype),h=os(J(r.shape),c);let d=0;const p=i===0||i>1||r.shape.length===1?1:J(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=l[f]:h[d++]=u[f];return t.makeTensorInfo(r.shape,c,h)}const D1e={kernelName:Cm,backendName:"cpu",kernelFunc:A1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1e=Vm,P1e=Bm,F1e=$t(id,n=>n>=0?P1e*n:O1e*(Math.exp(n)-1)),L1e={kernelName:id,backendName:"cpu",kernelFunc:F1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M1e=$t(ud,n=>n<0?-1:n>0?1:0),z1e={kernelName:ud,backendName:"cpu",kernelFunc:M1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1e=$t(ad,n=>Math.sin(n)),B1e={kernelName:ad,backendName:"cpu",kernelFunc:V1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W1e=$t(ld,n=>Math.sinh(n)),U1e={kernelName:ld,backendName:"cpu",kernelFunc:W1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1e=11920928955078125e-23,xE=Math.log(G1e)+2,H1e=$t(hd,n=>{const e=n>-xE,t=n<xE,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),j1e={kernelName:hd,backendName:"cpu",kernelFunc:H1e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;Oe([r],"spaceToBatchND");const a=J(o),l=[[0,0]];l.push(...i);for(let C=1+o.length;C<r.shape.length;++C)l.push([0,0]);const u=CV.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),c=Fu(u.shape,o,a,!1),h=Lu(c.length,o.length,!1),d=Mu(u.shape,o,a,!1),m=Mt({inputs:{x:u},backend:t,attrs:{shape:c}}),x=Ks({inputs:{x:m},backend:t,attrs:{perm:h}}),S=Mt({inputs:{x},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),S}const K1e={kernelName:Nm,backendName:"cpu",kernelFunc:q1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1e(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,c=t.data.get(i.dataId).values[0],[h,d,p,f,m]=HF(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Y1e={kernelName:Q2,backendName:"cpu",kernelFunc:X1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1e(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(o.dataId).values),[u,c,h]=jF(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const Z1e={kernelName:Z2,backendName:"cpu",kernelFunc:Q1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1e(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=hI(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const ewe={kernelName:a1,backendName:"cpu",kernelFunc:J1e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function twe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[u,c]=hI(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const nwe={kernelName:l1,backendName:"cpu",kernelFunc:twe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function swe(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Ai(o,r,a),p=!1,f=t.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),y=!!t.data.get(i.dataId).values[0];m=Ul(f,g,a,d,c,u,l,h,y,p);break}case"float32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=Ul(f,g,a,d,c,u,l,h,y,p);break}case"int32":{const g=t.bufferSync(o),y=t.data.get(i.dataId).values[0];m=Ul(f,g,a,d,c,u,l,h,y,p);break}case"string":{const g=t.bufferSync(o),y=Vo(t.data.get(i.dataId).values[0]);m=Ul(f,g,a,d,c,u,l,h,y,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const rwe={kernelName:u1,backendName:"cpu",kernelFunc:swe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function owe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=et(i,r.shape)[0],l=uw(r,o,a),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[a]=h;const p=vu({inputs:{x:r},backend:t,attrs:{begin:u,size:d}});return u[a]+=h,p})}const iwe={kernelName:Tm,backendName:"cpu",kernelFunc:owe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const awe={kernelName:c1,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Oe(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lwe=$t(xd,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),uwe={kernelName:xd,backendName:"cpu",kernelFunc:lwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Oe(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:b}=j1(r.shape,o,i,a,l,u,c,h,d);let S;if(m)S=Mt({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){A(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=H1(x,w,b),k=vu({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});S=Mt({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(k)}else{const C=t.bufferSync(r),k=XF(p,C,b,x);S=t.makeTensorInfo(f,k.dtype,k.values)}return S}const hwe={kernelName:d1,backendName:"cpu",kernelFunc:cwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dwe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.data.get(c.dataId).values,p=t.data.get(h.dataId).values,[f,m]=YF(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const pwe={kernelName:p1,backendName:"cpu",kernelFunc:dwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fwe(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values[0],[u,c,h]=QF(a,l,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const mwe={kernelName:J2,backendName:"cpu",kernelFunc:fwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gwe(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=ZF(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const ywe={kernelName:ek,backendName:"cpu",kernelFunc:gwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xwe=$t(md,n=>Math.tan(n)),wwe={kernelName:md,backendName:"cpu",kernelFunc:xwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vwe=$t(gd,n=>Math.tanh(n)),bwe={kernelName:gd,backendName:"cpu",kernelFunc:vwe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Swe(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=Ai(o,r,s.shape),h=!1,d=t.bufferSync(r),p=t.bufferSync(o),f=t.bufferSync(s),m=Ul(d,p,s.shape,c,l,a,i,u,f,h);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const Cwe={kernelName:o1,backendName:"cpu",kernelFunc:Swe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;Oe(r,"tile");const i=eL(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const Iwe={kernelName:yd,backendName:"cpu",kernelFunc:kwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;Oe(r,"topk");const a=t.data.get(r.dataId).values,[l,u]=nL(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const Twe={kernelName:f1,backendName:"cpu",kernelFunc:Nwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $we(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=t,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=Le(r.shape),x=y[0],w=y[1],b=y[2],S=Le(g),C=S[0],k=S[1],N=S[2],_=Bn(r.dtype,J(g));_.fill(l);const E=s.data.get(r.dataId).values,D=s.data.get(o.dataId).values;for(let F=0;F<c;++F){const L=o.shape[0]===1?D:D.subarray(F*8,F*8+8);for(let B=0;B<f;++B)for(let W=0;W<m;++W)for(let Y=0;Y<p;++Y){let z;const H=L[6]*W+L[7]*B+1;if(H===0)continue;const Z=(L[0]*W+L[1]*B+L[2])/H,te=(L[3]*W+L[4]*B+L[5])/H,re=wE(Z,d,a),le=wE(te,h,a);switch(i){case"nearest":z=Owe(E,h,d,x,w,b,F,le,re,Y,l);break;case"bilinear":z=Pwe(E,h,d,x,w,b,F,le,re,Y,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const he=F*C+B*k+W*N+Y;_[he]=z}return s.makeTensorInfo(g,r.dtype,_)}return{dataId:s.write(_,g,r.dtype),shape:r.shape,dtype:r.dtype}}const _we={kernelName:m1,backendName:"cpu",kernelFunc:$we};function wE(n,e,t){switch(t){case"reflect":return Ewe(n,e);case"wrap":return Rwe(n,e);case"nearest":return Dwe(n,e);case"constant":default:return Awe(n)}}function Ewe(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return lu(0,t,e-1)}function Rwe(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return lu(0,t,e-1)}function Awe(n,e){return n}function Dwe(n,e){return lu(0,n,e-1)}function pp(n,e,t,s,r,o,i,a,l,u,c){const h=i*s+a*r+l*o+u;return 0<=a&&a<e&&0<=l&&l<t?n[h]:c}function Owe(n,e,t,s,r,o,i,a,l,u,c){const h=Math.round(a),d=Math.round(l);return pp(n,e,t,s,r,o,i,h,d,u,c)}function Pwe(n,e,t,s,r,o,i,a,l,u,c){const h=Math.floor(a),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*pp(n,e,t,s,r,o,i,h,d,u,c)+(l-d)*pp(n,e,t,s,r,o,i,h,f,u,c),g=(f-l)*pp(n,e,t,s,r,o,i,p,d,u,c)+(l-d)*pp(n,e,t,s,r,o,i,p,f,u,c);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fwe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Oe(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:u}=sL(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const Lwe={kernelName:tk,backendName:"cpu",kernelFunc:Fwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mwe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(i).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[o]=p;const f=vu({inputs:{x:r},backend:t,attrs:{begin:c,size:h}});d[p]=Mt({inputs:{x:f},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(f)}return d}const zwe={kernelName:_m,backendName:"cpu",kernelFunc:Mwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;Oe(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,u=[],c=[],h=a-l;let d=o;for(let f=0;f<h;++f){const m=R0({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){const m=hl(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=xF({inputs:{a:g,b:d},backend:t}),x=Ja({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),w=fw({inputs:{a:x,b:r},backend:t}),b=Qm({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(g),c.push(y),c.push(x),c.push(w),c.push(b)}const p=SV({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const Bwe={kernelName:Em,backendName:"cpu",kernelFunc:Vwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wwe=[Fge,Vne,Mge,Vge,jne,Wge,Gge,jge,Kge,Yge,Zge,eye,nye,oye,aye,cye,dye,fye,gye,Oge,xye,vye,Sye,Kne,kye,Gne,Yne,Nye,Bne,$ye,Eye,Rye,Dye,Pye,Lye,zye,Bye,Uye,Hye,qye,Xye,Qye,Jye,t0e,n0e,r0e,i0e,l0e,u0e,c0e,h0e,p0e,g0e,Tge,x0e,Qne,N0e,Zne,T0e,ese,D0e,O0e,F0e,nse,rse,M0e,V0e,W0e,G0e,ise,lse,Wne,j0e,_ye,K0e,Y0e,Z0e,$ge,cse,dse,exe,fse,nxe,oxe,axe,cxe,dxe,fxe,mxe,gse,yxe,wxe,bxe,Cxe,Ixe,Txe,_xe,xse,Rxe,Oxe,Lxe,vse,Sse,Vxe,Uxe,jxe,kse,Kxe,Yxe,Qxe,CV,t1e,Ege,Tse,s1e,o1e,a1e,u1e,Une,nC,h1e,Rge,Age,Dge,p1e,m1e,y1e,w1e,b1e,S1e,k1e,Pse,N1e,R1e,D1e,L1e,Lse,z1e,B1e,U1e,Mse,Pxe,j1e,K1e,Y1e,Z1e,ewe,nwe,rwe,iwe,Bse,awe,Use,Hse,uwe,hwe,pwe,mwe,ywe,Xse,f0e,wwe,bwe,Cwe,Iwe,Twe,_we,Ise,Lwe,zwe,Bwe,Xxe];for(const n of Wwe)nk(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pl={},Gg={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Uwe(n,e){Pl[n]=e}function qo(n,e){if(!(n in Pl)||e!=null){const s=Hwe(n,e);if(s!==null)Pl[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Pl[n];return t==null||t.isContextLost()?(delete Pl[n],qo(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Pl[n])}function Gwe(n){if(!ne().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Hwe(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Gwe(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Pl[n]},!1),ne().getBool("SOFTWARE_WEBGL_ENABLED")&&(Gg.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Gg)||t.getContext("experimental-webgl",Gg):t.getContext("webgl2",Gg)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hf;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(hf||(hf={}));var _r;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(_r||(_r={}));var ts;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ts||(ts={}));function Zm(n,e){return[e,n]}function jwe(n,e){return n*e}function Hg(n){const e=J(n),t=Math.ceil(e/4);return oS(t)}function $d(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function qwe(n,e){const[t,s]=$d(n,e);return t*s*4}function BI(n,e){const t=n;let s,r,o,i,a,l,u,c,h,d;return ne().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _e(n,e){const t=e();return ne().getBool("DEBUG")&&Kwe(n),t}function Kwe(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Zwe(n,e))}const Xwe=596e-10,Ywe=65504;function Qwe(n){return!!(ne().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Xwe<Math.abs(n)&&Math.abs(n)<Ywe)}function Zwe(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function jg(n,e){return ha(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Jwe(n,e){const t=ha(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(_e(n,()=>n.shaderSource(t,e)),_e(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function eve(n,e){const t=ha(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(_e(n,()=>n.shaderSource(t,e)),_e(n,()=>n.compileShader(t)),ne().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw kV(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const tve=/ERROR: [0-9]+:([0-9]+):/g;function kV(n,e){const t=tve.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((h,d)=>Ac((d+1).toString(),o)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Ac(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function nve(n){return ha(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function sve(n,e){if(_e(n,()=>n.linkProgram(e)),!ne().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Kv(n,e){if(_e(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function rve(n,e){const t=ha(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return _e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),_e(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function ove(n,e){const t=ha(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return _e(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),_e(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function ive(n){return ha(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function ave(n,e){const t=ne().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function lve(n){return ha(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function vE(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(_e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),_e(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),_e(n,()=>n.enableVertexAttribArray(a)),!0)}function uve(n,e,t){fve(n,t),_e(n,()=>n.activeTexture(n.TEXTURE0+t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function cve(n,e,t){return ha(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function hve(n,e,t){return n.getUniformLocation(e,t)}function dve(n,e,t,s){_e(n,()=>uve(n,e,s)),_e(n,()=>n.uniform1i(t,s))}function Xv(n,e,t){_e(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),_e(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function bE(n,e){_e(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),_e(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function qg(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+pve(n,e))}function pve(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ha(n,e,t){const s=_e(n,()=>e());if(s==null)throw new Error(t);return s}function fve(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function uh(n,e=2){return J(n.slice(0,n.length-e))}function ch(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Kg(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[uh(n),...ch(n)]),e}function mve(n,e=!1){let t=ne().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=ne().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&ne().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?B2(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=cl(n).newShape);let r=J(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=uh(n);let l=2,u=2;n.length&&([l,u]=ch(n)),r=a*(l/2)*(u/2),o=oS(r).map(c=>c*2)}else o=oS(r);return o}function Xg(n){return n%2===0}function D0(n,e){if(n=n.slice(-2),e=e.slice(-2),ot(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Xg(t)&&Xg(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Xg(n[0])&&Xg(e[0])}let Yv,Qv;function gve(n){if(Yv==null){const e=qo(n);Yv=e.getParameter(e.MAX_TEXTURE_SIZE)}return Yv}function yve(n){if(Qv==null){const e=qo(n);Qv=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Qv)}function xve(n){if(n===0)return 0;let e;const t=qo(n);return ro(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:ro(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function ro(n,e){return n.getExtension(e)!=null}function SE(n){try{if(qo(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function wve(n){if(n===0)return!1;const e=qo(n);if(n===1){if(!ro(e,"OES_texture_float"))return!1}else if(!ro(e,"EXT_color_buffer_float"))return!1;return rC(e)}function vve(n){if(n===0)return!1;const e=qo(n);if(n===1){if(!ro(e,"OES_texture_float")||!ro(e,"WEBGL_color_buffer_float"))return!1}else{if(ro(e,"EXT_color_buffer_float"))return rC(e);const s="EXT_color_buffer_half_float";if(ro(e,s)){const r=e.getExtension(s);return bve(e,r)}return!1}return rC(e)}function rC(n){const e=BI(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,r=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function bve(n,e){const t=BI(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const r=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,r,o,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function Sve(n){return n!==2?!1:qo(n).fenceSync!=null}function Jm(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe=ne();Fe.registerFlag("HAS_WEBGL",()=>Fe.getNumber("WEBGL_VERSION")>0);Fe.registerFlag("WEBGL_VERSION",()=>SE(2)?2:SE(1)?1:0);Fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Fe.get("WEBGL_VERSION")===2);Fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Fe.registerFlag("WEBGL_PACK",()=>Fe.getBool("HAS_WEBGL"));Fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CLIP",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_REDUCE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_CONV_IM2COL",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>gve(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>yve(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Fe.getNumber("WEBGL_VERSION");return n===0?0:xve(n)});Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!z3());Fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>wve(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>vve(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Sve(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>z3()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_EXP_CONV",()=>!1);Fe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Fe.getBool("IS_TEST"));Fe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Fe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Fe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Fe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(){let n,e,t,s,r,o,i,a,l,u;return ne().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=ne().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gu(n,e,t="index"){const s=Le(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function Tw(n,e,t="index"){const s=Le(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function Cve(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function kve(n,e,t="index"){const s=n.map((o,i)=>i),r=Cve(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,l=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function WI(n){const e=Le(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function UI(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const IV=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:NV}=iJ;function Ive(n,e,t){const s=[];if(n.forEach(p=>{const f=J(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=GI(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>Nve(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Ps(),l=_ve(a);let u,c,h=Ave(a);return e.isPacked?(u=Tve(e.logicalShape,i,t.enableShapeUniforms),c=Rve(a)):(u=$ve(e.logicalShape,i,t.enableShapeUniforms),c=Eve(a)),t.packedInputs&&(h+=Fve),[h,l,c,r,u,o,t.userCode].join(`
`)}function _d(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return Kve(n,e);case 1:return Yve(n,e);case 2:return Zve(n,e);case 3:return ebe(n,e);case 4:return nbe(n,e);case 5:return sbe(n);case 6:return rbe(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function TV(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return qve(n);case 1:return Xve(n,e);case 2:return Qve(n,e);case 3:return Jve(n,e);default:return tbe(n,e)}}function Nve(n,e,t=!1,s){let r="";t?r+=TV(n,s):r+=_d(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=obe(n,e):r+=ibe(n,e)),r}function Tve(n,e,t){switch(n.length){case 0:return $V();case 1:return Lve(n,e,t);case 2:return Hve(n,e,t);case 3:return zve(n,e,t);default:return Bve(n,e,t)}}function $ve(n,e,t){switch(n.length){case 0:return $V();case 1:return Mve(n,e,t);case 2:return jve(n,e,t);case 3:return Vve(n,e,t);case 4:return Wve(n,e,t);case 5:return Uve(n,e);case 6:return Gve(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function _ve(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Eve(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function Rve(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function Ave(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Dve}
    ${Ove}
    ${Pve}
  `}const Dve=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ove=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Pve=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Fve=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function $V(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Lve(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Mve(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function zve(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Vve(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Tw(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Gu(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Bve(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let u=2;u<n.length-1;u++)i*=n[n.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function Wve(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Tw(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Gu(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Uve(n,e){const t=Gu(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Gve(n,e){const t=Gu(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Hve(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ot(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function jve(n,e,t){return ot(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Hu(n){return`offset${n}`}function qve(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Ps();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function Kve(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Hu(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function Xve(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=Ps();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function Yve(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Ed(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Hu(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Qve(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=Ps();if(o!=null&&ot(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Zve(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&ot(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=cl(t),l=i;if(l.length<t.length){const d=Rd(n,l),p=["row","col"];return`
      ${_d(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${Ad(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ed(n)}
      }
    `;const u=o[0],c=o[1],h=Hu(s);return c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function Jve(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=Rd(n,d),m=["b","row","col"];return`
        ${TV(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Ad(m,p)});
        }
      `}const a=Ps();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],u=i[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function ebe(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=cl(t),u=a;if(u.length<t.length){const m=Rd(n,u),g=["row","col","depth"];return`
        ${_d(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Ad(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${Ed(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Hu(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function tbe(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Ps();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(o[i-1]/2);let d=h*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=o[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function nbe(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:u}=cl(t);if(l.length<t.length){const x=Rd(n,l),w=["row","col","depth","depth2"];return`
      ${_d(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Ad(w,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${Ed(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const y=Hu(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function sbe(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:u}=cl(e);if(l.length<e.length){const m=Rd(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${_d(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Ad(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${Ed(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Hu(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function rbe(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=cl(e);if(r.length<e.length){const g=Rd(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${_d(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Ad(y,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Ed(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Hu(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ed(n){const e=n.name,t=J(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function obe(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=NV(n.shapeInfo.logicalShape,e.logicalShape),l=Rt(i),u=i-o;let c;const h=["x","y","z","w","u","v"];o===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";i<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((x,w)=>`coords.${h[w+u]}`).join(", ");let p="return outputValue;";const m=J(n.shapeInfo.logicalShape)===1,y=J(e.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=o-2,w=o-1;a.indexOf(x)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function ibe(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&ot(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=Rt(l),c=NV(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function Rt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function GI(n,e,t){const{newShape:s,keptDims:r}=cl(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&o>1&&!ot(e,t)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Rd(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Ad(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abe(n,e,t,s){const r=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=Ive(r,i,e),l=eve(n.gl,a),u=n.createProgram(l);return ne().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},_V(n,e,u)))}function _V(n,e,t){const s=[],r=[];let o,i,a,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),ne().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,c),offset:n.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,c),d.texShape=n.getUniformLocation(t,`${h}TexShape`,c)),s.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",c),a=n.getUniformLocation(t,"outShapeStrides",c),i=n.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)r.push(n.getUniformLocation(t,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function CE(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!ot(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,l=o.isUniform?null:o.texData.texShape;if(!ot(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function lbe(n,e,t,s,r){e.program.enableShapeUniforms||(CE(e.inShapeInfos,t),CE([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),ne().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:h,shape:d,texShape:p}=e.variablesLocations[l];if(d){const{uniformShape:f}=GI(e.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(J(u.shape)<2)n.gl.uniform1f(c,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(c,f)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Le(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=r[l];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function ube(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=GI(n.packedInputs,i.shape,l);let d="",p="",f="";if(c.length===1&&n.packedInputs){const S=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${S[0]>1}_${S[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const S=Le(c);f=`${S[0]===l[1]}_${S[S.length-1]===l[1]}`}const m=i.shape.length,g=c.length===2&&ot(i.shape,l),y=J(i.shape)===1,x=Qa(i.shape,t.shape),w=!n.packedInputs&&m===t.shape.length&&ot(l,t.texData.texShape),b=n.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${w}_${u?h:""}_${c.length}_${y}_${x}_${g}_${d}_${p}_${f}_${b}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${ne().getNumber("WEBGL_VERSION")}`,o}function ws(n){return ne().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cbe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ps();this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Tw(["r","c","d"],e):Gu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hbe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ps();this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Tw(["r","c","d"],e):Gu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dbe{constructor(e){this.variableNames=["A"],this.outTexUsage=_r.DOWNLOAD;const t=Ps();this.outputShape=e,this.userCode=`
      ${IV}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pbe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_r.DOWNLOAD;const t=Ps();this.outputShape=e,this.userCode=`
      ${IV}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fbe={R:0,G:1,B:2,A:3};class kE{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Ps();this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${fbe[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?UI():WI(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mbe{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Ps();this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?UI():WI(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gbe(n){const e=Ps(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Jwe(n,t)}function ybe(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return rve(n,e)}function xbe(n){const e=new Uint16Array([0,1,2,2,1,3]);return ove(n,e)}function eg(n,e,t,s,r,o){ave(e,t);const i=ive(n),a=n.TEXTURE_2D;return _e(n,()=>n.bindTexture(a,i)),_e(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),_e(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),_e(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),_e(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),ne().getNumber("WEBGL_VERSION")===1?_e(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):_e(n,()=>n.texStorage2D(a,1,s,e,t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function EV(n){return n.internalFormatFloat}function wbe(n,e,t,s){const[r,o]=Zm(e,t);return eg(n,r,o,EV(s),s.textureFormatFloat,n.FLOAT)}function RV(n){return n.internalFormatHalfFloat}function vbe(n,e,t,s){const[r,o]=Zm(e,t);return eg(n,r,o,RV(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function AV(n){return n.downloadTextureFormat}function bbe(n,e,t,s){const[r,o]=Zm(e,t);return eg(n,r,o,AV(s),n.RGBA,n.UNSIGNED_BYTE)}function DV(n){return n.internalFormatPackedFloat}function Sbe(n,e,t,s){const[r,o]=$d(e,t);return eg(n,r,o,DV(s),n.RGBA,n.FLOAT)}function OV(n){return n.internalFormatPackedHalfFloat}function Cbe(n,e,t,s){const[r,o]=$d(e,t);return eg(n,r,o,OV(s),n.RGBA,s.textureTypeHalfFloat)}function kbe(n,e,t){return _e(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),vE(n,e,"clipSpacePos",t,3,20,0)&&vE(n,e,"uv",t,2,20,12)}function Ibe(n,e,t,s,r,o){_e(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),ne().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Nbe(n,e,t){_e(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?ne().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):ne().getNumber("WEBGL_VERSION")===2?_e(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):_e(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),_e(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Tbe(n,e,t,s){const r=n.createBuffer();_e(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return _e(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),_e(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),_e(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function $be(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function _be(n,e,t,s){const[r,o]=Zm(e,t),i=4,a=new Uint8Array(jwe(e*t,i));return _e(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Ebe(n,e,t,s,r,o,i,a){const l=n,u=new Float32Array(qwe(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Rbe(n,e,t){const s=new Float32Array(e*t*4);return _e(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ne().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Uwe(t,e)):this.gl=qo(t),e=this.gl,ne().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>_e(o,()=>o.createVertexArray()),this.bindVertexArray=i=>_e(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>_e(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>_e(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>_e(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>_e(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>_e(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>_e(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),ne().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=jg(this.gl,o),ro(this.gl,i))this.textureHalfFloatExtension=jg(this.gl,i);else if(ne().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ro(this.gl,r))this.colorBufferHalfFloatExtension=jg(this.gl,r);else if(ne().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ro(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ro(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=ybe(this.gl),this.indexBuffer=xbe(this.gl),this.framebuffer=lve(this.gl),this.textureConfig=BI(this.gl,this.textureHalfFloatExtension)}get debug(){return ne().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;_e(e,()=>e.finish()),_e(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),_e(e,()=>e.deleteFramebuffer(this.framebuffer)),_e(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),_e(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),_e(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),wbe(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),vbe(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),bbe(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Nbe(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),Ibe(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Cbe(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Sbe(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(bE(this.gl,this.framebuffer),this.outputTexture=null),_e(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>_be(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return Ebe(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return $be(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=Tbe(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(ne().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Rbe(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=gbe(t));const s=nve(t);_e(t,()=>t.attachShader(s,this.vertexShader)),_e(t,()=>t.attachShader(s,e)),sve(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Kv(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;_e(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),kbe(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(_e(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Kv(this.gl,this.program),_e(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?cve(this.gl,e,t):hve(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),_e(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),dve(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=$d(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Kv(this.gl,this.program),qg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}_e(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),_e(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=jg(this.gl,ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await d$(()=>this.disposed||this.isQueryAvailable(e,ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=Abe(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in ne().platform&&(s=ne().platform.setTimeoutCustom.bind(ne().platform)),d$(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Xv(this.gl,e,this.framebuffer),this.debug&&qg(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Xv(this.gl,this.outputTexture,this.framebuffer),this.debug&&qg(this.gl)):bE(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Xv(r,e,this.framebuffer),this.debug&&qg(r),this.outputTexture=e,_e(r,()=>r.viewport(0,0,t,s)),_e(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),_e(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Abe(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Dbe,bincountImpl:PV,bincountReduceImpl:Obe,bitwiseAndImpl:Pbe,castImpl:Fbe,ceilImpl:Lbe,concatImpl:Mbe,equalImpl:zbe,expImpl:Vbe,expm1Impl:Bbe,floorImpl:Wbe,gatherNdImpl:Ube,gatherV2Impl:Gbe,greaterImpl:Hbe,greaterEqualImpl:jbe,lessImpl:qbe,lessEqualImpl:Kbe,linSpaceImpl:Xbe,logImpl:Ybe,maxImpl:Qbe,maximumImpl:Zbe,minimumImpl:Jbe,multiplyImpl:eSe,negImpl:tSe,notEqualImpl:nSe,prodImpl:sSe,raggedGatherImpl:rSe,raggedRangeImpl:oSe,raggedTensorToTensorImpl:iSe,rangeImpl:aSe,rsqrtImpl:lSe,scatterImpl:uSe,sigmoidImpl:cSe,simpleAbsImpl:FV,sliceImpl:hSe,sparseFillEmptyRowsImpl:dSe,sparseReshapeImpl:pSe,sparseSegmentReductionImpl:LV,sqrtImpl:fSe,staticRegexReplaceImpl:mSe,stridedSliceImpl:gSe,stringNGramsImpl:ySe,stringSplitImpl:xSe,stringToHashBucketFastImpl:wSe,subImpl:vSe,tileImpl:bSe,topKImpl:SSe,transposeImpl:HI,uniqueImpl:CSe}=rL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function $s(n,e){return e===1?[n]:MV(n,e)}function kSe(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ISe{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ws(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=$s("rc",this.rank),s=Rt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zV{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${NSe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?UI():WI(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function NSe(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?kve(["r","c","d"],"inputShape"):Gu(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TSe{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=NE(t,s),o=TE(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=IE(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let a;return r===ts.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===ts.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===ts.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===ts.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===ts.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=NE(s,r),i=TE(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=IE(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=ne().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function $Se(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function IE(n,e,t,s,r){const o=_Se(e,s);let i;if(r){const[l,u]=$d(n[0],n[1]);i=l*u}else{const[l,u]=Zm(n[0],n[1]);i=l*u}const a=$Se(t,o);return i*a}function _Se(n,e){switch(n){case ts.PACKED_2X2_FLOAT32:return DV(e);case ts.PACKED_2X2_FLOAT16:return OV(e);case ts.UNPACKED_FLOAT32:return EV(e);case ts.UNPACKED_FLOAT16:return RV(e);case ts.PACKED_4X1_UNSIGNED_BYTE:return AV(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function ESe(n){return ne().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?ts.PACKED_2X2_FLOAT32:ts.UNPACKED_FLOAT32:n?ts.PACKED_2X2_FLOAT16:ts.UNPACKED_FLOAT16}function NE(n,e){if(n===_r.UPLOAD)return ts.PACKED_2X2_FLOAT32;if(n===_r.RENDER||n==null)return ESe(e);if(n===_r.DOWNLOAD||n===_r.PIXELS)return ts.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function TE(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fi{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const xo="if (isnan(x)) return x;",RSe="return x;",$E="return abs(x);",ASe="return (x >= 0.0) ? x : (exp(x) - 1.0);",DSe=xo+`
  return (x < 0.0) ? 0.0 : x;
`,OSe=xo+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wa="return x;",PSe="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FSe="return x;",LSe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,MSe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zSe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,VSe="return 1.0 / (1.0 + exp(-1.0 * x));";class Ta{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BSe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length);const t=e.length,s=$s("rc",t),r=Rt(t),o=kSe(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WSe=Gk,USe=1e-7,GSe=1e-4,Yg={};function HSe(n){return n in Yg||(Yg[n]={}),Yg[n]}const jSe=ne().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),qSe=600;function KSe(){return ne().global.screen==null?1024:ne().global.screen.height*ne().global.screen.width*window.devicePixelRatio*qSe/1024/1024}class $w extends wx{nextDataId(){return $w.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ne().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Zv)t=e;else{const s=qo(ne().getNumber("WEBGL_VERSION"),e);t=new Zv(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=qo(ne().getNumber("WEBGL_VERSION"));t=new Zv(s),this.binaryCache=HSe(ne().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TSe(this.gpgpu),this.numMBBeforeWarning=KSe(),this.texData=new V2(this,ks())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const u=Kg(t),c=new kE(u,!1,i),h=this.runWebGLProgram(c,[a],s,[[r,o]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((ne().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ne().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:_r.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(ne().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:_r.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=t;if(i!=null){let d;l?d=new Ta(a,wa):d=new fi(a,wa);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let c;u&&(c=Ms());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Uo(d,p)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Ms()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(o!=null){let f;l?f=new Ta(r,wa):f=new fi(r,wa);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(ne().getBool("DEBUG")&&!ne().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&ne().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&ne().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Hg(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=Uo(m,g)}else if(u==null)h=this.getValuesFromTexture(e);else{const f=J(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const f=this.gpgpu.gl;_e(f,()=>f.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ks().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:u}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;l?p=new Ta(o,wa):p=new fi(o,wa);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=ks().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Vo(r));return Ze(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ze(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Qwe(s))throw ne().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=J(t);if(ne().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Hg(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const i=ne().getBool("WEBGL_PACK")&&r===!0,a=i?Kg(t):t,l=i?new pbe(a):new dbe(a),u=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=ta(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=ta(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=x3(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ms(),endMs:null}}endTimer(e){return ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ms(),e)}async getQueryTime(e){if(ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=jSe){return ne().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&J(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Nr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return WSe(e.shape,t)}packedUnaryOp(e,t,s){const r=new Ta(e.shape,t),o=this.compileAndRun(r,[e],s);return ks().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=FV(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(ne().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$E,e.dtype);const t=new fi(e.shape,$E),s=this.compileAndRun(t,[e]);return ks().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Sh(s[0])){const o=s.map(i=>ji(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new BSe(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ISe(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[uh(e.shape),...ch(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[uh(t),...ch(t)],i=new zV(o,s),a=!0,l=[s],u=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const d=J(o),p=t[0]*t[1]*4;A(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Kg(o);let l;r?l=new hbe(a):l=new cbe(a);const u=!0,c=[t??Hg(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,c,u,t);return{dtype:i,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===hf.DENSE){const y=i??Hg(e.outputShape);l.texShape=y.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),J(a.shape)===0)return l.values=Bn(a.dtype,0),a;const u=[],c=t.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(y.dataId);if(x.texture==null){if(!e.packedInputs&&J(y.shape)<=ne().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!x.isPacked!=!!e.packedInputs)y=x.isPacked?this.unpackTensor(y):this.packTensor(y),u.push(y),x=this.texData.get(y.dataId);else if(x.isPacked&&!D0(x.shape,y.shape)){const w=y,b=y.shape;y.shape=x.shape,y=this.packedReshape(y,b),u.push(y),x=this.texData.get(y.dataId),w.shape=b}return{shape:y.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=ube(e,c,h),p=this.getAndSaveBinary(d,()=>abe(this.gpgpu,e,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),ne().get("ENGINE_COMPILE_ONLY")||lbe(this.gpgpu,p,c,h,r),u.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=ne().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=Ms();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!ne().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const y=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),y}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ne().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ee(()=>{if(!ne().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ne().getBool("DEBUG");ne().set("DEBUG",!1);const t=this.abs(Me(1e-8)).dataSync()[0];if(ne().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?USe:GSe}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Ms());let h=t.texShape;if(h==null&&(h=mve(s,l),t.texShape=h),o!=null){const d=Kg(s);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!g)&&([f,m]=$d(h[0],h[1])),l?p=new mbe(d,g):p=new kE(d,g);const y=g?[m,f]:h,x=this.makeTensorInfo(y,r),w=this.texData.get(x.dataId);g?w.usage=_r.PIXELS:w.usage=_r.UPLOAD,w.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const b=[[m,f]],S=!0,C=this.runWebGLProgram(p,[x],r,b,S),k=this.texData.get(C.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,ne().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=Ms()-c)}else{const d=this.acquireTexture(h,a,r,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=XSe(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*n0(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await RP(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(kV(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=_V(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,l=ks().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,s,o,i,a);return ks().makeTensorFromDataId(u,t,s,l)}}$w.nextDataId=0;function XSe(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */V3()&&rk("webgl",()=>new $w,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Su{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ue(t,s),this.enableShapeUniforms=ws(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ju=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Dd{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ue(t,s);const o=this.outputShape.length;this.enableShapeUniforms=ws(o);let i="";if(r)if(o===0||J(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Rt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=$s("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const YSe={kernelName:Gh,backendName:"webgl",kernelFunc:vr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vl(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=vr({inputs:{x:s},backend:t}),l=vr({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const QSe={kernelName:Tx,backendName:"webgl",kernelFunc:vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV="return (a < 0.) ? b * a : a;",BV=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ZSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",hl(o,"float32")),a=ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dd(BV,r.shape,i.shape):new Su(VV,r.shape,i.shape),l=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const JSe={kernelName:Zf,backendName:"webgl",kernelFunc:ZSe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV="return (a < 0.) ? b * a : a;",UV=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function eCe(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dd(UV,s.shape,r.shape):new Su(WV,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const tCe={kernelName:ym,backendName:"webgl",kernelFunc:eCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Od="if (isnan(x)) return x;";function bt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),d=t(h.values,l);return a.makeTensorInfo(i.shape,l,d)}const u=ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new Ta(i.shape,e):c=new fi(i.shape,n),a.runWebGLProgram(c,[i],l)}}function ls({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:u}=i,c=a;if(s&&l.dtype==="complex64"){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[b,S]=w,C={dataId:b.dataId,dtype:b.dtype,shape:l.shape},k={dataId:S.dataId,dtype:S.dtype,shape:u.shape},N=new Su(n,l.shape,u.shape);return c.runWebGLProgram(N,[C,k],Qn(b.dtype,S.dtype))}),x=vl({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}const h=o||Qn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){const f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?Go(f):f,y=l.dtype==="string"?Go(m):m,[x,w]=r(l.shape,u.shape,g,y,h),b=c.makeTensorInfo(w,h),S=c.texData.get(b.dataId);return S.values=x,b}const d=ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Dd(e,l.shape,u.shape,t):p=new Su(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function df(n,e=!1){if(n==="linear")return e?FSe:RSe;if(n==="relu")return e?MSe:DSe;if(n==="elu")return e?LSe:ASe;if(n==="relu6")return e?zSe:OSe;if(n==="prelu")return e?UV:WV;if(n==="leakyrelu")return e?BV:VV;if(n==="sigmoid")return e?VSe:PSe;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GV{constructor(e,t,s,r=!1,o=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=ws(this.outputShape.length);const c=r?e[1]:e[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,y="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class EE{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ue(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE="return a * b;";function qI(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=Qn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),u=new EE(_E.REAL,s.shape,r.shape),c=new EE(_E.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=vl({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[u,c]=eSe(s.shape,r.shape,a.values,l.values,o),h=t.makeTensorInfo(c,o),d=t.texData.get(h.dataId);return d.values=u,h}let i;return ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Dd(RE,s.shape,r.shape):i=new Su(RE,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const nCe={kernelName:Jh,backendName:"webgl",kernelFunc:qI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sCe(n,e,t){const s=[uh(n.shape),...ch(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[uh(e),...ch(e)],i=new zV(o,s),a=!0,l=[s],u=t.runWebGLProgram(i,[r],n.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=J(r.shape),l=W2(o,a),u=J(l);A(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(r.dataId);return c.isPacked&&!D0(r.shape,l)&&!(c.texture!==null&&D0(c.shape,l))?sCe(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const rCe={kernelName:wm,backendName:"webgl",kernelFunc:Se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AE{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${Yc(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oCe{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iCe(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=K1(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function qu(n,e,t,s){const r=iCe(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:u}=r[i];let c,h;t==="mean"?c=i===0?new AE({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},a):new AE({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u}):c=new oCe({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:u},t),h=o,o=s.runWebGLProgram(c,[o],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aCe{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=Rt(this.rank),o=lCe(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function lCe(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uCe{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let c=0;c<s.length;c++)s[c]=e[t[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Rt(this.rank),o=MV("rc",this.rank),i=new Array(this.rank);for(let c=0;c<t.length;c++)i[t[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(n,e,t){const s=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uCe(n.shape,e):new aCe(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cCe(n,e,t,s){const r=e,o=n.shape.length,i=et(r,n.shape);let a=i;const l=At(a,o),u=l!=null;let c=n;u&&(c=_w(n,l,s),a=Vt(a.length,o)),En("sum",a,o);const[h,d]=Sn(c.shape,a);let p=h;t&&(p=gn(h,i));const f=J(d),g=J(n.shape)/f,y=Se({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),x=x1(n.dtype),w=qu(y,x,"sum",s),b=Se({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),u&&s.disposeIntermediateTensorInfo(c),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return cCe(r,o,i,t)}const hCe={kernelName:Im,backendName:"webgl",kernelFunc:Ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(i.shouldExecuteOnCPU([r])){const h=i.texData.get(r.dataId).values,d=HI(h,r.shape,r.dtype,o,l);u=i.makeTensorInfo(l,r.dtype);const p=i.texData.get(u.dataId);p.values=d}else u=_w(r,o,i);return u}const dCe={kernelName:Xl,backendName:"webgl",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV=1e3;function O0({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape.length,c=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],d=s?e.shape[c-1]:e.shape[c-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[c-2]:e.shape[c-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=J(m),x=J(g),b=Ue(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);A(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const S=t?[y,h,p]:[y,p,h],C=s?[x,f,d]:[x,d,f],k=Se({inputs:{x:n},backend:r,attrs:{shape:S}}),N=Se({inputs:{x:e},backend:r,attrs:{shape:C}}),_=[k,N],E=Math.max(y,x),D=t?k.shape[1]:k.shape[2],P=o!=null,F=i!=null,L=l==="leakyrelu",B=l!=null?df(l,!0):null,W=P||F||L||B!=null;let Y;if((p===1||f===1)&&D>HV&&W===!1){let H=k,Z=N;t&&(H=As({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),_.push(H)),s&&(Z=As({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),_.push(Z));const te=f!==1,re=f===1;let le=H;te&&(le=Se({inputs:{x:H},backend:r,attrs:{shape:[E,D,1]}}),_.push(le));const he=f===1?2:1;let ie=Z;re&&(ie=Se({inputs:{x:Z},backend:r,attrs:{shape:[E,1,D]}}),_.push(ie));const de=qI({inputs:{a:le,b:ie},backend:r});Y=Ew({inputs:{x:de},backend:r,attrs:{axis:he,keepDims:!0}}),_.push(de)}else{const H=Qn(n.dtype,e.dtype),Z=new GV(S,C,[E,p,f],t,s,P,B,F,L),te=[k,N];if(o!=null&&te.push(o),F&&te.push(i),L){const re=r.makeTensorInfo([],"float32",hl(a,"float32"));te.push(re),_.push(re)}Y=r.runWebGLProgram(Z,te,H)}const z=Se({inputs:{x:Y},backend:r,attrs:{shape:b}});_.push(Y);for(const H of _)r.disposeIntermediateTensorInfo(H);return z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pCe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return O0({a:r,b:o,transposeA:l,transposeB:u,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const fCe={kernelName:qp,backendName:"webgl",kernelFunc:pCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE="return abs(x);";function mCe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=FV(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ta(s.shape,DE):r=new fi(s.shape,DE),t.runWebGLProgram(r,[s],s.dtype)}const gCe={kernelName:Rf,backendName:"webgl",kernelFunc:mCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yCe=xo+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,xCe=bt({opSnippet:yCe}),wCe={kernelName:kh,backendName:"webgl",kernelFunc:xCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vCe=xo+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bCe=bt({opSnippet:vCe}),SCe={kernelName:Ih,backendName:"webgl",kernelFunc:bCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE="return a + b;",CCe=ls({opSnippet:OE,packedOpSnippet:OE,supportsComplex:!0,cpuKernelImpl:Dbe}),kCe={kernelName:Eu,backendName:"webgl",kernelFunc:CCe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ICe{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NCe{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yy(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return vr({inputs:{x:s[0]},backend:t});if(s.length>ne().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=yy({inputs:s.slice(0,l),backend:t}),c=yy({inputs:s.slice(l),backend:t});return yy({inputs:[u,c],backend:t})}const r=s.map(l=>l.dtype).reduce((l,u)=>Qn(l,u)),o=s.map(l=>l.shape),a=ne().getBool("WEBGL_PACK")?new NCe(s[0].shape,o):new ICe(s[0].shape,o);return t.runWebGLProgram(a,s,r)}const TCe={kernelName:Af,backendName:"webgl",kernelFunc:yy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Ce(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=et(o,r.shape);let u=l;const c=At(u,a);let h=r;c!=null&&(h=As({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Vt(u.length,a)),En("all",u,a);const[d,p]=Sn(h.shape,u),f=J(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=qu(m,m.dtype,"all",t);let y;if(i){const x=gn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const _Ce={kernelName:vx,backendName:"webgl",kernelFunc:$Ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ECe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=et(o,r.shape);let u=l;const c=At(u,a);let h=r;c!=null&&(h=As({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Vt(u.length,a)),En("any",u,a);const[d,p]=Sn(h.shape,u),f=J(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=qu(m,m.dtype,"any",t);let y;if(i){const x=gn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const RCe={kernelName:bx,backendName:"webgl",kernelFunc:ECe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ACe{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DCe{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=Rt(l),c=$s("coords",l);let h,d;if(i===1){d=l+1;const N=Rt(d);h=`
        ${N} sourceLocR = ${N}(${c.join()}, 0);
        ++${c[l-1]};
        ${N} sourceLocG = ${N}(${c.join()}, 0);
        ++${c[l-2]};
        ${N} sourceLocA = ${N}(${c.join()}, 0);
        --${c[l-1]};
        ${N} sourceLocB = ${N}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(N=>"int "+N),g=$s("sourceLocR",d-1).concat("inIdx.r"),y=$s("sourceLocG",d-1).concat("inIdx.g"),x=$s("sourceLocB",d-1).concat("inIdx.b"),w=$s("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",S=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,k=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${S}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=K1(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new ACe(a,t,s==null),u=[e];s!=null&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=jV(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function qV(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=K1(o),a=new DCe(r,i,t,s==null),l=s==null?[e]:[e,s],u=n.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=qV(n,e,t,u);return n.disposeIntermediateTensorInfo(u),c}return u}function KV(n,e,t,s){const r=[t];if(En("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!ne().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),o.push(l));const[u,c]=Sn(l.shape,r),h=J(c),d=Se({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=jV(n,d,s);o.push(p);const f=Se({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return qV(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=As({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),En("argMax",[i[0]],l.shape.length);const c=KV(t,l,i[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const PCe={kernelName:Df,backendName:"webgl",kernelFunc:OCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=et(o,r.shape);const a=At(i,r.shape.length);let l=r;const u=[];a!=null&&(l=As({inputs:{x:r},backend:t,attrs:{perm:a}}),u.push(l),i=Vt(i.length,l.shape.length)),En("argMin",[i[0]],l.shape.length);const c=KV(t,l,i[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const LCe={kernelName:Of,backendName:"webgl",kernelFunc:FCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MCe=xo+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,zCe=bt({opSnippet:MCe}),VCe={kernelName:Nh,backendName:"webgl",kernelFunc:zCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BCe=xo+"return log(x + sqrt(x * x + 1.0));",WCe=bt({opSnippet:BCe}),UCe={kernelName:Th,backendName:"webgl",kernelFunc:WCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GCe=xo+`
  return atan(x);
`,HCe=bt({opSnippet:GCe}),jCe={kernelName:$h,backendName:"webgl",kernelFunc:HCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qCe=jI+`
  return atan(a, b);
`,KCe=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ju+`
  return result;
`,XCe=ls({opSnippet:qCe,packedOpSnippet:KCe}),YCe={kernelName:Eh,backendName:"webgl",kernelFunc:XCe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QCe=xo+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ZCe=bt({opSnippet:QCe}),JCe={kernelName:_h,backendName:"webgl",kernelFunc:ZCe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pf{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const N=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(b="avgValue / max(count, 1.0)");const S=Math.floor(i/4)*4,C=i%4,k=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${S}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${S};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${b});
      }
    `}}class KI{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),s){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${y}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const S="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const k=Math.floor(i/4)*4,N=i%4,_=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${S}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${y}, ${x});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${_}
            }

            int xC = xCCorner + ${k};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${_}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Jm(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;A(Un(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ys(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&ot(c.inShape,c.outShape))return vr({inputs:{x:r},backend:t});const h=new pf(c,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const t2e={kernelName:Pf,backendName:"webgl",kernelFunc:e2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,l,u),d=new KI(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const s2e={kernelName:Ff,backendName:"webgl",kernelFunc:n2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r2e{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class o2e{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2e(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Vr(i.shape,a,l,h,u,c),p=new o2e(d);return t.runWebGLProgram(p,[r],i.dtype)}const a2e={kernelName:Cx,backendName:"webgl",kernelFunc:i2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2e(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Jm([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=s,c=ys(i.shape,a,l,1,u),h=new r2e(c);return t.runWebGLProgram(h,[r],i.dtype)}const u2e={kernelName:Sx,backendName:"webgl",kernelFunc:l2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2e(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return O0({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const h2e={kernelName:Lf,backendName:"webgl",kernelFunc:c2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d2e{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ue(e,t),Ue(e,s);let a="0.0";r!=null&&(Ue(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Ue(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p2e{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ue(e,t),Ue(e,s);let a="vec4(0.0)";r!=null&&(Ue(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Ue(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f2e=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;A(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[s,r,o];let c=null;i!=null&&(c=i.shape,u.push(i));let h=null;a!=null&&(h=a.shape,u.push(a));const d=ne().getBool("WEBGL_PACK_NORMALIZATION")?new p2e(s.shape,r.shape,o.shape,c,h,l):new d2e(s.shape,r.shape,o.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},m2e={kernelName:Xf,backendName:"webgl",kernelFunc:f2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g2e{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Rt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=y2e(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${oC[a]} = start[${a}] + coords.${oC[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const oC=["x","y","z","w","u","v"];function y2e(n){if(n===1)return"sourceLoc";if(n<=6)return oC.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x2e{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Rt(this.rank),s=$s("coords",this.rank),r=$s("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2e(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=eI(e,Le(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function Pd(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=zm(r,o,i);if(G1(r,a,l),J(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),d=hSe(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=t.texData.get(r.dataId),c=Jk(r.shape,a,l);if(u||!c){const h=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new x2e(l):new g2e(l),d=[a];return t.runWebGLProgram(h,[r],r.dtype,d)}return t.uploadToGPU(r.dataId),w2e(r,a,l,t)}const v2e={kernelName:km,backendName:"webgl",kernelFunc:Pd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b2e=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;A(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((x,w)=>x*w),l=Fu(r.shape,o,a),u=Lu(l.length,o.length),c=Mu(r.shape,o,a),h=Y1(i,o.length),d=Q1(c,i,o.length),p=[],f=Se({inputs:{x:r},backend:t,attrs:{shape:l}}),m=As({inputs:{x:f},backend:t,attrs:{perm:u}}),g=Se({inputs:{x:m},backend:t,attrs:{shape:c}}),y=Pd({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),y},S2e={kernelName:Mf,backendName:"webgl",kernelFunc:b2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),l=t.readSync(o.dataId),u=PV(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,u)}const k2e={kernelName:kx,backendName:"webgl",kernelFunc:C2e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I2e=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,N2e=`
  return float(int(a.r) & int(b.r));
`;function T2e(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=ne().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=ne().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||i===1){const l=t.texData.get(s.dataId).values,u=t.texData.get(r.dataId).values,[c,h]=Pbe(s.shape,r.shape,l,u,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=c,d}let a;return o?a=new Dd(I2e,s.shape,r.shape,!1):a=new Su(N2e,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const $2e={kernelName:Ix,backendName:"webgl",kernelFunc:T2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2e(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Ue(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const E2e={kernelName:Nx,backendName:"webgl",kernelFunc:_2e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R2e="return float(a != b);",XV=ls({opSnippet:R2e,cpuKernelImpl:nSe,dtype:"bool"}),A2e={kernelName:dm,backendName:"webgl",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tg(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return vr({inputs:{x:r.complexTensorInfos.real},backend:t})}const D2e={kernelName:t1,backendName:"webgl",kernelFunc:tg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2e="return float(int(x));";function P2e(n,e){const t=new fi(n.shape,O2e),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return vr({inputs:{x:r},backend:t});const i=wn(r.shape),a=iC({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=vl({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=tg({inputs:{input:r},backend:t}),a=iC({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!U2(r.dtype,o)){const i=vr({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,l,u]=Fbe(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,u)}if(o==="int32")return P2e(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",Bn("bool",1)),l=XV({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const F2e={kernelName:Rh,backendName:"webgl",kernelFunc:iC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE="return ceil(x);",L2e=bt({opSnippet:PE,packedOpSnippet:PE,cpuKernelImpl:Lbe}),M2e={kernelName:Ah,backendName:"webgl",kernelFunc:L2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z2e{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V2e{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;ne().getBool("WEBGL_PACK_CLIP")?a=new V2e(r.shape):a=new z2e(r.shape);const l=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,l)}const W2e={kernelName:Dh,backendName:"webgl",kernelFunc:B2e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U2e{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function G2e(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new U2e(s.shape),i=[FE(s,r.complexTensorInfos.real),FE(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const H2e={kernelName:zf,backendName:"webgl",kernelFunc:G2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j2e{constructor(e){this.outputShape=[],this.outputShape=Gs(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q2e{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gs(e,t);const s=this.outputShape,r=s.length,o=Rt(r),i=$s("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let m=1;m<l.length;m++)l[m]=l[m-1]+e[m][t];const u=a[t],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${Qg(a,u,g)}),
            vec2(${Qg(c,u,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${Qg(a,u,f)}),
          vec2(${Qg(c,u,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Qg(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return vr({inputs:{x:r.complexTensorInfos.imag},backend:t})}const K2e={kernelName:Hx,backendName:"webgl",kernelFunc:Rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>tg({inputs:{input:x},backend:t})),f=n.map(x=>Rw({inputs:{input:x},backend:t})),m=fp(p,e,t),g=fp(f,e,t),y=vl({inputs:{real:m,imag:g},backend:t});return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(b=>{const C=[-1,J(b.shape.slice(e))];return Se({inputs:{x:b},backend:t,attrs:{shape:C}})}),f=p.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),m=Gs(p.map(b=>b.shape),1),g=p[0].shape[0]===1,y=Mbe(f,m,s,g),x=Gs(n.map(b=>b.shape),e),w=t.makeTensorInfo(x,s,y);return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const o=n.filter(p=>J(p.shape)>0),i=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new fi(n[0].shape,wa):new Ta(n[0].shape,wa);return t.runWebGLProgram(p,n,s)}const a=ne().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let m=0;m<o.length;m+=a){const g=o.slice(m,m+a);p.push(fp(g,e,t))}const f=fp(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new q2e(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:u}=X2e(o,e,t),c=new j2e(l.map(p=>p.shape)),h=t.runWebGLProgram(c,l,s);l.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Se({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function X2e(n,e,t){const s=Gs(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>Se({inputs:{x:o},attrs:{shape:[-1,J(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=et(r,e[0].shape)[0],i=e.map(u=>u.shape);q1(i,o);const a=Gs(e.map(u=>u.shape),o);if(J(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>J(u.shape)>0);return l.length===1?vr({inputs:{x:l[0]},backend:t}):fp(l,o,t)}const Y2e={kernelName:Vf,backendName:"webgl",kernelFunc:YV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,x=g?2:3,w=g?3:1;let b="",S="";s&&(r?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,S="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${S}
        setOutput(result);
      }
    `}}class Q2e{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZV{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ws(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const y=g*2;if(d+=`
           xC = xCCorner + ${y*l};
           `,a===1){if(y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }
               `,l===1&&y>0?d+=`
                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                   } else {
                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xC${y} = xTexelC${y};
                 `,y+1<c)){const x=i%2===0?B2(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${y+1}.zw = vec2(0.0);
                     }
                     xTexelC${y+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                     } else {
                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                     }
                     `:d+=`
                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                     `):x===1?d+=`
                     xC${y+1} = xTexelC${y};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${y+1}.zw = vec2(0.0);
                       }
                       xTexelC${y+1}Ready = 1;
                     }

                     xC${y+1} = xTexelC${y+1};
                     `}}else y<c&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.0);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
               `,y+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                   xTexelC${y} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${y}.zw = vec2(0.0);
                   }
                   xTexelC${y}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${y+1}.zw = vec2(0.);
                   }
                   xTexelC${y+1}Ready = 1;
                 }

                 xC${y} = vec4(
                   xTexelC${y}.xy, xTexelC${y+1}.xy);
               `,y+1<c&&(d+=`
                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                 `)));y<c&&(d+=`
             wTexel = getW(r, ${y}, d1, d2);
             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,y+1<c&&(d+=`
               wTexel = getW(r, ${y+1}, d1, d2);
               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z2e{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ws(this.outputShape.length);const{dataFormat:s}=t,r=Ps(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function JV({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,u=s.texData.get(n.dataId),c=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[];if(o!=null){const b=P0(o.shape,p);b!=null&&(o=Se({inputs:{x:o},backend:s,attrs:{shape:b}}),y.push(o))}if(r!=null){const b=P0(r.shape,p);b!=null&&(r=Se({inputs:{x:r},backend:s,attrs:{shape:b}}),y.push(r))}if(!((h===1||d===1)&&c>HV)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&ot(u.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),S={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},C=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,A(D0(u.shape,S.shape),()=>`packed reshape ${u.shape} to ${S.shape} isn't free`);const k=Se({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(k);const N=O0({a:S,b:k,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),_=s.texData.get(N.dataId);A(_.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=C,_.shape=t.outShape,g=vr({inputs:{x:N},backend:s}),g.shape=t.outShape,y.push(N)}else{const b=t.outHeight*t.outWidth,S=Se({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),C=Se({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),k=O0({a:p?S:C,b:p?C:S,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});g=Se({inputs:{x:k},backend:s,attrs:{shape:t.outShape}}),y.push(S),y.push(C),y.push(k)}for(const b of y)s.disposeIntermediateTensorInfo(b);return g}function eB({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=l*u*c,g=d*h,y=[t.batchSize,m,g],x=!0,w=!1,b=[];if(o!=null){const z=P0(o.shape,f);z!=null&&(o=Se({inputs:{x:o},backend:s,attrs:{shape:z}}),b.push(o))}if(r!=null){const z=P0(r.shape,f);z!=null&&(r=Se({inputs:{x:r},backend:s,attrs:{shape:z}}),b.push(r))}const S=Se({inputs:{x:e},backend:s,attrs:{shape:[1,m,J(e.shape)/m]}});b.push(S);const C=new Z2e(y,t),k=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],N=s.runWebGLProgram(C,[n],"float32",k),_=Se({inputs:{x:N},backend:s,attrs:{shape:y}});b.push(N),b.push(_);const E=r!=null,D=o!=null,P=a==="leakyrelu",F=a?df(a,!0):null,L=new GV(f?_.shape:S.shape,f?S.shape:_.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],x,w,E,F,D,P),B=f?[_,S]:[S,_];if(r&&B.push(r),D&&B.push(o),P){const z=s.makeTensorInfo([],"float32",hl(i,"float32"));B.push(z),b.push(z)}const W=s.runWebGLProgram(L,B,"float32"),Y=Se({inputs:{x:W},backend:s,attrs:{shape:t.outShape}});b.push(W);for(const z of b)s.disposeIntermediateTensorInfo(z);return Y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Sr(l),d=zt(r.shape,o.shape,i,u,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=JV({x:r,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&ne().getBool("WEBGL_EXP_CONV")){const m=new ZV(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[r,o],"float32",g)}else if(ne().getBool("WEBGL_CONV_IM2COL"))p=eB({x:r,filter:o,convInfo:d,backend:t});else{const m=new QV(d);p=t.runWebGLProgram(m,[r,o],"float32")}const f=Se({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const eke={kernelName:Bf,backendName:"webgl",kernelFunc:J2e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tke{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class nke{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,u=i?1:2,c=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ske{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class rke{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=s-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Sr(l),d=zt(r.shape,c,i,1,a,u,!1,h),p=new tke(d);return t.runWebGLProgram(p,[r,o],"float32")}const ike={kernelName:$x,backendName:"webgl",kernelFunc:oke};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ake{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ws(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lke(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Sr(u),d=zt(i,o.shape,a,1,l,c,!1,h);if(ne().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new ake(d);return t.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new nke(d);return t.runWebGLProgram(p,[r,o],"float32")}}const uke={kernelName:Wf,backendName:"webgl",kernelFunc:lke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=Jo(r.shape,o.shape,i,l,a),c=new Q2e(u);return t.runWebGLProgram(c,[r,o],"float32")}const hke={kernelName:Uf,backendName:"webgl",kernelFunc:cke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,u=Jo(r.shape,l,i,1,a),c=new ske(u);return t.runWebGLProgram(c,[r,o],"float32")}const pke={kernelName:_x,backendName:"webgl",kernelFunc:dke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fke(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,u=Jo(l,o.shape,a,1,i),c=new rke(u);return t.runWebGLProgram(c,[r,o],"float32")}const mke={kernelName:Ex,backendName:"webgl",kernelFunc:fke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gke=Od+`
  return cos(x);
`,yke=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ju}
  return result;
`,xke=bt({opSnippet:gke,packedOpSnippet:yke}),wke={kernelName:Oh,backendName:"webgl",kernelFunc:xke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vke=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,bke=bt({opSnippet:vke}),Ske={kernelName:Ph,backendName:"webgl",kernelFunc:bke};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cke{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,u]=e,[c]=t,[h,d]=s;this.outputShape=[c,h,d,u];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${l-1}.0`],[g,y,x]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,b,S]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${b};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${S};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kke=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:u}=s,c=new Cke(r.shape,o.shape,a,l,u);return t.runWebGLProgram(c,[r,o,i],"float32")},Ike={kernelName:Ax,backendName:"webgl",kernelFunc:kke};var ff;(function(n){n.Prod="*",n.Sum="+"})(ff||(ff={}));class LE{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===ff.Prod?"1.0":"0.0",a=s?i:`getX(${ME(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";s?(u=r?`end != ${l-1}`:"end != 0",c=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${l}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Rt(o)} coords = getOutputCoords();
        int end = ${zE(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${zE(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${ME(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ME(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function zE(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,e,t,s,r,o){const i=e.shape.length,a=At([s],i);let l=e;a!=null&&(l=As({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=Vt(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=vr({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new LE(n,l.shape,!1,o),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const d=new LE(n,l.shape,r,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=Ei(a),p=As({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return tB(ff.Prod,r,t,o,i,a)}const Tke={kernelName:Rx,backendName:"webgl",kernelFunc:Nke};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return tB(ff.Sum,r,t,o,i,a)}const _ke={kernelName:Gf,backendName:"webgl",kernelFunc:$ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=PV(l,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}else if(r.shape.length===2){const l=t.bufferSync(r),u=t.bufferSync(o),c=Obe(l,u,i,a);return t.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Rke={kernelName:Dx,backendName:"webgl",kernelFunc:Eke};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ake{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=u*o,p=c/(o*o),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new Ake(f,o,i);return t.runWebGLProgram(m,[r],r.dtype)}const Oke={kernelName:Ox,backendName:"webgl",kernelFunc:Dke};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nB{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ws(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ws(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<h;y++)p+=`
          vec4 xTexelC${y*2};
          int xTexelC${y*2}Ready;
          vec4 xTexelC${y*2+1};
          int xTexelC${y*2+1}Ready;
          vec4 xC${y};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let y=0;y<h;y++)p+=`
          xTexelC${y*2} = vec4(0.0);
          xTexelC${y*2}Ready = 0;
          xTexelC${y*2+1} = vec4(0.0);
          xTexelC${y*2+1}Ready = 0;
          xC${y} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let y=0;y<(d+1)/2;y++){const x=y*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,l===1){if(x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const w=a%2===0?B2(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):w===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=s;let c=l;c==null&&(c=[1,1]),A(Un(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=zt(r.shape,o.shape,i,c,a,u,!0);let d;ne().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new sB(h):d=new nB(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[r,o],"float32",p)}const Fke={kernelName:Hf,backendName:"webgl",kernelFunc:Pke};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lke{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Mke{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=s,h=zt(r.shape,c,i,a,l,u,!0),d=new Lke(h);return t.runWebGLProgram(d,[r,o],"float32")}const Vke={kernelName:Px,backendName:"webgl",kernelFunc:zke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bke(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=s,h=zt(c,o.shape,i,a,l,u,!0),d=new Mke(h);return t.runWebGLProgram(d,[r,o],"float32")}const Wke={kernelName:Fx,backendName:"webgl",kernelFunc:Bke};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uke{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gke(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=J(s.shape),i=Se({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new Uke(o),l=t.runWebGLProgram(a,[i],i.dtype),u=Se({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}const Hke={kernelName:Lx,backendName:"webgl",kernelFunc:Gke};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jke{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,u=fl(r.shape,o.shape,i,a,"NHWC",l);let c;const h=new jke(u);c=t.runWebGLProgram(h,[r,o],"float32");const d=Se({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const Kke={kernelName:jf,backendName:"webgl",kernelFunc:qke};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xke(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=rw(r,o.length);iw(i.length,l,o);const{path:u,steps:c}=aw(a,l),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:y,expandDims:x}=ow(p,l[g]);let w;lw(y)?w=o[g]:(w=As({inputs:{x:o[g]},backend:t,attrs:{perm:y}}),f.push(w));const b=w.shape.slice();for(let S=0;S<x.length;++S)b.splice(x[S],0,1);ot(w.shape,b)||(w=Se({inputs:{x:w},backend:t,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=qI({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Ew({inputs:{x:d},backend:t,attrs:{axis:u[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const Yke={kernelName:Mx,backendName:"webgl",kernelFunc:Xke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qke="return (x >= 0.0) ? x : (exp(x) - 1.0);",Zke=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Jke=bt({opSnippet:Qke,packedOpSnippet:Zke}),eIe={kernelName:Lh,backendName:"webgl",kernelFunc:Jke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tIe="return (b >= 0.0) ? a : a * (b + 1.0);",nIe=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,sIe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dd(nIe,s.shape,r.shape):new Su(tIe,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},rIe={kernelName:zx,backendName:"webgl",kernelFunc:sIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oIe=`
  return vec4(equal(a, b));
`,iIe="return float(a == b);",aIe=ls({opSnippet:iIe,packedOpSnippet:oIe,dtype:"bool",cpuKernelImpl:zbe}),lIe={kernelName:qf,backendName:"webgl",kernelFunc:aIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uIe=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Z1};
  float a1 = ${J1};
  float a2 = ${ew};
  float a3 = ${tw};
  float a4 = ${nw};
  float a5 = ${sw};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,cIe=bt({opSnippet:uIe}),hIe={kernelName:Mh,backendName:"webgl",kernelFunc:cIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dIe=Od+`
  return exp(x);
`,pIe=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rB=bt({opSnippet:dIe,packedOpSnippet:pIe,cpuKernelImpl:Vbe,dtype:"float32"}),fIe={kernelName:zh,backendName:"webgl",kernelFunc:rB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(A(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),Se({inputs:{x:o},backend:s,attrs:{shape:a}})}const mIe={kernelName:Kf,backendName:"webgl",kernelFunc:aC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE="return exp(x) - 1.0;",gIe=bt({opSnippet:VE,packedOpSnippet:VE,cpuKernelImpl:Bbe}),yIe={kernelName:Vh,backendName:"webgl",kernelFunc:gIe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BE{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,e,t){const s=t.texData.get(n.dataId),r=J(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=Se({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),l=a.shape,u=new BE("real",l,e),c=new BE("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(u,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),f=vl({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=Se({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xIe(n){const{inputs:e,backend:t}=n,{input:s}=e;return oB(s,!1,t)}const wIe={kernelName:Vx,backendName:"webgl",kernelFunc:xIe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vIe{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||_u(r),o==="string"){const i=dn(o,J(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new vIe(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const bIe={kernelName:Bx,backendName:"webgl",kernelFunc:ng};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SIe{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CIe={kernelName:Wx,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new SIe(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE="return floor(x);",kIe=bt({opSnippet:WE,packedOpSnippet:WE,cpuKernelImpl:Wbe}),IIe={kernelName:Bh,backendName:"webgl",kernelFunc:kIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NIe=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,TIe=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,$Ie=ls({opSnippet:NIe,packedOpSnippet:TIe,dtype:"int32"}),_Ie={kernelName:Wh,backendName:"webgl",kernelFunc:$Ie};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EIe{constructor(e){this.variableNames=["A"];const t=Ps(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RIe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ps(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AIe={kernelName:o0,backendName:"webgl",kernelFunc:DIe};let sc,Jv=ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function DIe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,o];if(a||i){const m=ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(sc==null||m!==Jv)&&(Jv=m,sc=document.createElement("canvas").getContext("2d",{willReadFrequently:Jv})),sc.canvas.width=l,sc.canvas.height=u,sc.drawImage(r,0,0,l,u),r=sc.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=_r.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),r);const p=ne().getBool("WEBGL_PACK")?new RIe(h):new EIe(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Sr(c),g=zt(r.shape,o.shape,l,h,u,d,!1,m);let y;const x=[],w=i!=null,b=a!=null,S=p==="leakyrelu",C=()=>{const N=[r,o],_=(E,D)=>{if(D==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const P=Se({inputs:{x:E},backend:t,attrs:{shape:[E.shape[0],1,1]}});return x.push(P),P}return E};if(w&&N.push(_(i,c)),b&&N.push(_(a,c)),S){const E=t.makeTensorInfo([],"float32",hl(f,"float32"));N.push(E),x.push(E)}return N};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=JV({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&ne().getBool("WEBGL_EXP_CONV")){const N=p?df(p,!0):null,_=new ZV(g,w,N,b,S),E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],D=C();y=t.runWebGLProgram(_,D,"float32",E)}else if(ne().getBool("WEBGL_CONV_IM2COL"))y=eB({x:r,filter:o,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const N=p?df(p,!1):null,_=new QV(g,w,N,b,S),E=C();y=t.runWebGLProgram(_,E,"float32")}const k=Se({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return x.push(y),x.forEach(N=>t.disposeIntermediateTensorInfo(N)),k}const PIe={kernelName:Kp,backendName:"webgl",kernelFunc:OIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),A(Un(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=zt(r.shape,o.shape,l,m,u,h,!0),y=ne().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?df(d,y):null,w=[r,o],b=i!=null,S=a!=null,C=d==="leakyrelu";if(b&&w.push(i),S&&w.push(a),C){const E=t.makeTensorInfo([],"float32",hl(p,"float32"));w.push(E),f.push(E)}let k;y?k=new sB(g,b,x,S,C):k=new nB(g,b,x,S,C);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=t.runWebGLProgram(k,w,"float32",N);return f.forEach(E=>t.disposeIntermediateTensorInfo(E)),_}const LIe={kernelName:Xp,backendName:"webgl",kernelFunc:FIe};class MIe{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=Rt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zIe(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=J(s.shape),[l,u,c,h]=U1(s,r),d=Se({inputs:{x:r},backend:t,attrs:{shape:[u,i]}}),p=Se({inputs:{x:s},backend:t,attrs:{shape:[J(s.shape)/c,c]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const y=t.readSync(r.dataId),x=t.bufferSync(s),w=Ube(y,x,s.dtype,u,i,c,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,w.values)}const f=new MIe(i,h,[u,c],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=Se({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const VIe={kernelName:Ux,backendName:"webgl",kernelFunc:zIe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BIe{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Rt(this.rank),r=WIe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function WIe(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=et(i,r.shape)[0];if(ne().get("DEBUG")){const x=t.readSync(o.dataId),w=r.shape[l];for(let b=0;b<x.length;++b){const S=x[b];A(S<=w-1&&S>=0,()=>`GatherV2: the index value ${S} is not in [0, ${w-1}]`)}}const u=cw(r,o,l,a),c=J(o.shape),h=[],d=Se({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=Se({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=t.bufferSync(p),w=t.bufferSync(d),b=Gbe(w,x,f);return h.forEach(S=>t.disposeIntermediateTensorInfo(S)),t.makeTensorInfo(u.outputShape,b.dtype,b.values)}const m=new BIe(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=Se({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),y}const UIe={kernelName:Yf,backendName:"webgl",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GIe="return float(a > b);",HIe=`
  return vec4(greaterThan(a, b));
`,jIe=ls({opSnippet:GIe,packedOpSnippet:HIe,cpuKernelImpl:Hbe,dtype:"bool"}),qIe={kernelName:Qf,backendName:"webgl",kernelFunc:jIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KIe="return float(a >= b);",XIe=`
  return vec4(greaterThanEqual(a, b));
`,YIe=ls({opSnippet:KIe,packedOpSnippet:XIe,dtype:"bool",cpuKernelImpl:jbe}),QIe={kernelName:Uh,backendName:"webgl",kernelFunc:YIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZIe(n){const{inputs:e,backend:t}=n,{input:s}=e;return oB(s,!0,t)}const JIe={kernelName:Gx,backendName:"webgl",kernelFunc:ZIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eNe="return float(!isnan(x) && !isinf(x));",tNe=bt({opSnippet:eNe,dtype:"bool"}),nNe={kernelName:Hh,backendName:"webgl",kernelFunc:tNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sNe="return float(isinf(x));",rNe=bt({opSnippet:sNe,dtype:"bool"}),oNe={kernelName:jh,backendName:"webgl",kernelFunc:rNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iNe="return float(isnan(x));",aNe=bt({opSnippet:iNe,dtype:"bool"}),lNe={kernelName:qh,backendName:"webgl",kernelFunc:aNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uNe="return float(a < b);",cNe=`
  return vec4(lessThan(a, b));
`,hNe=ls({opSnippet:uNe,packedOpSnippet:cNe,cpuKernelImpl:qbe,dtype:"bool"}),dNe={kernelName:Jf,backendName:"webgl",kernelFunc:hNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pNe="return float(a <= b);",fNe=`
  return vec4(lessThanEqual(a, b));
`,mNe=ls({opSnippet:pNe,packedOpSnippet:fNe,cpuKernelImpl:Kbe,dtype:"bool"}),gNe={kernelName:em,backendName:"webgl",kernelFunc:mNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yNe(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=Xbe(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const xNe={kernelName:jx,backendName:"webgl",kernelFunc:yNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wNe=Od+`
  return x < 0.0 ? 0./0. : log(x);
`,vNe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,bNe=bt({opSnippet:wNe,packedOpSnippet:vNe,cpuKernelImpl:Ybe}),SNe={kernelName:Kh,backendName:"webgl",kernelFunc:bNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CNe=Od+`
  return log(1.0 + x);
`,kNe=bt({opSnippet:CNe}),INe={kernelName:Xh,backendName:"webgl",kernelFunc:kNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NNe="return float(a >= 1.0 && b >= 1.0);",TNe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,$Ne=ls({opSnippet:NNe,packedOpSnippet:TNe,dtype:"bool"}),_Ne={kernelName:tm,backendName:"webgl",kernelFunc:$Ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENe="return float(!(x >= 1.0));",RNe=bt({opSnippet:ENe}),ANe={kernelName:nm,backendName:"webgl",kernelFunc:RNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DNe="return float(a >= 1.0 || b >= 1.0);",ONe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,PNe=ls({opSnippet:DNe,packedOpSnippet:ONe,dtype:"bool"}),FNe={kernelName:sm,backendName:"webgl",kernelFunc:PNe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LNe{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MNe{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${u})`:o===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zNe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,u=ne().getBool("WEBGL_PACK_NORMALIZATION")?new MNe(r.shape,o,i,a,l):new LNe(r.shape,o,i,a,l);return t.runWebGLProgram(u,[r],r.dtype)},VNe={kernelName:rm,backendName:"webgl",kernelFunc:zNe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BNe{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WNe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=s,h=new BNe(r.shape,a,l,u,c);return t.runWebGLProgram(h,[r,o,i],r.dtype)},UNe={kernelName:qx,backendName:"webgl",kernelFunc:WNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GNe(n,e,t,s){const r=J(e),i=J(n.shape)/r,a=Se({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=qu(a,n.dtype,"max",s),u=Se({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=et(o,r.shape);let u=l;const c=At(u,a),h=c!=null,d=t.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const w=t.texData.get(p.dataId).values,b=new Array(a);for(let k=0;k<b.length;k++)b[k]=r.shape[c[k]];const S=HI(w,r.shape,r.dtype,c,b);p=t.makeTensorInfo(b,r.dtype);const C=t.texData.get(p.dataId);C.values=S}else p=_w(r,c,t);u=Vt(u.length,a)}En("max",u,a);const[f,m]=Sn(p.shape,u);let g=f;i&&(g=gn(f,l));let y;if(d){const w=t.texData.get(p.dataId).values,b=Qbe(w,J(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const S=t.texData.get(y.dataId);S.values=b}else y=GNe(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),y}const HNe={kernelName:om,backendName:"webgl",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jNe=jI+`
  return max(a, b);
`,qNe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ju+`
  return result;
`,KNe=ls({opSnippet:jNe,packedOpSnippet:qNe,cpuKernelImpl:Zbe}),XNe={kernelName:Yh,backendName:"webgl",kernelFunc:KNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YNe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Jm(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,u=1;A(Un(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=ys(r.shape,o,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&ot(c.inShape,c.outShape))return vr({inputs:{x:r},backend:t});const h=new pf(c,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const QNe={kernelName:im,backendName:"webgl",kernelFunc:YNe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZNe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Vr(r.shape,o,i,c,a,u,l),d=new KI(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const JNe={kernelName:am,backendName:"webgl",kernelFunc:ZNe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eTe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,u=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class tTe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,p=c-1-e.padInfo.left,f=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nTe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Vr(i.shape,a,l,h,u,c),p=new KI(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new tTe(d),g=t.runWebGLProgram(m,[r,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const sTe={kernelName:Xx,backendName:"webgl",kernelFunc:nTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rTe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Jm([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ys(a.shape,l,u,1,c,h),p=!0,f=new pf(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new eTe(d),y=t.runWebGLProgram(g,[r,m],a.dtype);return t.disposeIntermediateTensorInfo(m),y}const oTe={kernelName:Kx,backendName:"webgl",kernelFunc:rTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iTe(n,e,t,s){let r=new pf(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new pf(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aTe={kernelName:Yx,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;A(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];A(Un(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=ys(s.shape,r,o,u,i),[h,d]=iTe(s,a,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lTe(n,e,t,s){const r=J(e),i=J(n.shape)/r,a=Se({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=qu(a,"float32","mean",s),u=Se({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uTe={kernelName:lm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,l=et(o,s.shape);let u=l;const c=At(u,a),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const b=i.texData.get(f.dataId).values,S=new Array(a);for(let N=0;N<S.length;N++)S[N]=s.shape[c[N]];const C=HI(b,s.shape,s.dtype,c,S);f=i.makeTensorInfo(S,s.dtype);const k=i.texData.get(f.dataId);k.values=C}else f=_w(s,c,i);p.push(f),u=Vt(u.length,a)}En("sum",u,a);const[m,g]=Sn(f.shape,u);let y=m;r&&(y=gn(m,l));const x=lTe(f,g,y,i);for(const w of p)i.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cTe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=et(o,r.shape);let u=l;const c=At(u,a);let h=r;c!=null&&(h=As({inputs:{x:r},backend:t,attrs:{perm:c}}),u=Vt(u.length,r.shape.length)),En("min",u,a);const[d,p]=Sn(h.shape,u),f=J(p),m=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=qu(m,m.dtype,"min",t);let y;if(i){const x=gn(d,l);y=Se({inputs:{x:g},backend:t,attrs:{shape:x}})}else y=Se({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),y}const hTe={kernelName:um,backendName:"webgl",kernelFunc:cTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dTe=jI+`
  return min(a, b);
`,pTe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ju+`
  return result;
`,fTe=ls({opSnippet:dTe,packedOpSnippet:pTe,cpuKernelImpl:Jbe}),mTe={kernelName:Qh,backendName:"webgl",kernelFunc:fTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gTe{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=Rt(r),i=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yTe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=Rt(r),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),l=$s("rc",r),u=$s("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xTe=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yTe(s.shape,r,o):new gTe(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},wTe={kernelName:cm,backendName:"webgl",kernelFunc:xTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vTe=`if (b == 0.0) return NAN;
  return mod(a, b);`,bTe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ju+`
  return result;
`,STe=ls({opSnippet:vTe,packedOpSnippet:bTe}),CTe={kernelName:Zh,backendName:"webgl",kernelFunc:STe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kTe{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ITe=`
if (a == b) {
  return 1.0;
};
return a / b;`,NTe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,lB=ls({opSnippet:ITe,packedOpSnippet:NTe,checkOutOfBounds:!0}),TTe={kernelName:Fh,backendName:"webgl",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UE="return a - b;",uB=ls({opSnippet:UE,packedOpSnippet:UE,supportsComplex:!0,cpuKernelImpl:vSe}),$Te={kernelName:fd,backendName:"webgl",kernelFunc:uB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=et([o],r.shape),a=aB({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=gn(a.shape,i),u=Se({inputs:{x:a},backend:t,attrs:{shape:l}}),c=uB({inputs:{a:r,b:u},backend:t}),h=rB({inputs:{x:c},backend:t}),d=Ew({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=Se({inputs:{x:d},backend:t,attrs:{shape:l}}),f=lB({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const _Te={kernelName:$m,backendName:"webgl",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ETe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:cB({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new kTe(u,c,o),d=[[i]],p=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),p}const RTe={kernelName:Qx,backendName:"webgl",kernelFunc:ETe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATe=xo+`
  return -x;
`,DTe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function OTe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=tSe(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ta(s.shape,DTe):r=new fi(s.shape,ATe),t.runWebGLProgram(r,[s],s.dtype)}const PTe={kernelName:hm,backendName:"webgl",kernelFunc:OTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FTe=B1;function LTe(n){Nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),{selectedIndices:h}=FTe(u,c,i,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const MTe={kernelName:Zx,backendName:"webgl",kernelFunc:LTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zTe=qk;function VTe(n){Nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=zTe(c,h,i,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const BTe={kernelName:q2,backendName:"webgl",kernelFunc:VTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WTe=W1;function UTe(n){Nr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=i,p=a,f=l,m=u,{selectedIndices:g,selectedScores:y}=WTe(c,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const GTe={kernelName:Jx,backendName:"webgl",kernelFunc:UTe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HTe{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jTe=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,u=J(r.shape),c=new HTe(u,i,a,l),h=Se({inputs:{x:r},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...r.shape,i],f=Se({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},qTe={kernelName:fm,backendName:"webgl",kernelFunc:jTe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=tg({inputs:{input:s},backend:t}),o=F0({inputs:{x:r},backend:t}),i=Rw({inputs:{input:s},backend:t}),a=F0({inputs:{x:i},backend:t}),l=vl({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return ng({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const KTe={kernelName:Rm,backendName:"webgl",kernelFunc:F0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=tg({inputs:{input:s},backend:t}),o=hB({inputs:{x:r},backend:t}),i=Rw({inputs:{input:s},backend:t}),a=F0({inputs:{x:i},backend:t}),l=vl({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return ng({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const XTe={kernelName:pm,backendName:"webgl",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YTe(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return aC({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{Zs(o,c.shape,"All tensors passed to stack must have matching shapes"),A(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=aC({inputs:{input:c},backend:t,attrs:{dim:r}});return a.push(h),h}),u=YV({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const QTe={kernelName:mm,backendName:"webgl",kernelFunc:YTe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZTe{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const r=e.length,o=Rt(r),i=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JTe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=Rt(r),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),l=$s("rc",r),u=$s("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(J(r.shape)===0){const u=o.map((c,h)=>c[0]+r.shape[h]+c[1]);return ng({backend:t,attrs:{shape:u,value:i,dtype:r.dtype}})}const a=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JTe(r.shape,o,i):new ZTe(r.shape,o,i),l=[[i]];return t.runWebGLProgram(a,[r],r.dtype,l)},e$e={kernelName:gm,backendName:"webgl",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t$e=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,n$e=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ju+`
  return result;
`,s$e=ls({opSnippet:t$e,packedOpSnippet:n$e}),r$e={kernelName:ed,backendName:"webgl",kernelFunc:s$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],u=et(o,r.shape);let c=u;const h=At(c,a);let d=r;h!=null&&(d=As({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Vt(c.length,a),l.push(d)),En("prod",c,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=sSe(d.shape,d.dtype,f,c);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=Sn(d.shape,c),g=J(m),y=Se({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),x=x1(r.dtype),w=qu(y,x,"prod",t);p=Se({inputs:{x:w},backend:t,attrs:{shape:f}}),l.push(y),l.push(w)}if(i){l.push(p);const f=gn(p.shape,u);p=Se({inputs:{x:p},backend:t,attrs:{shape:f}})}return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const i$e={kernelName:xm,backendName:"webgl",kernelFunc:o$e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$e(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(y=>t.readSync(y.dataId)),u=r.map(y=>y.shape),c=t.readSync(o.dataId),h=t.readSync(i.dataId),[d,p,f]=rSe(l,u,c,o.shape,o.dtype,h,i.shape,a),m=d.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const l$e={kernelName:K2,backendName:"webgl",kernelFunc:a$e};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$e(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=oSe(i,s.shape,s.dtype,a,r.shape,l,o.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const c$e={kernelName:X2,backendName:"webgl",kernelFunc:u$e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$e(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,u=t.readSync(r.dataId),c=t.readSync(o.dataId),h=t.readSync(i.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=iSe(u,r.shape,c,o.shape,o.dtype,h,i.shape,d,p,l);return t.makeTensorInfo(f,o.dtype,m)}const d$e={kernelName:Y2,backendName:"webgl",kernelFunc:h$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=aSe(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},p$e={kernelName:e1,backendName:"webgl",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f$e="return 1.0 / x;",m$e=bt({opSnippet:f$e}),g$e={kernelName:td,backendName:"webgl",kernelFunc:m$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$e=xo+`
  return (x < 0.0) ? 0.0 : x;
`,x$e=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,w$e=bt({opSnippet:y$e,packedOpSnippet:x$e}),v$e={kernelName:nd,backendName:"webgl",kernelFunc:w$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$e=xo+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,S$e=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,C$e=bt({opSnippet:b$e,packedOpSnippet:S$e}),k$e={kernelName:sd,backendName:"webgl",kernelFunc:C$e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I$e{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N$e{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=ne().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new N$e(r.shape,l,u,o,i):new I$e(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],"float32")}const $$e={kernelName:bm,backendName:"webgl",kernelFunc:T$e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _$e{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new _$e(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const R$e={kernelName:s1,backendName:"webgl",kernelFunc:E$e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A$e{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D$e{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,u]=e;this.outputShape=[i,t,s,u];const c=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,u]=a,c=ne().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new D$e(r.shape,l,u,o,i):new A$e(r.shape,l,u,o,i);return t.runWebGLProgram(c,[r],r.dtype)}const P$e={kernelName:vm,backendName:"webgl",kernelFunc:O$e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F$e{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],u=[s&&i>1?i-1:i,s&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L$e(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new F$e(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const M$e={kernelName:n1,backendName:"webgl",kernelFunc:L$e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z$e{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=Rt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V$e{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=$s("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=Rt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${i}) {
            result.b = ${c(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((x,w)=>p(w,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=et(o,r.shape);if(i===0)return vr({inputs:{x:r},backend:t});const l=ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new V$e(r.shape,a):new z$e(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const W$e={kernelName:Sm,backendName:"webgl",kernelFunc:B$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U$e{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$e={kernelName:g1,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new U$e(s.shape,o),[u,c]=X1(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$e=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,j$e=bt({opSnippet:H$e}),q$e={kernelName:rd,backendName:"webgl",kernelFunc:j$e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K$e="return inversesqrt(x);",X$e=bt({opSnippet:K$e,cpuKernelImpl:lSe}),Y$e={kernelName:od,backendName:"webgl",kernelFunc:X$e};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XI{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=Rt(o.length),c=Rt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${y};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q$e{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=Rt(o.length),c=Rt(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,y=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${y};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$e(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ai(o,r,i),d=[h/u,u];if(h===0)return t.makeTensorInfo(i,r.dtype);const p=Se({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),f=Se({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;ne().getBool("WEBGL_PACK")?g=new Q$e(l,a,p.shape.length,f.shape.length,c,d):g=new XI(l,a,p.shape.length,f.shape.length,c,d);const y=t.runWebGLProgram(g,[f,p,m],f.dtype),x=Se({inputs:{x:y},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),x}const J$e={kernelName:r1,backendName:"webgl",kernelFunc:Z$e};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e_e{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=ne().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_e(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new e_e(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",l)}const n_e={kernelName:i1,backendName:"webgl",kernelFunc:t_e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s_e{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);r=l.join(),o=u.join()}const i=Rt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_e(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new s_e(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],Qn(r.dtype,o.dtype))}const o_e={kernelName:Cm,backendName:"webgl",kernelFunc:r_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i_e=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Vm};
  float scale = ${Bm};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,a_e=bt({opSnippet:i_e}),l_e={kernelName:id,backendName:"webgl",kernelFunc:a_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_e=Od+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,c_e=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,h_e=bt({opSnippet:u_e,packedOpSnippet:c_e,cpuKernelImpl:cSe}),d_e={kernelName:cd,backendName:"webgl",kernelFunc:h_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_e=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,f_e=bt({opSnippet:p_e}),m_e={kernelName:ud,backendName:"webgl",kernelFunc:f_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_e=Od+`
  return sin(x);
`,y_e=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ju}
  return result;
`,x_e=bt({opSnippet:g_e,packedOpSnippet:y_e}),w_e={kernelName:ad,backendName:"webgl",kernelFunc:x_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_e=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,b_e=bt({opSnippet:v_e}),S_e={kernelName:ld,backendName:"webgl",kernelFunc:b_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C_e=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,k_e=bt({opSnippet:C_e}),I_e={kernelName:hd,backendName:"webgl",kernelFunc:k_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_e=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;A(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((y,x)=>y*x),l=[[0,0]];l.push(...i);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=dB({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=Fu(c.shape,o,a,!1),d=Lu(h.length,o.length,!1),p=Mu(c.shape,o,a,!1),f=Se({inputs:{x:c},backend:t,attrs:{shape:h}}),m=As({inputs:{x:f},backend:t,attrs:{perm:d}}),g=Se({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},T_e={kernelName:Nm,backendName:"webgl",kernelFunc:N_e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_e(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),u=t.readSync(o.dataId),c=t.readSync(i.dataId)[0],[h,d,p,f,m]=dSe(a,s.shape,s.dtype,l,r.dtype,u,c);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const __e={kernelName:Q2,backendName:"webgl",kernelFunc:$_e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_e(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(o.dataId)),[u,c,h]=pSe(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(c,s.dtype,u),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const R_e={kernelName:Z2,backendName:"webgl",kernelFunc:E_e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_e(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=LV(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(c,s.dtype,u)}const D_e={kernelName:a1,backendName:"webgl",kernelFunc:A_e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_e(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[u,c]=LV(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(c,s.dtype,u)}const P_e={kernelName:l1,backendName:"webgl",kernelFunc:O_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_e(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Ai(o,r,a),p=!1;if(o.dtype==="string"){const y=t.bufferSync(r),x=t.bufferSync(o),w=Vo(t.readSync(i.dataId)[0]),b=uSe(y,x,a,d,c,u,l,h,w,p);return t.makeTensorInfo(a,b.dtype,b.values)}const f=new XI(u,l,r.shape.length,o.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[o,r,i],o.dtype),g=Se({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const L_e={kernelName:u1,backendName:"webgl",kernelFunc:F_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=et(i,r.shape)[0],l=uw(r,o,a),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[a]=d;const f=Pd({inputs:{x:r},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,f})}const z_e={kernelName:Tm,backendName:"webgl",kernelFunc:M_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE="return sqrt(x);",V_e=bt({opSnippet:GE,packedOpSnippet:GE,cpuKernelImpl:fSe}),B_e={kernelName:dd,backendName:"webgl",kernelFunc:V_e};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_e="return x * x;",U_e=bt({opSnippet:W_e}),G_e={kernelName:c1,backendName:"webgl",kernelFunc:U_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE="return (a - b) * (a - b);",H_e=ls({opSnippet:HE,packedOpSnippet:HE}),j_e={kernelName:pd,backendName:"webgl",kernelFunc:H_e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),i=Go(o),a=mSe(i,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const K_e={kernelName:h1,backendName:"webgl",kernelFunc:q_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_e({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=xo+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new fi(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const Y_e={kernelName:xd,backendName:"webgl",kernelFunc:X_e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_e{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Rt(s.length),i=Rt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((u,c)=>(l++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:w,strides:b}=j1(r.shape,o,i,a,l,u,c,h,d);let S;if(m)S=Se({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){A(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=H1(x,w,b),N=Pd({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});S=Se({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(N)}else if(t.shouldExecuteOnCPU([r])){const N=t.readSync(r.dataId),_=Ze(r.shape,r.dtype,N),E=gSe(p,_,b,x);S=t.makeTensorInfo(f,r.dtype,E.values)}else{const N=new Q_e(x,b,p);S=t.runWebGLProgram(N,[r],r.dtype)}const C=Se({inputs:{x:S},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(S),C}const J_e={kernelName:d1,backendName:"webgl",kernelFunc:Z_e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eEe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[f,m]=ySe(d,p,r,o,i,a,l,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const tEe={kernelName:p1,backendName:"webgl",kernelFunc:eEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nEe(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),l=t.readSync(i.dataId)[0],[u,c,h]=xSe(a,l,r),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const sEe={kernelName:J2,backendName:"webgl",kernelFunc:nEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rEe(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=wSe(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const oEe={kernelName:ek,backendName:"webgl",kernelFunc:rEe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iEe="return tan(x);",aEe=bt({opSnippet:iEe}),lEe={kernelName:md,backendName:"webgl",kernelFunc:aEe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uEe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,cEe=bt({opSnippet:uEe}),hEe={kernelName:gd,backendName:"webgl",kernelFunc:cEe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dEe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ai(i,o,r.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(r.shape,o.dtype);const p=Se({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),f=Se({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),m=Se({inputs:{x:r},backend:t,attrs:{shape:d}}),g=new XI(l,a,p.shape.length,f.shape.length,c,d,!1,!0),y=t.runWebGLProgram(g,[f,p,m],m.dtype),x=Se({inputs:{x:y},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),x}const pEe={kernelName:o1,backendName:"webgl",kernelFunc:dEe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fEe{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=Rt(this.rank),o=mEe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function mEe(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>Vo(d)):l,c=Ze(r.shape,r.dtype,u),h=bSe(c,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new fEe(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const gEe={kernelName:yd,backendName:"webgl",kernelFunc:fB};class yEe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class xEe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function jE(n){let e=1;for(;e<n;)e*=2;return e}function wEe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=ne().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ne().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([r])||c<a||o>l){const E=t.readSync(r.dataId),[D,P]=SSe(E,u,r.dtype,o,i);return[t.makeTensorInfo(D.shape,D.dtype,D.values),t.makeTensorInfo(P.shape,P.dtype,P.values)]}if(o===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[r,ng({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(r):r,m=J(u)/c,g=Se({inputs:{x:p},attrs:{shape:[m,c]},backend:t});d&&Nl(t,p);const y=jE(o),x=jE(c);let w=null;const b=()=>w===null?[g,g]:[g,w],S=(E,D,P)=>{const F=b(),L=new yEe(P),W=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[E],[D]],Y=w;w=t.runWebGLProgram(L,F,"int32",W),Nl(t,Y)};for(let E=1;E<y;E*=2){const D=E*2;for(let P=E;P>=1;P/=2)S(D,P,[m,x])}for(let E=x;E>y;E/=2){const D=b(),P=new xEe([m,E/2]),L=[[c],[w===null?1:0],[y]],B=w;w=t.runWebGLProgram(P,D,"int32",L),Nl(t,B);const W=y/2,Y=W*2;for(let z=W;z>=1;z/=2)S(Y,z,w.shape)}let C=w;w=Pd({inputs:{x:w},backend:t,attrs:{begin:0,size:[m,o]}}),Nl(t,C);let k=iB({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});Nl(t,g);const N=u.slice(0,-1);N.push(o),C=w,w=Se({inputs:{x:w},attrs:{shape:N},backend:t}),Nl(t,C);const _=k;return k=Se({inputs:{x:k},attrs:{shape:N},backend:t}),Nl(t,_),[k,w]}const vEe={kernelName:f1,backendName:"webgl",kernelFunc:wEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bEe{constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SEe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new bEe(h,d,i,a,l,g);return t.runWebGLProgram(y,[r,o],"float32")}const CEe={kernelName:m1,backendName:"webgl",kernelFunc:SEe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kEe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Jm(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:u}=CSe(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([u.length],"int32",u)]}const IEe={kernelName:tk,backendName:"webgl",kernelFunc:kEe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NEe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],u=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==o&&(u[c++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=Pd({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),y=Se({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const TEe={kernelName:_m,backendName:"webgl",kernelFunc:NEe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Ee{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",u="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Ee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let u=0;const c=At([u],a);let h=r;c!=null&&(h=As({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(h),u=Vt(1,a)[0]);const d=sI(h.shape,u,i),p=J([h.shape[u]]),f=Se({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});l.push(f);const m=x1(r.dtype),g=(b,S,C,k,N)=>{const _=b.shape[0],E=b.shape[1],D=JP(E,N),P={windowSize:D,inSize:E,batchSize:_,numSegments:N},F=new $Ee(P,S),L=t.compileAndRun(F,[b,C],k);if(l.push(L),L.shape[1]===N)return L;const B=pB({backend:t,attrs:{start:0,stop:N,step:1,dtype:"float32"}}),W=fB({inputs:{x:B},backend:t,attrs:{reps:[E/D]}});return l.push(B),l.push(W),g(L,S,W,k,N)},y=g(f,"unsortedSegmentSum",o,m,i),x=Se({inputs:{x:y},backend:t,attrs:{shape:d}});let w=x;if(c!=null){l.push(x);const b=Ei(c);w=As({inputs:{x:w},backend:t,attrs:{perm:b}})}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const EEe={kernelName:Em,backendName:"webgl",kernelFunc:_Ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const REe=[fCe,gCe,wCe,SCe,kCe,TCe,_Ce,RCe,PCe,LCe,VCe,UCe,jCe,YCe,JCe,t2e,s2e,a2e,u2e,h2e,m2e,S2e,k2e,$2e,E2e,F2e,M2e,W2e,QSe,H2e,Y2e,eke,ike,uke,hke,pke,mke,wke,Ske,Ike,Tke,_ke,Rke,Oke,Fke,Vke,Wke,Hke,Kke,Yke,eIe,rIe,lIe,hIe,fIe,mIe,yIe,wIe,bIe,CIe,IIe,_Ie,AIe,PIe,LIe,VIe,UIe,qIe,QIe,YSe,JIe,K2e,nNe,oNe,lNe,JSe,dNe,gNe,xNe,SNe,INe,_Ne,ANe,FNe,VNe,UNe,HNe,XNe,QNe,JNe,sTe,oTe,aTe,uTe,hTe,mTe,wTe,CTe,RTe,nCe,PTe,MTe,BTe,GTe,A2e,qTe,XTe,QTe,e$e,r$e,tCe,i$e,l$e,c$e,d$e,p$e,D2e,TTe,g$e,v$e,k$e,rCe,$$e,R$e,P$e,M$e,W$e,G$e,q$e,Y$e,J$e,n_e,o_e,l_e,d_e,m_e,w_e,S_e,v2e,_Te,I_e,T_e,__e,R_e,D_e,P_e,L_e,z_e,B_e,G_e,j_e,K_e,Y_e,J_e,tEe,sEe,oEe,$Te,hCe,lEe,hEe,pEe,gEe,vEe,CEe,dCe,IEe,TEe,EEe,KTe];for(const n of REe)nk(n);const eb=()=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768;function AEe(n){const[e,t]=He.useState(null),[s,r]=He.useState(!1),[o,i]=He.useState(!1),a=He.useRef(null),l=He.useRef(),u=He.useRef(!1),c=He.useRef(0),h=He.useRef(eb()?150:0),d=async()=>{console.log("Initializing pose detector...");try{const g=eb();console.log("Detected platform:",g?"mobile":"desktop"),await C8(),g?await N$("webgl"):await N$("webgl"),console.log("TensorFlow ready, using backend:",Jc());const y=xi.MoveNet,x=W_.modelType.SINGLEPOSE_LIGHTNING,w=await Tde(y,{modelType:x,enableSmoothing:!0,minPoseScore:g?.15:.2,multiPoseMaxDimension:g?256:512});a.current=w,i(!0),console.log("Pose detector initialized successfully")}catch(g){throw console.error("Failed to initialize detector:",g),g}},p=async()=>{if(!n.current||!a.current||!o)return;const g=n.current.video;if(!g||g.readyState!==4)return;const y=performance.now();if(h.current>0&&y-c.current<h.current){s&&(l.current=requestAnimationFrame(p));return}c.current=y;try{const x=performance.now(),w=eb(),b={flipHorizontal:!1,maxPoses:1},S=await a.current.estimatePoses(g,b),C=performance.now()-x;if(window.dispatchEvent&&window.dispatchEvent(new CustomEvent("performanceUpdate",{detail:{type:"detectionLatency",value:C}})),w&&C>100&&(h.current=Math.min(300,C*1.5),console.log(`Detection time: ${C.toFixed(0)}ms, adjusted interval to ${h.current.toFixed(0)}ms`)),S.length>0){u.current||(console.log("Detected keypoint names:",S[0].keypoints.map(N=>N.name)),u.current=!0);const k=S.map(N=>({...N,keypoints:N.keypoints.map(_=>({..._,name:_.name,x:_.x/g.videoWidth,y:_.y/g.videoHeight,score:_.score||0})).filter(_=>!w||_.score>.2)}));t(k)}}catch(x){console.error("Pose detection error:",x)}s&&(l.current=requestAnimationFrame(p))},f=He.useCallback(async()=>{console.log("Starting pose detection...");try{a.current||await d(),r(!0),p()}catch(g){throw console.error("Failed to start detection:",g),g}},[]),m=He.useCallback(()=>{console.log("Stopping pose detection..."),r(!1),l.current&&cancelAnimationFrame(l.current)},[]);return He.useEffect(()=>(s&&p(),()=>{l.current&&cancelAnimationFrame(l.current)}),[s]),{poses:e,startDetection:f,stopDetection:m,modelLoaded:o}}function DEe({selectedBodyParts:n,onBackToSetup:e}){const[t,s]=He.useState(!1),[r,o]=He.useState(""),[i,a]=He.useState(!1),l=He.useRef(null),{poses:u,startDetection:c,stopDetection:h}=AEe(l),{generateMusic:d,stopMusic:p,currentPreset:f,isMobile:m}=y3();He.useEffect(()=>{t&&u&&d(u,n)},[u,t,n,d]),He.useEffect(()=>{t&&console.log("Performance started with body parts:",n)},[t,n]);const g=async()=>{try{if(o(""),t){h(),p(),s(!1);return}try{console.log("Setting up audio context before starting performance..."),C2(new Tu({latencyHint:m?"interactive":"balanced",lookAhead:m?.1:.2,updateInterval:m?.03:.05})),await k2(),console.log("Started Tone.js context successfully")}catch(y){console.warn("Audio initialization warning:",y);try{await Io.resume(),console.log("Resumed existing audio context")}catch(x){throw console.error("Could not resume audio context:",x),new Error("Could not initialize audio. Please try again.")}}try{await c(),console.log("Pose detection started successfully"),s(!0)}catch(y){throw console.error("Detection error:",y),new Error("Could not start pose detection. Please check camera permissions.")}}catch(y){console.error("Performance start error:",y),o(y.message||"Failed to start performance")}};return ue.jsxs("div",{className:"performance-view",children:[ue.jsxs("div",{className:"controls",children:[ue.jsx("button",{onClick:e,className:"button secondary",children:"Back to Setup"}),ue.jsxs("button",{onClick:g,className:"button",children:[t?"Stop":"Start"," Performance"]}),m&&ue.jsxs("div",{className:"mobile-mode-indicator",children:[ue.jsx("span",{children:"📱"})," Mobile Optimized"]})]}),r&&ue.jsxs("div",{className:"error-message",children:[ue.jsx("span",{children:"⚠️"}),r]}),ue.jsxs("div",{className:"performance-area",children:[ue.jsx("div",{className:"webcam-container",children:ue.jsx(g3,{ref:l,poses:u})}),ue.jsxs("div",{className:"status-panel",children:[ue.jsxs("div",{className:"body-parts-panel",children:[ue.jsx("h3",{children:"Selected Body Parts"}),ue.jsx(oD,{selectedParts:n}),n.length===0&&ue.jsx("p",{style:{textAlign:"center",color:"#888",marginTop:"1rem"},children:"No body parts selected"})]}),ue.jsx("div",{className:"music-controls",children:ue.jsx(A5,{isActive:t,poses:u,selectedBodyParts:n})})]})]}),i&&u&&u[0]&&ue.jsx("div",{className:"debug-panel",children:ue.jsxs("details",{children:[ue.jsx("summary",{children:"Debug Info"}),ue.jsxs("div",{children:[ue.jsxs("p",{children:["Poses detected: ",u.length]}),ue.jsxs("p",{children:["Keypoints: ",u[0].keypoints.length]}),u[0].keypoints.map((y,x)=>{var b;const w=n.includes(y.name||"");return ue.jsxs("div",{style:{color:w?"#88ff88":"#cccccc",fontWeight:w?"bold":"normal"},children:[y.name,": ",(b=y.score)==null?void 0:b.toFixed(2)]},x)})]})]})}),ue.jsx("button",{onClick:()=>a(!i),style:{position:"fixed",bottom:"1rem",left:"1rem",opacity:.3,background:"black",color:"white",border:"none",borderRadius:"4px",padding:"0.25rem 0.5rem",fontSize:"0.75rem",cursor:"pointer"},children:"Debug"})]})}const mB=He.createContext(void 0),OEe=()=>{const n=He.useContext(mB);if(!n)throw new Error("useTheme must be used within a ThemeProvider");return n},PEe=({children:n})=>{const[e,t]=He.useState(()=>localStorage.getItem("theme")||"dark");return He.useEffect(()=>{localStorage.setItem("theme",e),document.documentElement.setAttribute("data-theme",e)},[e]),ue.jsx(mB.Provider,{value:{theme:e,setTheme:t},children:n})};function FEe(){const{theme:n,setTheme:e}=OEe();return ue.jsxs("div",{className:"theme-selector",children:[ue.jsx("label",{htmlFor:"theme-select",children:"Theme:"}),ue.jsxs("select",{id:"theme-select",value:n,onChange:t=>e(t.target.value),"aria-label":"Select theme",children:[ue.jsx("option",{value:"dark",children:"Dark Mode"}),ue.jsx("option",{value:"light",children:"Light Mode"}),ue.jsx("option",{value:"highContrast",children:"High Contrast"})]})]})}function LEe(){const[n,e]=He.useState("welcome"),[t,s]=He.useState([]);He.useEffect(()=>{const a=document.querySelector(".github-corner");a&&a.remove()},[]);const r=()=>{e("setup")},o=a=>{s(a),e("performance")},i=()=>{e("setup")};return ue.jsx(PEe,{children:ue.jsxs("div",{className:"App",children:[ue.jsx("header",{className:"app-header",children:ue.jsx(FEe,{})}),ue.jsxs("main",{id:"main-content",children:[n==="welcome"&&ue.jsx(OU,{onStart:r}),n==="setup"&&ue.jsx(LU,{onComplete:o}),n==="performance"&&ue.jsx(DEe,{selectedBodyParts:t,onBackToSetup:i})]})]})})}tb.createRoot(document.getElementById("root")).render(ue.jsx(S4.StrictMode,{children:ue.jsx(LEe,{})}));
